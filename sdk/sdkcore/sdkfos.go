// Copyright 2020 Fortinet, Inc. All rights reserved.
// Author: Hongbin Lu (@fgtdev-hblu), Frank Shen (@frankshen01)
// Documentation:
// Hongbin Lu (@fgtdev-hblu), Frank Shen (@frankshen01),
// Xing Li (@lix-fortinet), Yue Wang (@yuew-ftnt)

// Description: Description: SDK for FortiManager Provider

package forticlient

import (
	"fmt"
)

// UpdateDvmCmdAddDevList API operation for FortiManager updates the specified CmdAddDev List.
// Returns the index value of the CmdAddDev List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd add dev-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdAddDevList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/add/dev-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateDvmCmdAddDevice API operation for FortiManager updates the specified CmdAddDevice.
// Returns the index value of the CmdAddDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd add device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdAddDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/add/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateDvmCmdDelDevList API operation for FortiManager updates the specified CmdDelDev List.
// Returns the index value of the CmdDelDev List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd del dev-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdDelDevList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/del/dev-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateDvmCmdDelDevice API operation for FortiManager updates the specified CmdDelDevice.
// Returns the index value of the CmdDelDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd del device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdDelDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/del/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateDvmCmdUpdateDevList API operation for FortiManager updates the specified CmdUpdateDev List.
// Returns the index value of the CmdUpdateDev List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd update dev-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdUpdateDevList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/update/dev-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateDvmCmdUpdateDevice API operation for FortiManager updates the specified CmdUpdateDevice.
// Returns the index value of the CmdUpdateDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvm - cmd update device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmCmdUpdateDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvm/cmd/update/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// CreateDvmdbAdom API operation for FortiManager creates a new Adom.
// Returns the index value of the Adom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateDvmdbAdom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateDvmdbAdom API operation for FortiManager updates the specified Adom.
// Returns the index value of the Adom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbAdom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteDvmdbAdom API operation for FortiManager deletes the specified Adom.
// Returns error for service API and SDK errors.
// See the dvmdb - adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteDvmdbAdom(mkey string, paradict map[string]string) (err error) {
	path := "/dvmdb/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadDvmdbAdom API operation for FortiManager gets the Adom
// with the specified index value.
// Returns the requested Adom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadDvmdbAdom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/dvmdb/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateDvmdbDeviceVdom API operation for FortiManager creates a new DeviceVdom.
// Returns the index value of the DeviceVdom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - device vdom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateDvmdbDeviceVdom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/device/{device}/vdom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateDvmdbDeviceVdom API operation for FortiManager updates the specified DeviceVdom.
// Returns the index value of the DeviceVdom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - device vdom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbDeviceVdom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/device/{device}/vdom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteDvmdbDeviceVdom API operation for FortiManager deletes the specified DeviceVdom.
// Returns error for service API and SDK errors.
// See the dvmdb - device vdom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteDvmdbDeviceVdom(mkey string, paradict map[string]string) (err error) {
	path := "/dvmdb/[*]/device/{device}/vdom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadDvmdbDeviceVdom API operation for FortiManager gets the DeviceVdom
// with the specified index value.
// Returns the requested DeviceVdom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - device vdom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadDvmdbDeviceVdom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/dvmdb/[*]/device/{device}/vdom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateDvmdbGroup API operation for FortiManager creates a new Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateDvmdbGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateDvmdbGroup API operation for FortiManager updates the specified Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteDvmdbGroup API operation for FortiManager deletes the specified Group.
// Returns error for service API and SDK errors.
// See the dvmdb - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteDvmdbGroup(mkey string, paradict map[string]string) (err error) {
	path := "/dvmdb/[*]/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadDvmdbGroup API operation for FortiManager gets the Group
// with the specified index value.
// Returns the requested Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadDvmdbGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/dvmdb/[*]/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateDvmdbRevision API operation for FortiManager creates a new Revision.
// Returns the index value of the Revision and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - revision chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateDvmdbRevision(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/revision"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateDvmdbRevision API operation for FortiManager updates the specified Revision.
// Returns the index value of the Revision and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - revision chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbRevision(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/revision"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteDvmdbRevision API operation for FortiManager deletes the specified Revision.
// Returns error for service API and SDK errors.
// See the dvmdb - revision chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteDvmdbRevision(mkey string, paradict map[string]string) (err error) {
	path := "/dvmdb/[*]/revision"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadDvmdbRevision API operation for FortiManager gets the Revision
// with the specified index value.
// Returns the requested Revision value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - revision chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadDvmdbRevision(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/dvmdb/[*]/revision"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateDvmdbScript API operation for FortiManager creates a new Script.
// Returns the index value of the Script and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - script chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateDvmdbScript(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/script"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateDvmdbScript API operation for FortiManager updates the specified Script.
// Returns the index value of the Script and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - script chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbScript(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/script"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteDvmdbScript API operation for FortiManager deletes the specified Script.
// Returns error for service API and SDK errors.
// See the dvmdb - script chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteDvmdbScript(mkey string, paradict map[string]string) (err error) {
	path := "/dvmdb/[*]/script"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadDvmdbScript API operation for FortiManager gets the Script
// with the specified index value.
// Returns the requested Script value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - script chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadDvmdbScript(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/dvmdb/[*]/script"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateDvmdbScriptExecute API operation for FortiManager updates the specified ScriptExecute.
// Returns the index value of the ScriptExecute and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the dvmdb - script execute chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateDvmdbScriptExecute(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/dvmdb/[*]/script/execute"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateExecFgfmReclaimDevTunnel API operation for FortiManager updates the specified FgfmReclaim Dev Tunnel.
// Returns the index value of the FgfmReclaim Dev Tunnel and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the exec - fgfm reclaim-dev-tunnel chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateExecFgfmReclaimDevTunnel(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/exec/fgfm/reclaim-dev-tunnel/{device_name}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateFmupdateAnalyzerVirusreport API operation for FortiManager updates the specified AnalyzerVirusreport.
// Returns the index value of the AnalyzerVirusreport and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - analyzer virusreport chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateAnalyzerVirusreport(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/analyzer/virusreport"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateAnalyzerVirusreport API operation for FortiManager deletes the specified AnalyzerVirusreport.
// Returns error for service API and SDK errors.
// See the fmupdate - analyzer virusreport chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateAnalyzerVirusreport(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - analyzer virusreport
	return
}

// ReadFmupdateAnalyzerVirusreport API operation for FortiManager gets the AnalyzerVirusreport
// with the specified index value.
// Returns the requested AnalyzerVirusreport value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - analyzer virusreport chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateAnalyzerVirusreport(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/analyzer/virusreport"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateAvIpsAdvancedLog API operation for FortiManager updates the specified Av IpsAdvanced Log.
// Returns the index value of the Av IpsAdvanced Log and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips advanced-log chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateAvIpsAdvancedLog(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/av-ips/advanced-log"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateAvIpsAdvancedLog API operation for FortiManager deletes the specified Av IpsAdvanced Log.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips advanced-log chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateAvIpsAdvancedLog(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - av-ips advanced-log
	return
}

// ReadFmupdateAvIpsAdvancedLog API operation for FortiManager gets the Av IpsAdvanced Log
// with the specified index value.
// Returns the requested Av IpsAdvanced Log value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips advanced-log chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateAvIpsAdvancedLog(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/av-ips/advanced-log"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateAvIpsWebProxy API operation for FortiManager updates the specified Av IpsWeb Proxy.
// Returns the index value of the Av IpsWeb Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateAvIpsWebProxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/av-ips/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateAvIpsWebProxy API operation for FortiManager deletes the specified Av IpsWeb Proxy.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateAvIpsWebProxy(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - av-ips web-proxy
	return
}

// ReadFmupdateAvIpsWebProxy API operation for FortiManager gets the Av IpsWeb Proxy
// with the specified index value.
// Returns the requested Av IpsWeb Proxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - av-ips web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateAvIpsWebProxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/av-ips/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateCustomUrlList API operation for FortiManager updates the specified Custom Url List.
// Returns the index value of the Custom Url List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - custom-url-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateCustomUrlList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/custom-url-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateCustomUrlList API operation for FortiManager deletes the specified Custom Url List.
// Returns error for service API and SDK errors.
// See the fmupdate - custom-url-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateCustomUrlList(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - custom-url-list
	return
}

// ReadFmupdateCustomUrlList API operation for FortiManager gets the Custom Url List
// with the specified index value.
// Returns the requested Custom Url List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - custom-url-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateCustomUrlList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/custom-url-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateDiskQuota API operation for FortiManager updates the specified Disk Quota.
// Returns the index value of the Disk Quota and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - disk-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateDiskQuota(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/disk-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateDiskQuota API operation for FortiManager deletes the specified Disk Quota.
// Returns error for service API and SDK errors.
// See the fmupdate - disk-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateDiskQuota(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - disk-quota
	return
}

// ReadFmupdateDiskQuota API operation for FortiManager gets the Disk Quota
// with the specified index value.
// Returns the requested Disk Quota value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - disk-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateDiskQuota(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/disk-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFctServices API operation for FortiManager updates the specified Fct Services.
// Returns the index value of the Fct Services and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fct-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFctServices(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fct-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFctServices API operation for FortiManager deletes the specified Fct Services.
// Returns error for service API and SDK errors.
// See the fmupdate - fct-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFctServices(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fct-services
	return
}

// ReadFmupdateFctServices API operation for FortiManager gets the Fct Services
// with the specified index value.
// Returns the requested Fct Services value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fct-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFctServices(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fct-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFdsSetting API operation for FortiManager updates the specified Fds Setting.
// Returns the index value of the Fds Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFdsSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFdsSetting API operation for FortiManager deletes the specified Fds Setting.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFdsSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fds-setting
	return
}

// ReadFmupdateFdsSetting API operation for FortiManager gets the Fds Setting
// with the specified index value.
// Returns the requested Fds Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFdsSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFdsSettingPushOverride API operation for FortiManager updates the specified Fds SettingPush Override.
// Returns the index value of the Fds SettingPush Override and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFdsSettingPushOverride(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/push-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFdsSettingPushOverride API operation for FortiManager deletes the specified Fds SettingPush Override.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFdsSettingPushOverride(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fds-setting push-override
	return
}

// ReadFmupdateFdsSettingPushOverride API operation for FortiManager gets the Fds SettingPush Override
// with the specified index value.
// Returns the requested Fds SettingPush Override value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFdsSettingPushOverride(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/push-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFdsSettingPushOverrideToClient API operation for FortiManager updates the specified Fds SettingPush Override To Client.
// Returns the index value of the Fds SettingPush Override To Client and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override-to-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFdsSettingPushOverrideToClient(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/push-override-to-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFdsSettingPushOverrideToClient API operation for FortiManager deletes the specified Fds SettingPush Override To Client.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override-to-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFdsSettingPushOverrideToClient(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fds-setting push-override-to-client
	return
}

// ReadFmupdateFdsSettingPushOverrideToClient API operation for FortiManager gets the Fds SettingPush Override To Client
// with the specified index value.
// Returns the requested Fds SettingPush Override To Client value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting push-override-to-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFdsSettingPushOverrideToClient(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/push-override-to-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFdsSettingServerOverride API operation for FortiManager updates the specified Fds SettingServer Override.
// Returns the index value of the Fds SettingServer Override and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting server-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFdsSettingServerOverride(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/server-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFdsSettingServerOverride API operation for FortiManager deletes the specified Fds SettingServer Override.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting server-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFdsSettingServerOverride(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fds-setting server-override
	return
}

// ReadFmupdateFdsSettingServerOverride API operation for FortiManager gets the Fds SettingServer Override
// with the specified index value.
// Returns the requested Fds SettingServer Override value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting server-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFdsSettingServerOverride(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/server-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFdsSettingUpdateSchedule API operation for FortiManager updates the specified Fds SettingUpdate Schedule.
// Returns the index value of the Fds SettingUpdate Schedule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting update-schedule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFdsSettingUpdateSchedule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/update-schedule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFdsSettingUpdateSchedule API operation for FortiManager deletes the specified Fds SettingUpdate Schedule.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting update-schedule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFdsSettingUpdateSchedule(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fds-setting update-schedule
	return
}

// ReadFmupdateFdsSettingUpdateSchedule API operation for FortiManager gets the Fds SettingUpdate Schedule
// with the specified index value.
// Returns the requested Fds SettingUpdate Schedule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fds-setting update-schedule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFdsSettingUpdateSchedule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fds-setting/update-schedule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFwmSetting API operation for FortiManager updates the specified Fwm Setting.
// Returns the index value of the Fwm Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFwmSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fwm-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFwmSetting API operation for FortiManager deletes the specified Fwm Setting.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFwmSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fwm-setting
	return
}

// ReadFmupdateFwmSetting API operation for FortiManager gets the Fwm Setting
// with the specified index value.
// Returns the requested Fwm Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFwmSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fwm-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateFwmSettingUpgradeTimeout API operation for FortiManager updates the specified Fwm SettingUpgrade Timeout.
// Returns the index value of the Fwm SettingUpgrade Timeout and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting upgrade-timeout chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateFwmSettingUpgradeTimeout(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fwm-setting/upgrade-timeout"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateFwmSettingUpgradeTimeout API operation for FortiManager deletes the specified Fwm SettingUpgrade Timeout.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting upgrade-timeout chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateFwmSettingUpgradeTimeout(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - fwm-setting upgrade-timeout
	return
}

// ReadFmupdateFwmSettingUpgradeTimeout API operation for FortiManager gets the Fwm SettingUpgrade Timeout
// with the specified index value.
// Returns the requested Fwm SettingUpgrade Timeout value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - fwm-setting upgrade-timeout chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateFwmSettingUpgradeTimeout(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/fwm-setting/upgrade-timeout"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateMultilayer API operation for FortiManager updates the specified Multilayer.
// Returns the index value of the Multilayer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - multilayer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateMultilayer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/multilayer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateMultilayer API operation for FortiManager deletes the specified Multilayer.
// Returns error for service API and SDK errors.
// See the fmupdate - multilayer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateMultilayer(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - multilayer
	return
}

// ReadFmupdateMultilayer API operation for FortiManager gets the Multilayer
// with the specified index value.
// Returns the requested Multilayer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - multilayer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateMultilayer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/multilayer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdatePublicnetwork API operation for FortiManager updates the specified Publicnetwork.
// Returns the index value of the Publicnetwork and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - publicnetwork chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdatePublicnetwork(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/publicnetwork"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdatePublicnetwork API operation for FortiManager deletes the specified Publicnetwork.
// Returns error for service API and SDK errors.
// See the fmupdate - publicnetwork chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdatePublicnetwork(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - publicnetwork
	return
}

// ReadFmupdatePublicnetwork API operation for FortiManager gets the Publicnetwork
// with the specified index value.
// Returns the requested Publicnetwork value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - publicnetwork chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdatePublicnetwork(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/publicnetwork"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateServerAccessPriorities API operation for FortiManager updates the specified Server Access Priorities.
// Returns the index value of the Server Access Priorities and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - server-access-priorities chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateServerAccessPriorities(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/server-access-priorities"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateServerAccessPriorities API operation for FortiManager deletes the specified Server Access Priorities.
// Returns error for service API and SDK errors.
// See the fmupdate - server-access-priorities chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateServerAccessPriorities(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - server-access-priorities
	return
}

// ReadFmupdateServerAccessPriorities API operation for FortiManager gets the Server Access Priorities
// with the specified index value.
// Returns the requested Server Access Priorities value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - server-access-priorities chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateServerAccessPriorities(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/server-access-priorities"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateServerOverrideStatus API operation for FortiManager updates the specified Server Override Status.
// Returns the index value of the Server Override Status and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - server-override-status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateServerOverrideStatus(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/server-override-status"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateServerOverrideStatus API operation for FortiManager deletes the specified Server Override Status.
// Returns error for service API and SDK errors.
// See the fmupdate - server-override-status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateServerOverrideStatus(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - server-override-status
	return
}

// ReadFmupdateServerOverrideStatus API operation for FortiManager gets the Server Override Status
// with the specified index value.
// Returns the requested Server Override Status value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - server-override-status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateServerOverrideStatus(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/server-override-status"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateService API operation for FortiManager updates the specified Service.
// Returns the index value of the Service and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateService API operation for FortiManager deletes the specified Service.
// Returns error for service API and SDK errors.
// See the fmupdate - service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateService(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - service
	return
}

// ReadFmupdateService API operation for FortiManager gets the Service
// with the specified index value.
// Returns the requested Service value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateWebSpamFgdSetting API operation for FortiManager updates the specified Web SpamFgd Setting.
// Returns the index value of the Web SpamFgd Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam fgd-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateWebSpamFgdSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/web-spam/fgd-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateWebSpamFgdSetting API operation for FortiManager deletes the specified Web SpamFgd Setting.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam fgd-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateWebSpamFgdSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - web-spam fgd-setting
	return
}

// ReadFmupdateWebSpamFgdSetting API operation for FortiManager gets the Web SpamFgd Setting
// with the specified index value.
// Returns the requested Web SpamFgd Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam fgd-setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateWebSpamFgdSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/web-spam/fgd-setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateFmupdateWebSpamWebProxy API operation for FortiManager updates the specified Web SpamWeb Proxy.
// Returns the index value of the Web SpamWeb Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateFmupdateWebSpamWebProxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/web-spam/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteFmupdateWebSpamWebProxy API operation for FortiManager deletes the specified Web SpamWeb Proxy.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteFmupdateWebSpamWebProxy(mkey string, paradict map[string]string) (err error) {

	//No unset API for fmupdate - web-spam web-proxy
	return
}

// ReadFmupdateWebSpamWebProxy API operation for FortiManager gets the Web SpamWeb Proxy
// with the specified index value.
// Returns the requested Web SpamWeb Proxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the fmupdate - web-spam web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadFmupdateWebSpamWebProxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/fmupdate/web-spam/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAdomOptions API operation for FortiManager updates the specified Options.
// Returns the index value of the Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object adom - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAdomOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/adom/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAdomOptions API operation for FortiManager deletes the specified Options.
// Returns error for service API and SDK errors.
// See the object adom - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAdomOptions(mkey string, paradict map[string]string) (err error) {

	//No unset API for object adom - options
	return
}

// ReadObjectAdomOptions API operation for FortiManager gets the Options
// with the specified index value.
// Returns the requested Options value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object adom - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAdomOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/adom/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectAntivirusMmsChecksum API operation for FortiManager creates a new Mms Checksum.
// Returns the index value of the Mms Checksum and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - mms-checksum chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectAntivirusMmsChecksum(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/mms-checksum"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectAntivirusMmsChecksum API operation for FortiManager updates the specified Mms Checksum.
// Returns the index value of the Mms Checksum and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - mms-checksum chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusMmsChecksum(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/mms-checksum"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusMmsChecksum API operation for FortiManager deletes the specified Mms Checksum.
// Returns error for service API and SDK errors.
// See the object antivirus - mms-checksum chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusMmsChecksum(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/antivirus/mms-checksum"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectAntivirusMmsChecksum API operation for FortiManager gets the Mms Checksum
// with the specified index value.
// Returns the requested Mms Checksum value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - mms-checksum chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusMmsChecksum(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/mms-checksum"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectAntivirusNotification API operation for FortiManager creates a new Notification.
// Returns the index value of the Notification and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectAntivirusNotification(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectAntivirusNotification API operation for FortiManager updates the specified Notification.
// Returns the index value of the Notification and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusNotification(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusNotification API operation for FortiManager deletes the specified Notification.
// Returns error for service API and SDK errors.
// See the object antivirus - notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusNotification(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/antivirus/notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectAntivirusNotification API operation for FortiManager gets the Notification
// with the specified index value.
// Returns the requested Notification value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusNotification(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectAntivirusProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectAntivirusProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectAntivirusProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object antivirus - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/antivirus/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectAntivirusProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileCifs API operation for FortiManager updates the specified ProfileCifs.
// Returns the index value of the ProfileCifs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileCifs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileCifs API operation for FortiManager deletes the specified ProfileCifs.
// Returns error for service API and SDK errors.
// See the object antivirus - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileCifs(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile cifs
	return
}

// ReadObjectAntivirusProfileCifs API operation for FortiManager gets the ProfileCifs
// with the specified index value.
// Returns the requested ProfileCifs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileCifs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileContentDisarm API operation for FortiManager updates the specified ProfileContent Disarm.
// Returns the index value of the ProfileContent Disarm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile content-disarm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileContentDisarm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/content-disarm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileContentDisarm API operation for FortiManager deletes the specified ProfileContent Disarm.
// Returns error for service API and SDK errors.
// See the object antivirus - profile content-disarm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileContentDisarm(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile content-disarm
	return
}

// ReadObjectAntivirusProfileContentDisarm API operation for FortiManager gets the ProfileContent Disarm
// with the specified index value.
// Returns the requested ProfileContent Disarm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile content-disarm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileContentDisarm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/content-disarm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileFtp API operation for FortiManager updates the specified ProfileFtp.
// Returns the index value of the ProfileFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileFtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileFtp API operation for FortiManager deletes the specified ProfileFtp.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileFtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile ftp
	return
}

// ReadObjectAntivirusProfileFtp API operation for FortiManager gets the ProfileFtp
// with the specified index value.
// Returns the requested ProfileFtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileFtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileHttp API operation for FortiManager updates the specified ProfileHttp.
// Returns the index value of the ProfileHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileHttp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileHttp API operation for FortiManager deletes the specified ProfileHttp.
// Returns error for service API and SDK errors.
// See the object antivirus - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileHttp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile http
	return
}

// ReadObjectAntivirusProfileHttp API operation for FortiManager gets the ProfileHttp
// with the specified index value.
// Returns the requested ProfileHttp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileHttp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileImap API operation for FortiManager updates the specified ProfileImap.
// Returns the index value of the ProfileImap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileImap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileImap API operation for FortiManager deletes the specified ProfileImap.
// Returns error for service API and SDK errors.
// See the object antivirus - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileImap(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile imap
	return
}

// ReadObjectAntivirusProfileImap API operation for FortiManager gets the ProfileImap
// with the specified index value.
// Returns the requested ProfileImap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileImap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileMapi API operation for FortiManager updates the specified ProfileMapi.
// Returns the index value of the ProfileMapi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileMapi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileMapi API operation for FortiManager deletes the specified ProfileMapi.
// Returns error for service API and SDK errors.
// See the object antivirus - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileMapi(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile mapi
	return
}

// ReadObjectAntivirusProfileMapi API operation for FortiManager gets the ProfileMapi
// with the specified index value.
// Returns the requested ProfileMapi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileMapi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileNacQuar API operation for FortiManager updates the specified ProfileNac Quar.
// Returns the index value of the ProfileNac Quar and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileNacQuar(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileNacQuar API operation for FortiManager deletes the specified ProfileNac Quar.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileNacQuar(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile nac-quar
	return
}

// ReadObjectAntivirusProfileNacQuar API operation for FortiManager gets the ProfileNac Quar
// with the specified index value.
// Returns the requested ProfileNac Quar value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileNacQuar(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileNntp API operation for FortiManager updates the specified ProfileNntp.
// Returns the index value of the ProfileNntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileNntp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileNntp API operation for FortiManager deletes the specified ProfileNntp.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileNntp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile nntp
	return
}

// ReadObjectAntivirusProfileNntp API operation for FortiManager gets the ProfileNntp
// with the specified index value.
// Returns the requested ProfileNntp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileNntp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileOutbreakPrevention API operation for FortiManager updates the specified ProfileOutbreak Prevention.
// Returns the index value of the ProfileOutbreak Prevention and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile outbreak-prevention chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileOutbreakPrevention(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/outbreak-prevention"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileOutbreakPrevention API operation for FortiManager deletes the specified ProfileOutbreak Prevention.
// Returns error for service API and SDK errors.
// See the object antivirus - profile outbreak-prevention chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileOutbreakPrevention(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile outbreak-prevention
	return
}

// ReadObjectAntivirusProfileOutbreakPrevention API operation for FortiManager gets the ProfileOutbreak Prevention
// with the specified index value.
// Returns the requested ProfileOutbreak Prevention value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile outbreak-prevention chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileOutbreakPrevention(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/outbreak-prevention"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfilePop3 API operation for FortiManager updates the specified ProfilePop3.
// Returns the index value of the ProfilePop3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfilePop3(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfilePop3 API operation for FortiManager deletes the specified ProfilePop3.
// Returns error for service API and SDK errors.
// See the object antivirus - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfilePop3(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile pop3
	return
}

// ReadObjectAntivirusProfilePop3 API operation for FortiManager gets the ProfilePop3
// with the specified index value.
// Returns the requested ProfilePop3 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfilePop3(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileSmtp API operation for FortiManager updates the specified ProfileSmtp.
// Returns the index value of the ProfileSmtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileSmtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileSmtp API operation for FortiManager deletes the specified ProfileSmtp.
// Returns error for service API and SDK errors.
// See the object antivirus - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileSmtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile smtp
	return
}

// ReadObjectAntivirusProfileSmtp API operation for FortiManager gets the ProfileSmtp
// with the specified index value.
// Returns the requested ProfileSmtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileSmtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectAntivirusProfileSsh API operation for FortiManager updates the specified ProfileSsh.
// Returns the index value of the ProfileSsh and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAntivirusProfileSsh(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAntivirusProfileSsh API operation for FortiManager deletes the specified ProfileSsh.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAntivirusProfileSsh(mkey string, paradict map[string]string) (err error) {

	//No unset API for object antivirus - profile ssh
	return
}

// ReadObjectAntivirusProfileSsh API operation for FortiManager gets the ProfileSsh
// with the specified index value.
// Returns the requested ProfileSsh value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object antivirus - profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAntivirusProfileSsh(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/antivirus/profile/{profile}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationCategories API operation for FortiManager creates a new Categories.
// Returns the index value of the Categories and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationCategories(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationCategories API operation for FortiManager updates the specified Categories.
// Returns the index value of the Categories and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationCategories(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationCategories API operation for FortiManager deletes the specified Categories.
// Returns error for service API and SDK errors.
// See the object application - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationCategories(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationCategories API operation for FortiManager gets the Categories
// with the specified index value.
// Returns the requested Categories value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationCategories(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationCustom API operation for FortiManager creates a new Custom.
// Returns the index value of the Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationCustom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationCustom API operation for FortiManager updates the specified Custom.
// Returns the index value of the Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationCustom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationCustom API operation for FortiManager deletes the specified Custom.
// Returns error for service API and SDK errors.
// See the object application - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationCustom(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationCustom API operation for FortiManager gets the Custom
// with the specified index value.
// Returns the requested Custom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationCustom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationGroup API operation for FortiManager creates a new Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationGroup API operation for FortiManager updates the specified Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationGroup API operation for FortiManager deletes the specified Group.
// Returns error for service API and SDK errors.
// See the object application - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationGroup API operation for FortiManager gets the Group
// with the specified index value.
// Returns the requested Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationList API operation for FortiManager creates a new List.
// Returns the index value of the List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationList API operation for FortiManager updates the specified List.
// Returns the index value of the List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationList API operation for FortiManager deletes the specified List.
// Returns error for service API and SDK errors.
// See the object application - list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationList API operation for FortiManager gets the List
// with the specified index value.
// Returns the requested List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationListDefaultNetworkServices API operation for FortiManager creates a new ListDefault Network Services.
// Returns the index value of the ListDefault Network Services and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationListDefaultNetworkServices(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationListDefaultNetworkServices API operation for FortiManager updates the specified ListDefault Network Services.
// Returns the index value of the ListDefault Network Services and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListDefaultNetworkServices(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationListDefaultNetworkServices API operation for FortiManager deletes the specified ListDefault Network Services.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationListDefaultNetworkServices(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationListDefaultNetworkServices API operation for FortiManager gets the ListDefault Network Services
// with the specified index value.
// Returns the requested ListDefault Network Services value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListDefaultNetworkServices(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectApplicationListDefaultNetworkServicesMove API operation for FortiManager updates the specified ListDefault Network ServicesMove.
// Returns the index value of the ListDefault Network ServicesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListDefaultNetworkServicesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services/{default-network-services}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectApplicationListDefaultNetworkServicesMove API operation for FortiManager gets the ListDefault Network ServicesMove
// with the specified index value.
// Returns the requested ListDefault Network ServicesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list default-network-services move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListDefaultNetworkServicesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/default-network-services"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectApplicationListEntries API operation for FortiManager creates a new ListEntries.
// Returns the index value of the ListEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationListEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationListEntries API operation for FortiManager updates the specified ListEntries.
// Returns the index value of the ListEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationListEntries API operation for FortiManager deletes the specified ListEntries.
// Returns error for service API and SDK errors.
// See the object application - list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationListEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationListEntries API operation for FortiManager gets the ListEntries
// with the specified index value.
// Returns the requested ListEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectApplicationListEntriesMove API operation for FortiManager updates the specified ListEntriesMove.
// Returns the index value of the ListEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectApplicationListEntriesMove API operation for FortiManager gets the ListEntriesMove
// with the specified index value.
// Returns the requested ListEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectApplicationListEntriesParameters API operation for FortiManager creates a new ListEntriesParameters.
// Returns the index value of the ListEntriesParameters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationListEntriesParameters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationListEntriesParameters API operation for FortiManager updates the specified ListEntriesParameters.
// Returns the index value of the ListEntriesParameters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListEntriesParameters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationListEntriesParameters API operation for FortiManager deletes the specified ListEntriesParameters.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationListEntriesParameters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationListEntriesParameters API operation for FortiManager gets the ListEntriesParameters
// with the specified index value.
// Returns the requested ListEntriesParameters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListEntriesParameters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectApplicationListEntriesParametersMembers API operation for FortiManager creates a new ListEntriesParametersMembers.
// Returns the index value of the ListEntriesParametersMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectApplicationListEntriesParametersMembers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters/{parameters}/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectApplicationListEntriesParametersMembers API operation for FortiManager updates the specified ListEntriesParametersMembers.
// Returns the index value of the ListEntriesParametersMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListEntriesParametersMembers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters/{parameters}/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectApplicationListEntriesParametersMembers API operation for FortiManager deletes the specified ListEntriesParametersMembers.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectApplicationListEntriesParametersMembers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters/{parameters}/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectApplicationListEntriesParametersMembers API operation for FortiManager gets the ListEntriesParametersMembers
// with the specified index value.
// Returns the requested ListEntriesParametersMembers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListEntriesParametersMembers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters/{parameters}/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectApplicationListEntriesParametersMove API operation for FortiManager updates the specified ListEntriesParametersMove.
// Returns the index value of the ListEntriesParametersMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectApplicationListEntriesParametersMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters/{parameters}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectApplicationListEntriesParametersMove API operation for FortiManager gets the ListEntriesParametersMove
// with the specified index value.
// Returns the requested ListEntriesParametersMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object application - list entries parameters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectApplicationListEntriesParametersMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/application/list/{list}/entries/{entries}/parameters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectAuthenticationScheme API operation for FortiManager creates a new Scheme.
// Returns the index value of the Scheme and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object authentication - scheme chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectAuthenticationScheme(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/authentication/scheme"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectAuthenticationScheme API operation for FortiManager updates the specified Scheme.
// Returns the index value of the Scheme and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object authentication - scheme chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectAuthenticationScheme(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/authentication/scheme"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectAuthenticationScheme API operation for FortiManager deletes the specified Scheme.
// Returns error for service API and SDK errors.
// See the object authentication - scheme chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectAuthenticationScheme(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/authentication/scheme"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectAuthenticationScheme API operation for FortiManager gets the Scheme
// with the specified index value.
// Returns the requested Scheme value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object authentication - scheme chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectAuthenticationScheme(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/authentication/scheme"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object casb - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectCasbProfileMove API operation for FortiManager updates the specified ProfileMove.
// Returns the index value of the ProfileMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfileMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectCasbProfileMove API operation for FortiManager gets the ProfileMove
// with the specified index value.
// Returns the requested ProfileMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfileMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectCasbProfileSaasApplication API operation for FortiManager creates a new ProfileSaas Application.
// Returns the index value of the ProfileSaas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbProfileSaasApplication(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbProfileSaasApplication API operation for FortiManager updates the specified ProfileSaas Application.
// Returns the index value of the ProfileSaas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfileSaasApplication(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbProfileSaasApplication API operation for FortiManager deletes the specified ProfileSaas Application.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbProfileSaasApplication(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbProfileSaasApplication API operation for FortiManager gets the ProfileSaas Application
// with the specified index value.
// Returns the requested ProfileSaas Application value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfileSaasApplication(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbProfileSaasApplicationAccessRule API operation for FortiManager creates a new ProfileSaas ApplicationAccess Rule.
// Returns the index value of the ProfileSaas ApplicationAccess Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbProfileSaasApplicationAccessRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbProfileSaasApplicationAccessRule API operation for FortiManager updates the specified ProfileSaas ApplicationAccess Rule.
// Returns the index value of the ProfileSaas ApplicationAccess Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfileSaasApplicationAccessRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbProfileSaasApplicationAccessRule API operation for FortiManager deletes the specified ProfileSaas ApplicationAccess Rule.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbProfileSaasApplicationAccessRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbProfileSaasApplicationAccessRule API operation for FortiManager gets the ProfileSaas ApplicationAccess Rule
// with the specified index value.
// Returns the requested ProfileSaas ApplicationAccess Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfileSaasApplicationAccessRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbProfileSaasApplicationCustomControl API operation for FortiManager creates a new ProfileSaas ApplicationCustom Control.
// Returns the index value of the ProfileSaas ApplicationCustom Control and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbProfileSaasApplicationCustomControl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbProfileSaasApplicationCustomControl API operation for FortiManager updates the specified ProfileSaas ApplicationCustom Control.
// Returns the index value of the ProfileSaas ApplicationCustom Control and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfileSaasApplicationCustomControl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbProfileSaasApplicationCustomControl API operation for FortiManager deletes the specified ProfileSaas ApplicationCustom Control.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbProfileSaasApplicationCustomControl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbProfileSaasApplicationCustomControl API operation for FortiManager gets the ProfileSaas ApplicationCustom Control
// with the specified index value.
// Returns the requested ProfileSaas ApplicationCustom Control value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfileSaasApplicationCustomControl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbProfileSaasApplicationCustomControlOption API operation for FortiManager creates a new ProfileSaas ApplicationCustom ControlOption.
// Returns the index value of the ProfileSaas ApplicationCustom ControlOption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbProfileSaasApplicationCustomControlOption(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbProfileSaasApplicationCustomControlOption API operation for FortiManager updates the specified ProfileSaas ApplicationCustom ControlOption.
// Returns the index value of the ProfileSaas ApplicationCustom ControlOption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbProfileSaasApplicationCustomControlOption(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbProfileSaasApplicationCustomControlOption API operation for FortiManager deletes the specified ProfileSaas ApplicationCustom ControlOption.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbProfileSaasApplicationCustomControlOption(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbProfileSaasApplicationCustomControlOption API operation for FortiManager gets the ProfileSaas ApplicationCustom ControlOption
// with the specified index value.
// Returns the requested ProfileSaas ApplicationCustom ControlOption value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbProfileSaasApplicationCustomControlOption(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/profile/{profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbSaasApplication API operation for FortiManager creates a new Saas Application.
// Returns the index value of the Saas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbSaasApplication(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbSaasApplication API operation for FortiManager updates the specified Saas Application.
// Returns the index value of the Saas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbSaasApplication(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbSaasApplication API operation for FortiManager deletes the specified Saas Application.
// Returns error for service API and SDK errors.
// See the object casb - saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbSaasApplication(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbSaasApplication API operation for FortiManager gets the Saas Application
// with the specified index value.
// Returns the requested Saas Application value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbSaasApplication(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectCasbSaasApplicationMove API operation for FortiManager updates the specified Saas ApplicationMove.
// Returns the index value of the Saas ApplicationMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - saas-application move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbSaasApplicationMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/saas-application/{saas-application}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectCasbSaasApplicationMove API operation for FortiManager gets the Saas ApplicationMove
// with the specified index value.
// Returns the requested Saas ApplicationMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - saas-application move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbSaasApplicationMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectCasbUserActivity API operation for FortiManager creates a new User Activity.
// Returns the index value of the User Activity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbUserActivity(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbUserActivity API operation for FortiManager updates the specified User Activity.
// Returns the index value of the User Activity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivity(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbUserActivity API operation for FortiManager deletes the specified User Activity.
// Returns error for service API and SDK errors.
// See the object casb - user-activity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbUserActivity(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/user-activity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbUserActivity API operation for FortiManager gets the User Activity
// with the specified index value.
// Returns the requested User Activity value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivity(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbUserActivityControlOptions API operation for FortiManager creates a new User ActivityControl Options.
// Returns the index value of the User ActivityControl Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbUserActivityControlOptions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbUserActivityControlOptions API operation for FortiManager updates the specified User ActivityControl Options.
// Returns the index value of the User ActivityControl Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivityControlOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbUserActivityControlOptions API operation for FortiManager deletes the specified User ActivityControl Options.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbUserActivityControlOptions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbUserActivityControlOptions API operation for FortiManager gets the User ActivityControl Options
// with the specified index value.
// Returns the requested User ActivityControl Options value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivityControlOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbUserActivityControlOptionsOperations API operation for FortiManager creates a new User ActivityControl OptionsOperations.
// Returns the index value of the User ActivityControl OptionsOperations and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options operations chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbUserActivityControlOptionsOperations(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options/{control-options}/operations"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbUserActivityControlOptionsOperations API operation for FortiManager updates the specified User ActivityControl OptionsOperations.
// Returns the index value of the User ActivityControl OptionsOperations and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options operations chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivityControlOptionsOperations(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options/{control-options}/operations"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbUserActivityControlOptionsOperations API operation for FortiManager deletes the specified User ActivityControl OptionsOperations.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options operations chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbUserActivityControlOptionsOperations(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options/{control-options}/operations"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbUserActivityControlOptionsOperations API operation for FortiManager gets the User ActivityControl OptionsOperations
// with the specified index value.
// Returns the requested User ActivityControl OptionsOperations value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity control-options operations chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivityControlOptionsOperations(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/control-options/{control-options}/operations"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbUserActivityMatch API operation for FortiManager creates a new User ActivityMatch.
// Returns the index value of the User ActivityMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbUserActivityMatch(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbUserActivityMatch API operation for FortiManager updates the specified User ActivityMatch.
// Returns the index value of the User ActivityMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivityMatch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbUserActivityMatch API operation for FortiManager deletes the specified User ActivityMatch.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbUserActivityMatch(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbUserActivityMatch API operation for FortiManager gets the User ActivityMatch
// with the specified index value.
// Returns the requested User ActivityMatch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivityMatch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCasbUserActivityMatchRules API operation for FortiManager creates a new User ActivityMatchRules.
// Returns the index value of the User ActivityMatchRules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCasbUserActivityMatchRules(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match/{match}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCasbUserActivityMatchRules API operation for FortiManager updates the specified User ActivityMatchRules.
// Returns the index value of the User ActivityMatchRules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivityMatchRules(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match/{match}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCasbUserActivityMatchRules API operation for FortiManager deletes the specified User ActivityMatchRules.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCasbUserActivityMatchRules(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match/{match}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCasbUserActivityMatchRules API operation for FortiManager gets the User ActivityMatchRules
// with the specified index value.
// Returns the requested User ActivityMatchRules value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity match rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivityMatchRules(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}/match/{match}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectCasbUserActivityMove API operation for FortiManager updates the specified User ActivityMove.
// Returns the index value of the User ActivityMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCasbUserActivityMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity/{user-activity}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectCasbUserActivityMove API operation for FortiManager gets the User ActivityMove
// with the specified index value.
// Returns the requested User ActivityMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object casb - user-activity move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCasbUserActivityMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/casb/user-activity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectCertificateTemplate API operation for FortiManager creates a new Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object certificate - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCertificateTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/certificate/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCertificateTemplate API operation for FortiManager updates the specified Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object certificate - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCertificateTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/certificate/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCertificateTemplate API operation for FortiManager deletes the specified Template.
// Returns error for service API and SDK errors.
// See the object certificate - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCertificateTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/certificate/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCertificateTemplate API operation for FortiManager gets the Template
// with the specified index value.
// Returns the requested Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object certificate - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCertificateTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/certificate/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCifsDomainController API operation for FortiManager creates a new Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCifsDomainController(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCifsDomainController API operation for FortiManager updates the specified Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCifsDomainController(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCifsDomainController API operation for FortiManager deletes the specified Domain Controller.
// Returns error for service API and SDK errors.
// See the object cifs - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCifsDomainController(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cifs/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCifsDomainController API operation for FortiManager gets the Domain Controller
// with the specified index value.
// Returns the requested Domain Controller value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCifsDomainController(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCifsProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCifsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCifsProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCifsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCifsProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object cifs - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCifsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cifs/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCifsProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cifs - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCifsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cifs/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCliTemplate API operation for FortiManager creates a new Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCliTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCliTemplate API operation for FortiManager updates the specified Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCliTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCliTemplate API operation for FortiManager deletes the specified Template.
// Returns error for service API and SDK errors.
// See the object cli - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCliTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cli/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCliTemplate API operation for FortiManager gets the Template
// with the specified index value.
// Returns the requested Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCliTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCliTemplateGroup API operation for FortiManager creates a new Template Group.
// Returns the index value of the Template Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCliTemplateGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCliTemplateGroup API operation for FortiManager updates the specified Template Group.
// Returns the index value of the Template Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCliTemplateGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCliTemplateGroup API operation for FortiManager deletes the specified Template Group.
// Returns error for service API and SDK errors.
// See the object cli - template-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCliTemplateGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cli/template-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCliTemplateGroup API operation for FortiManager gets the Template Group
// with the specified index value.
// Returns the requested Template Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cli - template-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCliTemplateGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cli/template-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestAws API operation for FortiManager creates a new Orchest Aws.
// Returns the index value of the Orchest Aws and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-aws chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestAws(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-aws"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestAws API operation for FortiManager updates the specified Orchest Aws.
// Returns the index value of the Orchest Aws and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-aws chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestAws(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-aws"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestAws API operation for FortiManager deletes the specified Orchest Aws.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-aws chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestAws(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-aws"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestAws API operation for FortiManager gets the Orchest Aws
// with the specified index value.
// Returns the requested Orchest Aws value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-aws chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestAws(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-aws"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestAwsconnector API operation for FortiManager creates a new Orchest Awsconnector.
// Returns the index value of the Orchest Awsconnector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awsconnector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestAwsconnector(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awsconnector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestAwsconnector API operation for FortiManager updates the specified Orchest Awsconnector.
// Returns the index value of the Orchest Awsconnector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awsconnector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestAwsconnector(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awsconnector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestAwsconnector API operation for FortiManager deletes the specified Orchest Awsconnector.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awsconnector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestAwsconnector(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awsconnector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestAwsconnector API operation for FortiManager gets the Orchest Awsconnector
// with the specified index value.
// Returns the requested Orchest Awsconnector value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awsconnector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestAwsconnector(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awsconnector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestAwstemplateAutoscaleExistingVpc API operation for FortiManager creates a new Orchest AwstemplateAutoscale Existing Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale Existing Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-existing-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestAwstemplateAutoscaleExistingVpc(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-existing-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestAwstemplateAutoscaleExistingVpc API operation for FortiManager updates the specified Orchest AwstemplateAutoscale Existing Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale Existing Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-existing-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestAwstemplateAutoscaleExistingVpc(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-existing-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestAwstemplateAutoscaleExistingVpc API operation for FortiManager deletes the specified Orchest AwstemplateAutoscale Existing Vpc.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-existing-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestAwstemplateAutoscaleExistingVpc(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-existing-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestAwstemplateAutoscaleExistingVpc API operation for FortiManager gets the Orchest AwstemplateAutoscale Existing Vpc
// with the specified index value.
// Returns the requested Orchest AwstemplateAutoscale Existing Vpc value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-existing-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestAwstemplateAutoscaleExistingVpc(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-existing-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestAwstemplateAutoscaleNewVpc API operation for FortiManager creates a new Orchest AwstemplateAutoscale New Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale New Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestAwstemplateAutoscaleNewVpc(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestAwstemplateAutoscaleNewVpc API operation for FortiManager updates the specified Orchest AwstemplateAutoscale New Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale New Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestAwstemplateAutoscaleNewVpc(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestAwstemplateAutoscaleNewVpc API operation for FortiManager deletes the specified Orchest AwstemplateAutoscale New Vpc.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestAwstemplateAutoscaleNewVpc(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestAwstemplateAutoscaleNewVpc API operation for FortiManager gets the Orchest AwstemplateAutoscale New Vpc
// with the specified index value.
// Returns the requested Orchest AwstemplateAutoscale New Vpc value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestAwstemplateAutoscaleNewVpc(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc API operation for FortiManager creates a new Orchest AwstemplateAutoscale Tgw New Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale Tgw New Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-tgw-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-tgw-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc API operation for FortiManager updates the specified Orchest AwstemplateAutoscale Tgw New Vpc.
// Returns the index value of the Orchest AwstemplateAutoscale Tgw New Vpc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-tgw-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-tgw-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc API operation for FortiManager deletes the specified Orchest AwstemplateAutoscale Tgw New Vpc.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-tgw-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-tgw-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc API operation for FortiManager gets the Orchest AwstemplateAutoscale Tgw New Vpc
// with the specified index value.
// Returns the requested Orchest AwstemplateAutoscale Tgw New Vpc value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchest-awstemplate autoscale-tgw-new-vpc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestAwstemplateAutoscaleTgwNewVpc(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchest-awstemplate/autoscale-tgw-new-vpc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCloudOrchestration API operation for FortiManager creates a new Orchestration.
// Returns the index value of the Orchestration and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchestration chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCloudOrchestration(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchestration"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCloudOrchestration API operation for FortiManager updates the specified Orchestration.
// Returns the index value of the Orchestration and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchestration chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCloudOrchestration(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchestration"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCloudOrchestration API operation for FortiManager deletes the specified Orchestration.
// Returns error for service API and SDK errors.
// See the object cloud - orchestration chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCloudOrchestration(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/cloud/orchestration"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCloudOrchestration API operation for FortiManager gets the Orchestration
// with the specified index value.
// Returns the requested Orchestration value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object cloud - orchestration chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCloudOrchestration(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/cloud/orchestration"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectCredentialStoreDomainController API operation for FortiManager creates a new Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object credential-store - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectCredentialStoreDomainController(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/credential-store/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectCredentialStoreDomainController API operation for FortiManager updates the specified Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object credential-store - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectCredentialStoreDomainController(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/credential-store/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectCredentialStoreDomainController API operation for FortiManager deletes the specified Domain Controller.
// Returns error for service API and SDK errors.
// See the object credential-store - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectCredentialStoreDomainController(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/credential-store/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectCredentialStoreDomainController API operation for FortiManager gets the Domain Controller
// with the specified index value.
// Returns the requested Domain Controller value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object credential-store - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectCredentialStoreDomainController(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/credential-store/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDiameterFilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object diameter-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDiameterFilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/diameter-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDiameterFilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object diameter-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDiameterFilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/diameter-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDiameterFilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object diameter-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDiameterFilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/diameter-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDiameterFilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object diameter-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDiameterFilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/diameter-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpDataType API operation for FortiManager creates a new Data Type.
// Returns the index value of the Data Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - data-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpDataType(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/data-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpDataType API operation for FortiManager updates the specified Data Type.
// Returns the index value of the Data Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - data-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpDataType(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/data-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpDataType API operation for FortiManager deletes the specified Data Type.
// Returns error for service API and SDK errors.
// See the object dlp - data-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpDataType(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/data-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpDataType API operation for FortiManager gets the Data Type
// with the specified index value.
// Returns the requested Data Type value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - data-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpDataType(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/data-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpDictionary API operation for FortiManager creates a new Dictionary.
// Returns the index value of the Dictionary and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpDictionary(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpDictionary API operation for FortiManager updates the specified Dictionary.
// Returns the index value of the Dictionary and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpDictionary(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpDictionary API operation for FortiManager deletes the specified Dictionary.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpDictionary(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpDictionary API operation for FortiManager gets the Dictionary
// with the specified index value.
// Returns the requested Dictionary value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpDictionary(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpDictionaryEntries API operation for FortiManager creates a new DictionaryEntries.
// Returns the index value of the DictionaryEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpDictionaryEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpDictionaryEntries API operation for FortiManager updates the specified DictionaryEntries.
// Returns the index value of the DictionaryEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpDictionaryEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpDictionaryEntries API operation for FortiManager deletes the specified DictionaryEntries.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpDictionaryEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpDictionaryEntries API operation for FortiManager gets the DictionaryEntries
// with the specified index value.
// Returns the requested DictionaryEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpDictionaryEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDlpDictionaryEntriesMove API operation for FortiManager updates the specified DictionaryEntriesMove.
// Returns the index value of the DictionaryEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpDictionaryEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDlpDictionaryEntriesMove API operation for FortiManager gets the DictionaryEntriesMove
// with the specified index value.
// Returns the requested DictionaryEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - dictionary entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpDictionaryEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/dictionary/{dictionary}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDlpFilepattern API operation for FortiManager creates a new Filepattern.
// Returns the index value of the Filepattern and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpFilepattern(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpFilepattern API operation for FortiManager updates the specified Filepattern.
// Returns the index value of the Filepattern and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpFilepattern(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpFilepattern API operation for FortiManager deletes the specified Filepattern.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpFilepattern(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpFilepattern API operation for FortiManager gets the Filepattern
// with the specified index value.
// Returns the requested Filepattern value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpFilepattern(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpFilepatternEntries API operation for FortiManager creates a new FilepatternEntries.
// Returns the index value of the FilepatternEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpFilepatternEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpFilepatternEntries API operation for FortiManager updates the specified FilepatternEntries.
// Returns the index value of the FilepatternEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpFilepatternEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpFilepatternEntries API operation for FortiManager deletes the specified FilepatternEntries.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpFilepatternEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpFilepatternEntries API operation for FortiManager gets the FilepatternEntries
// with the specified index value.
// Returns the requested FilepatternEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpFilepatternEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDlpFilepatternEntriesMove API operation for FortiManager updates the specified FilepatternEntriesMove.
// Returns the index value of the FilepatternEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpFilepatternEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDlpFilepatternEntriesMove API operation for FortiManager gets the FilepatternEntriesMove
// with the specified index value.
// Returns the requested FilepatternEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - filepattern entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpFilepatternEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/filepattern/{filepattern}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"pattern"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDlpFpSensitivity API operation for FortiManager creates a new Fp Sensitivity.
// Returns the index value of the Fp Sensitivity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - fp-sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpFpSensitivity(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/fp-sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpFpSensitivity API operation for FortiManager updates the specified Fp Sensitivity.
// Returns the index value of the Fp Sensitivity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - fp-sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpFpSensitivity(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/fp-sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpFpSensitivity API operation for FortiManager deletes the specified Fp Sensitivity.
// Returns error for service API and SDK errors.
// See the object dlp - fp-sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpFpSensitivity(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/fp-sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpFpSensitivity API operation for FortiManager gets the Fp Sensitivity
// with the specified index value.
// Returns the requested Fp Sensitivity value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - fp-sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpFpSensitivity(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/fp-sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object dlp - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpProfileRule API operation for FortiManager creates a new ProfileRule.
// Returns the index value of the ProfileRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpProfileRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpProfileRule API operation for FortiManager updates the specified ProfileRule.
// Returns the index value of the ProfileRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpProfileRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpProfileRule API operation for FortiManager deletes the specified ProfileRule.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpProfileRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpProfileRule API operation for FortiManager gets the ProfileRule
// with the specified index value.
// Returns the requested ProfileRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpProfileRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDlpProfileRuleMove API operation for FortiManager updates the specified ProfileRuleMove.
// Returns the index value of the ProfileRuleMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpProfileRuleMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule/{rule}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDlpProfileRuleMove API operation for FortiManager gets the ProfileRuleMove
// with the specified index value.
// Returns the requested ProfileRuleMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - profile rule move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpProfileRuleMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/profile/{profile}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDlpSensitivity API operation for FortiManager creates a new Sensitivity.
// Returns the index value of the Sensitivity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpSensitivity(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpSensitivity API operation for FortiManager updates the specified Sensitivity.
// Returns the index value of the Sensitivity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensitivity(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpSensitivity API operation for FortiManager deletes the specified Sensitivity.
// Returns error for service API and SDK errors.
// See the object dlp - sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpSensitivity(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpSensitivity API operation for FortiManager gets the Sensitivity
// with the specified index value.
// Returns the requested Sensitivity value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensitivity chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensitivity(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensitivity"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpSensor API operation for FortiManager creates a new Sensor.
// Returns the index value of the Sensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpSensor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpSensor API operation for FortiManager updates the specified Sensor.
// Returns the index value of the Sensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpSensor API operation for FortiManager deletes the specified Sensor.
// Returns error for service API and SDK errors.
// See the object dlp - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpSensor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpSensor API operation for FortiManager gets the Sensor
// with the specified index value.
// Returns the requested Sensor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDlpSensorEntries API operation for FortiManager creates a new SensorEntries.
// Returns the index value of the SensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpSensorEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpSensorEntries API operation for FortiManager updates the specified SensorEntries.
// Returns the index value of the SensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensorEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpSensorEntries API operation for FortiManager deletes the specified SensorEntries.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpSensorEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpSensorEntries API operation for FortiManager gets the SensorEntries
// with the specified index value.
// Returns the requested SensorEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensorEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDlpSensorEntriesMove API operation for FortiManager updates the specified SensorEntriesMove.
// Returns the index value of the SensorEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensorEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDlpSensorEntriesMove API operation for FortiManager gets the SensorEntriesMove
// with the specified index value.
// Returns the requested SensorEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensorEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDlpSensorFilter API operation for FortiManager creates a new SensorFilter.
// Returns the index value of the SensorFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDlpSensorFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDlpSensorFilter API operation for FortiManager updates the specified SensorFilter.
// Returns the index value of the SensorFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensorFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDlpSensorFilter API operation for FortiManager deletes the specified SensorFilter.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDlpSensorFilter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDlpSensorFilter API operation for FortiManager gets the SensorFilter
// with the specified index value.
// Returns the requested SensorFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensorFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDlpSensorFilterMove API operation for FortiManager updates the specified SensorFilterMove.
// Returns the index value of the SensorFilterMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDlpSensorFilterMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter/{filter}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDlpSensorFilterMove API operation for FortiManager gets the SensorFilterMove
// with the specified index value.
// Returns the requested SensorFilterMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dlp - sensor filter move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDlpSensorFilterMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dlp/sensor/{sensor}/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDnsfilterDomainFilter API operation for FortiManager creates a new Domain Filter.
// Returns the index value of the Domain Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDnsfilterDomainFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDnsfilterDomainFilter API operation for FortiManager updates the specified Domain Filter.
// Returns the index value of the Domain Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterDomainFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterDomainFilter API operation for FortiManager deletes the specified Domain Filter.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterDomainFilter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDnsfilterDomainFilter API operation for FortiManager gets the Domain Filter
// with the specified index value.
// Returns the requested Domain Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterDomainFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDnsfilterDomainFilterEntries API operation for FortiManager creates a new Domain FilterEntries.
// Returns the index value of the Domain FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDnsfilterDomainFilterEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDnsfilterDomainFilterEntries API operation for FortiManager updates the specified Domain FilterEntries.
// Returns the index value of the Domain FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterDomainFilterEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterDomainFilterEntries API operation for FortiManager deletes the specified Domain FilterEntries.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterDomainFilterEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDnsfilterDomainFilterEntries API operation for FortiManager gets the Domain FilterEntries
// with the specified index value.
// Returns the requested Domain FilterEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterDomainFilterEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDnsfilterDomainFilterEntriesMove API operation for FortiManager updates the specified Domain FilterEntriesMove.
// Returns the index value of the Domain FilterEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterDomainFilterEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectDnsfilterDomainFilterEntriesMove API operation for FortiManager gets the Domain FilterEntriesMove
// with the specified index value.
// Returns the requested Domain FilterEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - domain-filter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterDomainFilterEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/domain-filter/{domain-filter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectDnsfilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDnsfilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDnsfilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDnsfilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDnsfilterProfileDnsTranslation API operation for FortiManager creates a new ProfileDns Translation.
// Returns the index value of the ProfileDns Translation and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile dns-translation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDnsfilterProfileDnsTranslation(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/dns-translation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDnsfilterProfileDnsTranslation API operation for FortiManager updates the specified ProfileDns Translation.
// Returns the index value of the ProfileDns Translation and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile dns-translation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterProfileDnsTranslation(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/dns-translation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterProfileDnsTranslation API operation for FortiManager deletes the specified ProfileDns Translation.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile dns-translation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterProfileDnsTranslation(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/dns-translation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDnsfilterProfileDnsTranslation API operation for FortiManager gets the ProfileDns Translation
// with the specified index value.
// Returns the requested ProfileDns Translation value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile dns-translation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterProfileDnsTranslation(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/dns-translation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDnsfilterProfileDomainFilter API operation for FortiManager updates the specified ProfileDomain Filter.
// Returns the index value of the ProfileDomain Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterProfileDomainFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterProfileDomainFilter API operation for FortiManager deletes the specified ProfileDomain Filter.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterProfileDomainFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for object dnsfilter - profile domain-filter
	return
}

// ReadObjectDnsfilterProfileDomainFilter API operation for FortiManager gets the ProfileDomain Filter
// with the specified index value.
// Returns the requested ProfileDomain Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile domain-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterProfileDomainFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/domain-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectDnsfilterProfileFtgdDns API operation for FortiManager updates the specified ProfileFtgd Dns.
// Returns the index value of the ProfileFtgd Dns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterProfileFtgdDns(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterProfileFtgdDns API operation for FortiManager deletes the specified ProfileFtgd Dns.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterProfileFtgdDns(mkey string, paradict map[string]string) (err error) {

	//No unset API for object dnsfilter - profile ftgd-dns
	return
}

// ReadObjectDnsfilterProfileFtgdDns API operation for FortiManager gets the ProfileFtgd Dns
// with the specified index value.
// Returns the requested ProfileFtgd Dns value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterProfileFtgdDns(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDnsfilterProfileFtgdDnsFilters API operation for FortiManager creates a new ProfileFtgd DnsFilters.
// Returns the index value of the ProfileFtgd DnsFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDnsfilterProfileFtgdDnsFilters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDnsfilterProfileFtgdDnsFilters API operation for FortiManager updates the specified ProfileFtgd DnsFilters.
// Returns the index value of the ProfileFtgd DnsFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDnsfilterProfileFtgdDnsFilters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDnsfilterProfileFtgdDnsFilters API operation for FortiManager deletes the specified ProfileFtgd DnsFilters.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDnsfilterProfileFtgdDnsFilters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDnsfilterProfileFtgdDnsFilters API operation for FortiManager gets the ProfileFtgd DnsFilters
// with the specified index value.
// Returns the requested ProfileFtgd DnsFilters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dnsfilter - profile ftgd-dns filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDnsfilterProfileFtgdDnsFilters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dnsfilter/profile/{profile}/ftgd-dns/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicAddress API operation for FortiManager creates a new Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicAddress API operation for FortiManager updates the specified Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicAddress API operation for FortiManager deletes the specified Address.
// Returns error for service API and SDK errors.
// See the object dynamic - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicAddress API operation for FortiManager gets the Address
// with the specified index value.
// Returns the requested Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicAddressDynamicAddrMapping API operation for FortiManager creates a new AddressDynamicAddrMapping.
// Returns the index value of the AddressDynamicAddrMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address dynamic addr mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicAddressDynamicAddrMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address/{address}/dynamic_addr_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicAddressDynamicAddrMapping API operation for FortiManager updates the specified AddressDynamicAddrMapping.
// Returns the index value of the AddressDynamicAddrMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address dynamic addr mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicAddressDynamicAddrMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address/{address}/dynamic_addr_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicAddressDynamicAddrMapping API operation for FortiManager deletes the specified AddressDynamicAddrMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - address dynamic addr mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicAddressDynamicAddrMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/address/{address}/dynamic_addr_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicAddressDynamicAddrMapping API operation for FortiManager gets the AddressDynamicAddrMapping
// with the specified index value.
// Returns the requested AddressDynamicAddrMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - address dynamic addr mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicAddressDynamicAddrMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/address/{address}/dynamic_addr_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicCertificateLocal API operation for FortiManager creates a new CertificateLocal.
// Returns the index value of the CertificateLocal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicCertificateLocal(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicCertificateLocal API operation for FortiManager updates the specified CertificateLocal.
// Returns the index value of the CertificateLocal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicCertificateLocal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicCertificateLocal API operation for FortiManager deletes the specified CertificateLocal.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicCertificateLocal(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicCertificateLocal API operation for FortiManager gets the CertificateLocal
// with the specified index value.
// Returns the requested CertificateLocal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicCertificateLocal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicCertificateLocalDynamicMapping API operation for FortiManager creates a new CertificateLocalDynamicMapping.
// Returns the index value of the CertificateLocalDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicCertificateLocalDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local/{local}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicCertificateLocalDynamicMapping API operation for FortiManager updates the specified CertificateLocalDynamicMapping.
// Returns the index value of the CertificateLocalDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicCertificateLocalDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local/{local}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicCertificateLocalDynamicMapping API operation for FortiManager deletes the specified CertificateLocalDynamicMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicCertificateLocalDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local/{local}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicCertificateLocalDynamicMapping API operation for FortiManager gets the CertificateLocalDynamicMapping
// with the specified index value.
// Returns the requested CertificateLocalDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - certificate local dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicCertificateLocalDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/certificate/local/{local}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicInterface API operation for FortiManager creates a new Interface.
// Returns the index value of the Interface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicInterface(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicInterface API operation for FortiManager updates the specified Interface.
// Returns the index value of the Interface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicInterface(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicInterface API operation for FortiManager deletes the specified Interface.
// Returns error for service API and SDK errors.
// See the object dynamic - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicInterface(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicInterface API operation for FortiManager gets the Interface
// with the specified index value.
// Returns the requested Interface value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicInterface(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicInterfaceDynamicMapping API operation for FortiManager creates a new InterfaceDynamicMapping.
// Returns the index value of the InterfaceDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicInterfaceDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicInterfaceDynamicMapping API operation for FortiManager updates the specified InterfaceDynamicMapping.
// Returns the index value of the InterfaceDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicInterfaceDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicInterfaceDynamicMapping API operation for FortiManager deletes the specified InterfaceDynamicMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicInterfaceDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicInterfaceDynamicMapping API operation for FortiManager gets the InterfaceDynamicMapping
// with the specified index value.
// Returns the requested InterfaceDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicInterfaceDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicInterfacePlatformMapping API operation for FortiManager creates a new InterfacePlatformMapping.
// Returns the index value of the InterfacePlatformMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface platform mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicInterfacePlatformMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/platform_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicInterfacePlatformMapping API operation for FortiManager updates the specified InterfacePlatformMapping.
// Returns the index value of the InterfacePlatformMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface platform mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicInterfacePlatformMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/platform_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicInterfacePlatformMapping API operation for FortiManager deletes the specified InterfacePlatformMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - interface platform mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicInterfacePlatformMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/platform_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicInterfacePlatformMapping API operation for FortiManager gets the InterfacePlatformMapping
// with the specified index value.
// Returns the requested InterfacePlatformMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - interface platform mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicInterfacePlatformMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/interface/{interface}/platform_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicIppool API operation for FortiManager creates a new Ippool.
// Returns the index value of the Ippool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicIppool(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicIppool API operation for FortiManager updates the specified Ippool.
// Returns the index value of the Ippool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicIppool(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicIppool API operation for FortiManager deletes the specified Ippool.
// Returns error for service API and SDK errors.
// See the object dynamic - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicIppool(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicIppool API operation for FortiManager gets the Ippool
// with the specified index value.
// Returns the requested Ippool value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicIppool(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicMulticastInterface API operation for FortiManager creates a new MulticastInterface.
// Returns the index value of the MulticastInterface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicMulticastInterface(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicMulticastInterface API operation for FortiManager updates the specified MulticastInterface.
// Returns the index value of the MulticastInterface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicMulticastInterface(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicMulticastInterface API operation for FortiManager deletes the specified MulticastInterface.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicMulticastInterface(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicMulticastInterface API operation for FortiManager gets the MulticastInterface
// with the specified index value.
// Returns the requested MulticastInterface value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicMulticastInterface(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicMulticastInterfaceDynamicMapping API operation for FortiManager creates a new MulticastInterfaceDynamicMapping.
// Returns the index value of the MulticastInterfaceDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicMulticastInterfaceDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicMulticastInterfaceDynamicMapping API operation for FortiManager updates the specified MulticastInterfaceDynamicMapping.
// Returns the index value of the MulticastInterfaceDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicMulticastInterfaceDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicMulticastInterfaceDynamicMapping API operation for FortiManager deletes the specified MulticastInterfaceDynamicMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicMulticastInterfaceDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicMulticastInterfaceDynamicMapping API operation for FortiManager gets the MulticastInterfaceDynamicMapping
// with the specified index value.
// Returns the requested MulticastInterfaceDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - multicast interface dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicMulticastInterfaceDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/multicast/interface/{interface}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicVip API operation for FortiManager creates a new Vip.
// Returns the index value of the Vip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicVip(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicVip API operation for FortiManager updates the specified Vip.
// Returns the index value of the Vip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicVip(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicVip API operation for FortiManager deletes the specified Vip.
// Returns error for service API and SDK errors.
// See the object dynamic - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicVip(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicVip API operation for FortiManager gets the Vip
// with the specified index value.
// Returns the requested Vip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicVip(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicVpntunnel API operation for FortiManager creates a new Vpntunnel.
// Returns the index value of the Vpntunnel and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicVpntunnel(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicVpntunnel API operation for FortiManager updates the specified Vpntunnel.
// Returns the index value of the Vpntunnel and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicVpntunnel(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicVpntunnel API operation for FortiManager deletes the specified Vpntunnel.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicVpntunnel(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicVpntunnel API operation for FortiManager gets the Vpntunnel
// with the specified index value.
// Returns the requested Vpntunnel value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicVpntunnel(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectDynamicVpntunnelDynamicMapping API operation for FortiManager creates a new VpntunnelDynamicMapping.
// Returns the index value of the VpntunnelDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectDynamicVpntunnelDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel/{vpntunnel}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectDynamicVpntunnelDynamicMapping API operation for FortiManager updates the specified VpntunnelDynamicMapping.
// Returns the index value of the VpntunnelDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectDynamicVpntunnelDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel/{vpntunnel}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectDynamicVpntunnelDynamicMapping API operation for FortiManager deletes the specified VpntunnelDynamicMapping.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectDynamicVpntunnelDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel/{vpntunnel}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectDynamicVpntunnelDynamicMapping API operation for FortiManager gets the VpntunnelDynamicMapping
// with the specified index value.
// Returns the requested VpntunnelDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object dynamic - vpntunnel dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectDynamicVpntunnelDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/dynamic/vpntunnel/{vpntunnel}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterBlockAllowList API operation for FortiManager creates a new Block Allow List.
// Returns the index value of the Block Allow List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBlockAllowList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBlockAllowList API operation for FortiManager updates the specified Block Allow List.
// Returns the index value of the Block Allow List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBlockAllowList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBlockAllowList API operation for FortiManager deletes the specified Block Allow List.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBlockAllowList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBlockAllowList API operation for FortiManager gets the Block Allow List
// with the specified index value.
// Returns the requested Block Allow List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBlockAllowList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterBlockAllowListEntries API operation for FortiManager creates a new Block Allow ListEntries.
// Returns the index value of the Block Allow ListEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBlockAllowListEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBlockAllowListEntries API operation for FortiManager updates the specified Block Allow ListEntries.
// Returns the index value of the Block Allow ListEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBlockAllowListEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBlockAllowListEntries API operation for FortiManager deletes the specified Block Allow ListEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBlockAllowListEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBlockAllowListEntries API operation for FortiManager gets the Block Allow ListEntries
// with the specified index value.
// Returns the requested Block Allow ListEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBlockAllowListEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterBlockAllowListEntriesMove API operation for FortiManager updates the specified Block Allow ListEntriesMove.
// Returns the index value of the Block Allow ListEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBlockAllowListEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectEmailfilterBlockAllowListEntriesMove API operation for FortiManager gets the Block Allow ListEntriesMove
// with the specified index value.
// Returns the requested Block Allow ListEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - block-allow-list entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBlockAllowListEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/block-allow-list/{block-allow-list}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectEmailfilterBwl API operation for FortiManager creates a new Bwl.
// Returns the index value of the Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBwl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBwl API operation for FortiManager updates the specified Bwl.
// Returns the index value of the Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBwl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBwl API operation for FortiManager deletes the specified Bwl.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBwl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBwl API operation for FortiManager gets the Bwl
// with the specified index value.
// Returns the requested Bwl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBwl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterBwlEntries API operation for FortiManager creates a new BwlEntries.
// Returns the index value of the BwlEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBwlEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBwlEntries API operation for FortiManager updates the specified BwlEntries.
// Returns the index value of the BwlEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBwlEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBwlEntries API operation for FortiManager deletes the specified BwlEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBwlEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBwlEntries API operation for FortiManager gets the BwlEntries
// with the specified index value.
// Returns the requested BwlEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBwlEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterBwlEntriesMove API operation for FortiManager updates the specified BwlEntriesMove.
// Returns the index value of the BwlEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBwlEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectEmailfilterBwlEntriesMove API operation for FortiManager gets the BwlEntriesMove
// with the specified index value.
// Returns the requested BwlEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bwl entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBwlEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bwl/{bwl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectEmailfilterBword API operation for FortiManager creates a new Bword.
// Returns the index value of the Bword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBword(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBword API operation for FortiManager updates the specified Bword.
// Returns the index value of the Bword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBword(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBword API operation for FortiManager deletes the specified Bword.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBword(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBword API operation for FortiManager gets the Bword
// with the specified index value.
// Returns the requested Bword value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBword(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterBwordEntries API operation for FortiManager creates a new BwordEntries.
// Returns the index value of the BwordEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterBwordEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterBwordEntries API operation for FortiManager updates the specified BwordEntries.
// Returns the index value of the BwordEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBwordEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterBwordEntries API operation for FortiManager deletes the specified BwordEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterBwordEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterBwordEntries API operation for FortiManager gets the BwordEntries
// with the specified index value.
// Returns the requested BwordEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBwordEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterBwordEntriesMove API operation for FortiManager updates the specified BwordEntriesMove.
// Returns the index value of the BwordEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterBwordEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectEmailfilterBwordEntriesMove API operation for FortiManager gets the BwordEntriesMove
// with the specified index value.
// Returns the requested BwordEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - bword entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterBwordEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/bword/{bword}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectEmailfilterDnsbl API operation for FortiManager creates a new Dnsbl.
// Returns the index value of the Dnsbl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterDnsbl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterDnsbl API operation for FortiManager updates the specified Dnsbl.
// Returns the index value of the Dnsbl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterDnsbl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterDnsbl API operation for FortiManager deletes the specified Dnsbl.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterDnsbl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterDnsbl API operation for FortiManager gets the Dnsbl
// with the specified index value.
// Returns the requested Dnsbl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterDnsbl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterDnsblEntries API operation for FortiManager creates a new DnsblEntries.
// Returns the index value of the DnsblEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterDnsblEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl/{dnsbl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterDnsblEntries API operation for FortiManager updates the specified DnsblEntries.
// Returns the index value of the DnsblEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterDnsblEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl/{dnsbl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterDnsblEntries API operation for FortiManager deletes the specified DnsblEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterDnsblEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl/{dnsbl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterDnsblEntries API operation for FortiManager gets the DnsblEntries
// with the specified index value.
// Returns the requested DnsblEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - dnsbl entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterDnsblEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/dnsbl/{dnsbl}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterFortishield API operation for FortiManager updates the specified Fortishield.
// Returns the index value of the Fortishield and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - fortishield chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterFortishield(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/fortishield"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterFortishield API operation for FortiManager deletes the specified Fortishield.
// Returns error for service API and SDK errors.
// See the object emailfilter - fortishield chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterFortishield(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - fortishield
	return
}

// ReadObjectEmailfilterFortishield API operation for FortiManager gets the Fortishield
// with the specified index value.
// Returns the requested Fortishield value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - fortishield chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterFortishield(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/fortishield"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterIptrust API operation for FortiManager creates a new Iptrust.
// Returns the index value of the Iptrust and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterIptrust(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterIptrust API operation for FortiManager updates the specified Iptrust.
// Returns the index value of the Iptrust and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterIptrust(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterIptrust API operation for FortiManager deletes the specified Iptrust.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterIptrust(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterIptrust API operation for FortiManager gets the Iptrust
// with the specified index value.
// Returns the requested Iptrust value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterIptrust(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterIptrustEntries API operation for FortiManager creates a new IptrustEntries.
// Returns the index value of the IptrustEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterIptrustEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust/{iptrust}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterIptrustEntries API operation for FortiManager updates the specified IptrustEntries.
// Returns the index value of the IptrustEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterIptrustEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust/{iptrust}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterIptrustEntries API operation for FortiManager deletes the specified IptrustEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterIptrustEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust/{iptrust}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterIptrustEntries API operation for FortiManager gets the IptrustEntries
// with the specified index value.
// Returns the requested IptrustEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - iptrust entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterIptrustEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/iptrust/{iptrust}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterMheader API operation for FortiManager creates a new Mheader.
// Returns the index value of the Mheader and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterMheader(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterMheader API operation for FortiManager updates the specified Mheader.
// Returns the index value of the Mheader and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterMheader(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterMheader API operation for FortiManager deletes the specified Mheader.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterMheader(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterMheader API operation for FortiManager gets the Mheader
// with the specified index value.
// Returns the requested Mheader value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterMheader(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterMheaderEntries API operation for FortiManager creates a new MheaderEntries.
// Returns the index value of the MheaderEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterMheaderEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader/{mheader}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterMheaderEntries API operation for FortiManager updates the specified MheaderEntries.
// Returns the index value of the MheaderEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterMheaderEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader/{mheader}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterMheaderEntries API operation for FortiManager deletes the specified MheaderEntries.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterMheaderEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader/{mheader}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterMheaderEntries API operation for FortiManager gets the MheaderEntries
// with the specified index value.
// Returns the requested MheaderEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - mheader entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterMheaderEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/mheader/{mheader}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterOptions API operation for FortiManager updates the specified Options.
// Returns the index value of the Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterOptions API operation for FortiManager deletes the specified Options.
// Returns error for service API and SDK errors.
// See the object emailfilter - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterOptions(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - options
	return
}

// ReadObjectEmailfilterOptions API operation for FortiManager gets the Options
// with the specified index value.
// Returns the requested Options value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEmailfilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEmailfilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEmailfilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEmailfilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfileGmail API operation for FortiManager updates the specified ProfileGmail.
// Returns the index value of the ProfileGmail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile gmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfileGmail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/gmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfileGmail API operation for FortiManager deletes the specified ProfileGmail.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile gmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfileGmail(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile gmail
	return
}

// ReadObjectEmailfilterProfileGmail API operation for FortiManager gets the ProfileGmail
// with the specified index value.
// Returns the requested ProfileGmail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile gmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfileGmail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/gmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfileImap API operation for FortiManager updates the specified ProfileImap.
// Returns the index value of the ProfileImap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfileImap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfileImap API operation for FortiManager deletes the specified ProfileImap.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfileImap(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile imap
	return
}

// ReadObjectEmailfilterProfileImap API operation for FortiManager gets the ProfileImap
// with the specified index value.
// Returns the requested ProfileImap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfileImap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfileMapi API operation for FortiManager updates the specified ProfileMapi.
// Returns the index value of the ProfileMapi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfileMapi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfileMapi API operation for FortiManager deletes the specified ProfileMapi.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfileMapi(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile mapi
	return
}

// ReadObjectEmailfilterProfileMapi API operation for FortiManager gets the ProfileMapi
// with the specified index value.
// Returns the requested ProfileMapi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfileMapi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfileMsnHotmail API operation for FortiManager updates the specified ProfileMsn Hotmail.
// Returns the index value of the ProfileMsn Hotmail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile msn-hotmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfileMsnHotmail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/msn-hotmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfileMsnHotmail API operation for FortiManager deletes the specified ProfileMsn Hotmail.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile msn-hotmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfileMsnHotmail(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile msn-hotmail
	return
}

// ReadObjectEmailfilterProfileMsnHotmail API operation for FortiManager gets the ProfileMsn Hotmail
// with the specified index value.
// Returns the requested ProfileMsn Hotmail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile msn-hotmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfileMsnHotmail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/msn-hotmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfilePop3 API operation for FortiManager updates the specified ProfilePop3.
// Returns the index value of the ProfilePop3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfilePop3(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfilePop3 API operation for FortiManager deletes the specified ProfilePop3.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfilePop3(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile pop3
	return
}

// ReadObjectEmailfilterProfilePop3 API operation for FortiManager gets the ProfilePop3
// with the specified index value.
// Returns the requested ProfilePop3 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfilePop3(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectEmailfilterProfileSmtp API operation for FortiManager updates the specified ProfileSmtp.
// Returns the index value of the ProfileSmtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEmailfilterProfileSmtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEmailfilterProfileSmtp API operation for FortiManager deletes the specified ProfileSmtp.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEmailfilterProfileSmtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object emailfilter - profile smtp
	return
}

// ReadObjectEmailfilterProfileSmtp API operation for FortiManager gets the ProfileSmtp
// with the specified index value.
// Returns the requested ProfileSmtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object emailfilter - profile smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEmailfilterProfileSmtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/emailfilter/profile/{profile}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectEndpointControlFctems API operation for FortiManager creates a new Fctems.
// Returns the index value of the Fctems and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object endpoint-control - fctems chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectEndpointControlFctems(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/endpoint-control/fctems"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectEndpointControlFctems API operation for FortiManager updates the specified Fctems.
// Returns the index value of the Fctems and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object endpoint-control - fctems chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectEndpointControlFctems(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/endpoint-control/fctems"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectEndpointControlFctems API operation for FortiManager deletes the specified Fctems.
// Returns error for service API and SDK errors.
// See the object endpoint-control - fctems chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectEndpointControlFctems(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/endpoint-control/fctems"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectEndpointControlFctems API operation for FortiManager gets the Fctems
// with the specified index value.
// Returns the requested Fctems value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object endpoint-control - fctems chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectEndpointControlFctems(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/endpoint-control/fctems"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtenderControllerDataplan API operation for FortiManager creates a new Dataplan.
// Returns the index value of the Dataplan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerDataplan(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerDataplan API operation for FortiManager updates the specified Dataplan.
// Returns the index value of the Dataplan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerDataplan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerDataplan API operation for FortiManager deletes the specified Dataplan.
// Returns error for service API and SDK errors.
// See the object extender-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerDataplan(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerDataplan API operation for FortiManager gets the Dataplan
// with the specified index value.
// Returns the requested Dataplan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerDataplan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtenderControllerExtenderProfile API operation for FortiManager creates a new Extender Profile.
// Returns the index value of the Extender Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerExtenderProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerExtenderProfile API operation for FortiManager updates the specified Extender Profile.
// Returns the index value of the Extender Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfile API operation for FortiManager deletes the specified Extender Profile.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerExtenderProfile API operation for FortiManager gets the Extender Profile
// with the specified index value.
// Returns the requested Extender Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellular API operation for FortiManager updates the specified Extender ProfileCellular.
// Returns the index value of the Extender ProfileCellular and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellular(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellular API operation for FortiManager deletes the specified Extender ProfileCellular.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellular(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular
	return
}

// ReadObjectExtenderControllerExtenderProfileCellular API operation for FortiManager gets the Extender ProfileCellular
// with the specified index value.
// Returns the requested Extender ProfileCellular value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellular(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularControllerReport API operation for FortiManager updates the specified Extender ProfileCellularController Report.
// Returns the index value of the Extender ProfileCellularController Report and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularControllerReport(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/controller-report"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularControllerReport API operation for FortiManager deletes the specified Extender ProfileCellularController Report.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularControllerReport(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular controller-report
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularControllerReport API operation for FortiManager gets the Extender ProfileCellularController Report
// with the specified index value.
// Returns the requested Extender ProfileCellularController Report value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularControllerReport(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/controller-report"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularModem1 API operation for FortiManager updates the specified Extender ProfileCellularModem1.
// Returns the index value of the Extender ProfileCellularModem1 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularModem1(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularModem1 API operation for FortiManager deletes the specified Extender ProfileCellularModem1.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularModem1(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular modem1
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularModem1 API operation for FortiManager gets the Extender ProfileCellularModem1
// with the specified index value.
// Returns the requested Extender ProfileCellularModem1 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularModem1(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager updates the specified Extender ProfileCellularModem1Auto Switch.
// Returns the index value of the Extender ProfileCellularModem1Auto Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem1/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager deletes the specified Extender ProfileCellularModem1Auto Switch.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular modem1 auto-switch
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager gets the Extender ProfileCellularModem1Auto Switch
// with the specified index value.
// Returns the requested Extender ProfileCellularModem1Auto Switch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularModem1AutoSwitch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem1/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularModem2 API operation for FortiManager updates the specified Extender ProfileCellularModem2.
// Returns the index value of the Extender ProfileCellularModem2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularModem2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularModem2 API operation for FortiManager deletes the specified Extender ProfileCellularModem2.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularModem2(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular modem2
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularModem2 API operation for FortiManager gets the Extender ProfileCellularModem2
// with the specified index value.
// Returns the requested Extender ProfileCellularModem2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularModem2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager updates the specified Extender ProfileCellularModem2Auto Switch.
// Returns the index value of the Extender ProfileCellularModem2Auto Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem2/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager deletes the specified Extender ProfileCellularModem2Auto Switch.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular modem2 auto-switch
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager gets the Extender ProfileCellularModem2Auto Switch
// with the specified index value.
// Returns the requested Extender ProfileCellularModem2Auto Switch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularModem2AutoSwitch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/modem2/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularSmsNotification API operation for FortiManager updates the specified Extender ProfileCellularSms Notification.
// Returns the index value of the Extender ProfileCellularSms Notification and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularSmsNotification(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularSmsNotification API operation for FortiManager deletes the specified Extender ProfileCellularSms Notification.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularSmsNotification(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular sms-notification
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularSmsNotification API operation for FortiManager gets the Extender ProfileCellularSms Notification
// with the specified index value.
// Returns the requested Extender ProfileCellularSms Notification value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularSmsNotification(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationAlert.
// Returns the index value of the Extender ProfileCellularSms NotificationAlert and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager deletes the specified Extender ProfileCellularSms NotificationAlert.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile cellular sms-notification alert
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager gets the Extender ProfileCellularSms NotificationAlert
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationAlert value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationAlert(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager creates a new Extender ProfileCellularSms NotificationReceiver.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationReceiver.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager deletes the specified Extender ProfileCellularSms NotificationReceiver.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager gets the Extender ProfileCellularSms NotificationReceiver
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationReceiver value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiver(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiverMove API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationReceiverMove.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiverMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiverMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver/{receiver}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiverMove API operation for FortiManager gets the Extender ProfileCellularSms NotificationReceiverMove
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationReceiverMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile cellular sms-notification receiver move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileCellularSmsNotificationReceiverMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectExtenderControllerExtenderProfileLanExtension API operation for FortiManager updates the specified Extender ProfileLan Extension.
// Returns the index value of the Extender ProfileLan Extension and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileLanExtension(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileLanExtension API operation for FortiManager deletes the specified Extender ProfileLan Extension.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileLanExtension(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - extender-profile lan-extension
	return
}

// ReadObjectExtenderControllerExtenderProfileLanExtension API operation for FortiManager gets the Extender ProfileLan Extension
// with the specified index value.
// Returns the requested Extender ProfileLan Extension value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileLanExtension(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtenderControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager creates a new Extender ProfileLan ExtensionBackhaul.
// Returns the index value of the Extender ProfileLan ExtensionBackhaul and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerExtenderProfileLanExtensionBackhaul(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager updates the specified Extender ProfileLan ExtensionBackhaul.
// Returns the index value of the Extender ProfileLan ExtensionBackhaul and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileLanExtensionBackhaul(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager deletes the specified Extender ProfileLan ExtensionBackhaul.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerExtenderProfileLanExtensionBackhaul(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager gets the Extender ProfileLan ExtensionBackhaul
// with the specified index value.
// Returns the requested Extender ProfileLan ExtensionBackhaul value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileLanExtensionBackhaul(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerExtenderProfileLanExtensionBackhaulMove API operation for FortiManager updates the specified Extender ProfileLan ExtensionBackhaulMove.
// Returns the index value of the Extender ProfileLan ExtensionBackhaulMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerExtenderProfileLanExtensionBackhaulMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul/{backhaul}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectExtenderControllerExtenderProfileLanExtensionBackhaulMove API operation for FortiManager gets the Extender ProfileLan ExtensionBackhaulMove
// with the specified index value.
// Returns the requested Extender ProfileLan ExtensionBackhaulMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - extender-profile lan-extension backhaul move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerExtenderProfileLanExtensionBackhaulMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectExtenderControllerSimProfile API operation for FortiManager creates a new SimProfile.
// Returns the index value of the SimProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerSimProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerSimProfile API operation for FortiManager updates the specified SimProfile.
// Returns the index value of the SimProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerSimProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerSimProfile API operation for FortiManager deletes the specified SimProfile.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerSimProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerSimProfile API operation for FortiManager gets the SimProfile
// with the specified index value.
// Returns the requested SimProfile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerSimProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtenderControllerSimProfileAutoSwitchProfile API operation for FortiManager updates the specified SimProfileAuto SwitchProfile.
// Returns the index value of the SimProfileAuto SwitchProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile auto-switch profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerSimProfileAutoSwitchProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile/{sim_profile}/auto-switch_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerSimProfileAutoSwitchProfile API operation for FortiManager deletes the specified SimProfileAuto SwitchProfile.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile auto-switch profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerSimProfileAutoSwitchProfile(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extender-controller - sim profile auto-switch profile
	return
}

// ReadObjectExtenderControllerSimProfileAutoSwitchProfile API operation for FortiManager gets the SimProfileAuto SwitchProfile
// with the specified index value.
// Returns the requested SimProfileAuto SwitchProfile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - sim profile auto-switch profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerSimProfileAutoSwitchProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/sim_profile/{sim_profile}/auto-switch_profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtenderControllerTemplate API operation for FortiManager creates a new Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtenderControllerTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtenderControllerTemplate API operation for FortiManager updates the specified Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtenderControllerTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtenderControllerTemplate API operation for FortiManager deletes the specified Template.
// Returns error for service API and SDK errors.
// See the object extender-controller - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtenderControllerTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extender-controller/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtenderControllerTemplate API operation for FortiManager gets the Template
// with the specified index value.
// Returns the requested Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extender-controller - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtenderControllerTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extender-controller/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtensionControllerDataplan API operation for FortiManager creates a new Dataplan.
// Returns the index value of the Dataplan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtensionControllerDataplan(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtensionControllerDataplan API operation for FortiManager updates the specified Dataplan.
// Returns the index value of the Dataplan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerDataplan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerDataplan API operation for FortiManager deletes the specified Dataplan.
// Returns error for service API and SDK errors.
// See the object extension-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerDataplan(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extension-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtensionControllerDataplan API operation for FortiManager gets the Dataplan
// with the specified index value.
// Returns the requested Dataplan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - dataplan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerDataplan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/dataplan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtensionControllerExtenderProfile API operation for FortiManager creates a new Extender Profile.
// Returns the index value of the Extender Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtensionControllerExtenderProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtensionControllerExtenderProfile API operation for FortiManager updates the specified Extender Profile.
// Returns the index value of the Extender Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfile API operation for FortiManager deletes the specified Extender Profile.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtensionControllerExtenderProfile API operation for FortiManager gets the Extender Profile
// with the specified index value.
// Returns the requested Extender Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellular API operation for FortiManager updates the specified Extender ProfileCellular.
// Returns the index value of the Extender ProfileCellular and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellular(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellular API operation for FortiManager deletes the specified Extender ProfileCellular.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellular(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular
	return
}

// ReadObjectExtensionControllerExtenderProfileCellular API operation for FortiManager gets the Extender ProfileCellular
// with the specified index value.
// Returns the requested Extender ProfileCellular value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellular(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularControllerReport API operation for FortiManager updates the specified Extender ProfileCellularController Report.
// Returns the index value of the Extender ProfileCellularController Report and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularControllerReport(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/controller-report"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularControllerReport API operation for FortiManager deletes the specified Extender ProfileCellularController Report.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularControllerReport(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular controller-report
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularControllerReport API operation for FortiManager gets the Extender ProfileCellularController Report
// with the specified index value.
// Returns the requested Extender ProfileCellularController Report value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular controller-report chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularControllerReport(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/controller-report"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularModem1 API operation for FortiManager updates the specified Extender ProfileCellularModem1.
// Returns the index value of the Extender ProfileCellularModem1 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularModem1(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularModem1 API operation for FortiManager deletes the specified Extender ProfileCellularModem1.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularModem1(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular modem1
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularModem1 API operation for FortiManager gets the Extender ProfileCellularModem1
// with the specified index value.
// Returns the requested Extender ProfileCellularModem1 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularModem1(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager updates the specified Extender ProfileCellularModem1Auto Switch.
// Returns the index value of the Extender ProfileCellularModem1Auto Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem1/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager deletes the specified Extender ProfileCellularModem1Auto Switch.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular modem1 auto-switch
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch API operation for FortiManager gets the Extender ProfileCellularModem1Auto Switch
// with the specified index value.
// Returns the requested Extender ProfileCellularModem1Auto Switch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem1 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularModem1AutoSwitch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem1/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularModem2 API operation for FortiManager updates the specified Extender ProfileCellularModem2.
// Returns the index value of the Extender ProfileCellularModem2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularModem2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularModem2 API operation for FortiManager deletes the specified Extender ProfileCellularModem2.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularModem2(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular modem2
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularModem2 API operation for FortiManager gets the Extender ProfileCellularModem2
// with the specified index value.
// Returns the requested Extender ProfileCellularModem2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularModem2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager updates the specified Extender ProfileCellularModem2Auto Switch.
// Returns the index value of the Extender ProfileCellularModem2Auto Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem2/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager deletes the specified Extender ProfileCellularModem2Auto Switch.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular modem2 auto-switch
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch API operation for FortiManager gets the Extender ProfileCellularModem2Auto Switch
// with the specified index value.
// Returns the requested Extender ProfileCellularModem2Auto Switch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular modem2 auto-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularModem2AutoSwitch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/modem2/auto-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularSmsNotification API operation for FortiManager updates the specified Extender ProfileCellularSms Notification.
// Returns the index value of the Extender ProfileCellularSms Notification and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularSmsNotification(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularSmsNotification API operation for FortiManager deletes the specified Extender ProfileCellularSms Notification.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularSmsNotification(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular sms-notification
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularSmsNotification API operation for FortiManager gets the Extender ProfileCellularSms Notification
// with the specified index value.
// Returns the requested Extender ProfileCellularSms Notification value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularSmsNotification(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationAlert.
// Returns the index value of the Extender ProfileCellularSms NotificationAlert and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager deletes the specified Extender ProfileCellularSms NotificationAlert.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile cellular sms-notification alert
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert API operation for FortiManager gets the Extender ProfileCellularSms NotificationAlert
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationAlert value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationAlert(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager creates a new Extender ProfileCellularSms NotificationReceiver.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationReceiver.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager deletes the specified Extender ProfileCellularSms NotificationReceiver.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver API operation for FortiManager gets the Extender ProfileCellularSms NotificationReceiver
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationReceiver value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiver(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiverMove API operation for FortiManager updates the specified Extender ProfileCellularSms NotificationReceiverMove.
// Returns the index value of the Extender ProfileCellularSms NotificationReceiverMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiverMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver/{receiver}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiverMove API operation for FortiManager gets the Extender ProfileCellularSms NotificationReceiverMove
// with the specified index value.
// Returns the requested Extender ProfileCellularSms NotificationReceiverMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile cellular sms-notification receiver move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileCellularSmsNotificationReceiverMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/cellular/sms-notification/receiver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectExtensionControllerExtenderProfileLanExtension API operation for FortiManager updates the specified Extender ProfileLan Extension.
// Returns the index value of the Extender ProfileLan Extension and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileLanExtension(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileLanExtension API operation for FortiManager deletes the specified Extender ProfileLan Extension.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileLanExtension(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile lan-extension
	return
}

// ReadObjectExtensionControllerExtenderProfileLanExtension API operation for FortiManager gets the Extender ProfileLan Extension
// with the specified index value.
// Returns the requested Extender ProfileLan Extension value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileLanExtension(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectExtensionControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager creates a new Extender ProfileLan ExtensionBackhaul.
// Returns the index value of the Extender ProfileLan ExtensionBackhaul and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtensionControllerExtenderProfileLanExtensionBackhaul(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager updates the specified Extender ProfileLan ExtensionBackhaul.
// Returns the index value of the Extender ProfileLan ExtensionBackhaul and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileLanExtensionBackhaul(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager deletes the specified Extender ProfileLan ExtensionBackhaul.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileLanExtensionBackhaul(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtensionControllerExtenderProfileLanExtensionBackhaul API operation for FortiManager gets the Extender ProfileLan ExtensionBackhaul
// with the specified index value.
// Returns the requested Extender ProfileLan ExtensionBackhaul value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileLanExtensionBackhaul(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileLanExtensionBackhaulMove API operation for FortiManager updates the specified Extender ProfileLan ExtensionBackhaulMove.
// Returns the index value of the Extender ProfileLan ExtensionBackhaulMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileLanExtensionBackhaulMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul/{backhaul}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectExtensionControllerExtenderProfileLanExtensionBackhaulMove API operation for FortiManager gets the Extender ProfileLan ExtensionBackhaulMove
// with the specified index value.
// Returns the requested Extender ProfileLan ExtensionBackhaulMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension backhaul move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileLanExtensionBackhaulMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/backhaul"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectExtensionControllerExtenderProfileLanExtensionDownlinks API operation for FortiManager creates a new Extender ProfileLan ExtensionDownlinks.
// Returns the index value of the Extender ProfileLan ExtensionDownlinks and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension downlinks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectExtensionControllerExtenderProfileLanExtensionDownlinks(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/downlinks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileLanExtensionDownlinks API operation for FortiManager updates the specified Extender ProfileLan ExtensionDownlinks.
// Returns the index value of the Extender ProfileLan ExtensionDownlinks and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension downlinks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileLanExtensionDownlinks(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/downlinks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileLanExtensionDownlinks API operation for FortiManager deletes the specified Extender ProfileLan ExtensionDownlinks.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension downlinks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileLanExtensionDownlinks(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/downlinks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectExtensionControllerExtenderProfileLanExtensionDownlinks API operation for FortiManager gets the Extender ProfileLan ExtensionDownlinks
// with the specified index value.
// Returns the requested Extender ProfileLan ExtensionDownlinks value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile lan-extension downlinks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileLanExtensionDownlinks(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/lan-extension/downlinks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileWifi API operation for FortiManager updates the specified Extender ProfileWifi.
// Returns the index value of the Extender ProfileWifi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileWifi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileWifi API operation for FortiManager deletes the specified Extender ProfileWifi.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileWifi(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile wifi
	return
}

// ReadObjectExtensionControllerExtenderProfileWifi API operation for FortiManager gets the Extender ProfileWifi
// with the specified index value.
// Returns the requested Extender ProfileWifi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileWifi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileWifiRadio1 API operation for FortiManager updates the specified Extender ProfileWifiRadio 1.
// Returns the index value of the Extender ProfileWifiRadio 1 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileWifiRadio1(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi/radio-1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileWifiRadio1 API operation for FortiManager deletes the specified Extender ProfileWifiRadio 1.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileWifiRadio1(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile wifi radio-1
	return
}

// ReadObjectExtensionControllerExtenderProfileWifiRadio1 API operation for FortiManager gets the Extender ProfileWifiRadio 1
// with the specified index value.
// Returns the requested Extender ProfileWifiRadio 1 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileWifiRadio1(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi/radio-1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectExtensionControllerExtenderProfileWifiRadio2 API operation for FortiManager updates the specified Extender ProfileWifiRadio 2.
// Returns the index value of the Extender ProfileWifiRadio 2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectExtensionControllerExtenderProfileWifiRadio2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi/radio-2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectExtensionControllerExtenderProfileWifiRadio2 API operation for FortiManager deletes the specified Extender ProfileWifiRadio 2.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectExtensionControllerExtenderProfileWifiRadio2(mkey string, paradict map[string]string) (err error) {

	//No unset API for object extension-controller - extender-profile wifi radio-2
	return
}

// ReadObjectExtensionControllerExtenderProfileWifiRadio2 API operation for FortiManager gets the Extender ProfileWifiRadio 2
// with the specified index value.
// Returns the requested Extender ProfileWifiRadio 2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object extension-controller - extender-profile wifi radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectExtensionControllerExtenderProfileWifiRadio2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/extension-controller/extender-profile/{extender-profile}/wifi/radio-2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFileFilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFileFilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFileFilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFileFilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFileFilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object file-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFileFilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/file-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFileFilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFileFilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFileFilterProfileRules API operation for FortiManager creates a new ProfileRules.
// Returns the index value of the ProfileRules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFileFilterProfileRules(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFileFilterProfileRules API operation for FortiManager updates the specified ProfileRules.
// Returns the index value of the ProfileRules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFileFilterProfileRules(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFileFilterProfileRules API operation for FortiManager deletes the specified ProfileRules.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFileFilterProfileRules(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFileFilterProfileRules API operation for FortiManager gets the ProfileRules
// with the specified index value.
// Returns the requested ProfileRules value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFileFilterProfileRules(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFileFilterProfileRulesMove API operation for FortiManager updates the specified ProfileRulesMove.
// Returns the index value of the ProfileRulesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFileFilterProfileRulesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules/{rules}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFileFilterProfileRulesMove API operation for FortiManager gets the ProfileRulesMove
// with the specified index value.
// Returns the requested ProfileRulesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object file-filter - profile rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFileFilterProfileRulesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/file-filter/profile/{profile}/rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallAccessProxy API operation for FortiManager creates a new Access Proxy.
// Returns the index value of the Access Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy API operation for FortiManager updates the specified Access Proxy.
// Returns the index value of the Access Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy API operation for FortiManager deletes the specified Access Proxy.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy API operation for FortiManager gets the Access Proxy
// with the specified index value.
// Returns the requested Access Proxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxySshClientCert API operation for FortiManager creates a new Access Proxy Ssh Client Cert.
// Returns the index value of the Access Proxy Ssh Client Cert and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxySshClientCert(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxySshClientCert API operation for FortiManager updates the specified Access Proxy Ssh Client Cert.
// Returns the index value of the Access Proxy Ssh Client Cert and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxySshClientCert(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxySshClientCert API operation for FortiManager deletes the specified Access Proxy Ssh Client Cert.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxySshClientCert(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxySshClientCert API operation for FortiManager gets the Access Proxy Ssh Client Cert
// with the specified index value.
// Returns the requested Access Proxy Ssh Client Cert value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxySshClientCert(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxySshClientCertCertExtension API operation for FortiManager creates a new Access Proxy Ssh Client CertCert Extension.
// Returns the index value of the Access Proxy Ssh Client CertCert Extension and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert cert-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxySshClientCertCertExtension(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert/{access-proxy-ssh-client-cert}/cert-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxySshClientCertCertExtension API operation for FortiManager updates the specified Access Proxy Ssh Client CertCert Extension.
// Returns the index value of the Access Proxy Ssh Client CertCert Extension and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert cert-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxySshClientCertCertExtension(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert/{access-proxy-ssh-client-cert}/cert-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxySshClientCertCertExtension API operation for FortiManager deletes the specified Access Proxy Ssh Client CertCert Extension.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert cert-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxySshClientCertCertExtension(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert/{access-proxy-ssh-client-cert}/cert-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxySshClientCertCertExtension API operation for FortiManager gets the Access Proxy Ssh Client CertCert Extension
// with the specified index value.
// Returns the requested Access Proxy Ssh Client CertCert Extension value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert cert-extension chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxySshClientCertCertExtension(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert/{access-proxy-ssh-client-cert}/cert-extension"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxySshClientCertMove API operation for FortiManager updates the specified Access Proxy Ssh Client CertMove.
// Returns the index value of the Access Proxy Ssh Client CertMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxySshClientCertMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert/{access-proxy-ssh-client-cert}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallAccessProxySshClientCertMove API operation for FortiManager gets the Access Proxy Ssh Client CertMove
// with the specified index value.
// Returns the requested Access Proxy Ssh Client CertMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-ssh-client-cert move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxySshClientCertMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-ssh-client-cert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallAccessProxyVirtualHost API operation for FortiManager creates a new Access Proxy Virtual Host.
// Returns the index value of the Access Proxy Virtual Host and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-virtual-host chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyVirtualHost(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-virtual-host"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyVirtualHost API operation for FortiManager updates the specified Access Proxy Virtual Host.
// Returns the index value of the Access Proxy Virtual Host and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-virtual-host chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyVirtualHost(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-virtual-host"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyVirtualHost API operation for FortiManager deletes the specified Access Proxy Virtual Host.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-virtual-host chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyVirtualHost(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-virtual-host"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyVirtualHost API operation for FortiManager gets the Access Proxy Virtual Host
// with the specified index value.
// Returns the requested Access Proxy Virtual Host value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy-virtual-host chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyVirtualHost(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy-virtual-host"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6 API operation for FortiManager creates a new Access Proxy6.
// Returns the index value of the Access Proxy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6 API operation for FortiManager updates the specified Access Proxy6.
// Returns the index value of the Access Proxy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6 API operation for FortiManager deletes the specified Access Proxy6.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6 API operation for FortiManager gets the Access Proxy6
// with the specified index value.
// Returns the requested Access Proxy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGateway API operation for FortiManager creates a new Access Proxy6Api Gateway.
// Returns the index value of the Access Proxy6Api Gateway and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGateway(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGateway API operation for FortiManager updates the specified Access Proxy6Api Gateway.
// Returns the index value of the Access Proxy6Api Gateway and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGateway(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGateway API operation for FortiManager deletes the specified Access Proxy6Api Gateway.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGateway(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGateway API operation for FortiManager gets the Access Proxy6Api Gateway
// with the specified index value.
// Returns the requested Access Proxy6Api Gateway value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGateway(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGateway6 API operation for FortiManager creates a new Access Proxy6Api Gateway6.
// Returns the index value of the Access Proxy6Api Gateway6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGateway6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGateway6 API operation for FortiManager updates the specified Access Proxy6Api Gateway6.
// Returns the index value of the Access Proxy6Api Gateway6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGateway6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGateway6 API operation for FortiManager deletes the specified Access Proxy6Api Gateway6.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGateway6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGateway6 API operation for FortiManager gets the Access Proxy6Api Gateway6
// with the specified index value.
// Returns the requested Access Proxy6Api Gateway6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGateway6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGateway6Quic API operation for FortiManager updates the specified Access Proxy6Api Gateway6Quic.
// Returns the index value of the Access Proxy6Api Gateway6Quic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGateway6Quic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGateway6Quic API operation for FortiManager deletes the specified Access Proxy6Api Gateway6Quic.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGateway6Quic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - access-proxy6 api-gateway6 quic
	return
}

// ReadObjectFirewallAccessProxy6ApiGateway6Quic API operation for FortiManager gets the Access Proxy6Api Gateway6Quic
// with the specified index value.
// Returns the requested Access Proxy6Api Gateway6Quic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGateway6Quic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGateway6Realservers API operation for FortiManager creates a new Access Proxy6Api Gateway6Realservers.
// Returns the index value of the Access Proxy6Api Gateway6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGateway6Realservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGateway6Realservers API operation for FortiManager updates the specified Access Proxy6Api Gateway6Realservers.
// Returns the index value of the Access Proxy6Api Gateway6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGateway6Realservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGateway6Realservers API operation for FortiManager deletes the specified Access Proxy6Api Gateway6Realservers.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGateway6Realservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGateway6Realservers API operation for FortiManager gets the Access Proxy6Api Gateway6Realservers
// with the specified index value.
// Returns the requested Access Proxy6Api Gateway6Realservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGateway6Realservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGateway6SslCipherSuites API operation for FortiManager creates a new Access Proxy6Api Gateway6Ssl Cipher Suites.
// Returns the index value of the Access Proxy6Api Gateway6Ssl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGateway6SslCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGateway6SslCipherSuites API operation for FortiManager updates the specified Access Proxy6Api Gateway6Ssl Cipher Suites.
// Returns the index value of the Access Proxy6Api Gateway6Ssl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGateway6SslCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGateway6SslCipherSuites API operation for FortiManager deletes the specified Access Proxy6Api Gateway6Ssl Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGateway6SslCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGateway6SslCipherSuites API operation for FortiManager gets the Access Proxy6Api Gateway6Ssl Cipher Suites
// with the specified index value.
// Returns the requested Access Proxy6Api Gateway6Ssl Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGateway6SslCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGatewayQuic API operation for FortiManager updates the specified Access Proxy6Api GatewayQuic.
// Returns the index value of the Access Proxy6Api GatewayQuic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGatewayQuic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGatewayQuic API operation for FortiManager deletes the specified Access Proxy6Api GatewayQuic.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGatewayQuic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - access-proxy6 api-gateway quic
	return
}

// ReadObjectFirewallAccessProxy6ApiGatewayQuic API operation for FortiManager gets the Access Proxy6Api GatewayQuic
// with the specified index value.
// Returns the requested Access Proxy6Api GatewayQuic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGatewayQuic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGatewayRealservers API operation for FortiManager creates a new Access Proxy6Api GatewayRealservers.
// Returns the index value of the Access Proxy6Api GatewayRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGatewayRealservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGatewayRealservers API operation for FortiManager updates the specified Access Proxy6Api GatewayRealservers.
// Returns the index value of the Access Proxy6Api GatewayRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGatewayRealservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGatewayRealservers API operation for FortiManager deletes the specified Access Proxy6Api GatewayRealservers.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGatewayRealservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGatewayRealservers API operation for FortiManager gets the Access Proxy6Api GatewayRealservers
// with the specified index value.
// Returns the requested Access Proxy6Api GatewayRealservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGatewayRealservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxy6ApiGatewaySslCipherSuites API operation for FortiManager creates a new Access Proxy6Api GatewaySsl Cipher Suites.
// Returns the index value of the Access Proxy6Api GatewaySsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxy6ApiGatewaySslCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxy6ApiGatewaySslCipherSuites API operation for FortiManager updates the specified Access Proxy6Api GatewaySsl Cipher Suites.
// Returns the index value of the Access Proxy6Api GatewaySsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6ApiGatewaySslCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxy6ApiGatewaySslCipherSuites API operation for FortiManager deletes the specified Access Proxy6Api GatewaySsl Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxy6ApiGatewaySslCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxy6ApiGatewaySslCipherSuites API operation for FortiManager gets the Access Proxy6Api GatewaySsl Cipher Suites
// with the specified index value.
// Returns the requested Access Proxy6Api GatewaySsl Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6ApiGatewaySslCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxy6Move API operation for FortiManager updates the specified Access Proxy6Move.
// Returns the index value of the Access Proxy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6/{access-proxy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallAccessProxy6Move API operation for FortiManager gets the Access Proxy6Move
// with the specified index value.
// Returns the requested Access Proxy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallAccessProxyApiGateway API operation for FortiManager creates a new Access ProxyApi Gateway.
// Returns the index value of the Access ProxyApi Gateway and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGateway(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGateway API operation for FortiManager updates the specified Access ProxyApi Gateway.
// Returns the index value of the Access ProxyApi Gateway and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGateway(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGateway API operation for FortiManager deletes the specified Access ProxyApi Gateway.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGateway(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGateway API operation for FortiManager gets the Access ProxyApi Gateway
// with the specified index value.
// Returns the requested Access ProxyApi Gateway value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGateway(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxyApiGateway6 API operation for FortiManager creates a new Access ProxyApi Gateway6.
// Returns the index value of the Access ProxyApi Gateway6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGateway6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGateway6 API operation for FortiManager updates the specified Access ProxyApi Gateway6.
// Returns the index value of the Access ProxyApi Gateway6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGateway6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGateway6 API operation for FortiManager deletes the specified Access ProxyApi Gateway6.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGateway6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGateway6 API operation for FortiManager gets the Access ProxyApi Gateway6
// with the specified index value.
// Returns the requested Access ProxyApi Gateway6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGateway6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxyApiGateway6Quic API operation for FortiManager updates the specified Access ProxyApi Gateway6Quic.
// Returns the index value of the Access ProxyApi Gateway6Quic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGateway6Quic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGateway6Quic API operation for FortiManager deletes the specified Access ProxyApi Gateway6Quic.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGateway6Quic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - access-proxy api-gateway6 quic
	return
}

// ReadObjectFirewallAccessProxyApiGateway6Quic API operation for FortiManager gets the Access ProxyApi Gateway6Quic
// with the specified index value.
// Returns the requested Access ProxyApi Gateway6Quic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGateway6Quic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxyApiGateway6Realservers API operation for FortiManager creates a new Access ProxyApi Gateway6Realservers.
// Returns the index value of the Access ProxyApi Gateway6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGateway6Realservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGateway6Realservers API operation for FortiManager updates the specified Access ProxyApi Gateway6Realservers.
// Returns the index value of the Access ProxyApi Gateway6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGateway6Realservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGateway6Realservers API operation for FortiManager deletes the specified Access ProxyApi Gateway6Realservers.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGateway6Realservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGateway6Realservers API operation for FortiManager gets the Access ProxyApi Gateway6Realservers
// with the specified index value.
// Returns the requested Access ProxyApi Gateway6Realservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGateway6Realservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxyApiGateway6SslCipherSuites API operation for FortiManager creates a new Access ProxyApi Gateway6Ssl Cipher Suites.
// Returns the index value of the Access ProxyApi Gateway6Ssl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGateway6SslCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGateway6SslCipherSuites API operation for FortiManager updates the specified Access ProxyApi Gateway6Ssl Cipher Suites.
// Returns the index value of the Access ProxyApi Gateway6Ssl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGateway6SslCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGateway6SslCipherSuites API operation for FortiManager deletes the specified Access ProxyApi Gateway6Ssl Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGateway6SslCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGateway6SslCipherSuites API operation for FortiManager gets the Access ProxyApi Gateway6Ssl Cipher Suites
// with the specified index value.
// Returns the requested Access ProxyApi Gateway6Ssl Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway6 ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGateway6SslCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway6/{api-gateway6}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxyApiGatewayQuic API operation for FortiManager updates the specified Access ProxyApi GatewayQuic.
// Returns the index value of the Access ProxyApi GatewayQuic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGatewayQuic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGatewayQuic API operation for FortiManager deletes the specified Access ProxyApi GatewayQuic.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGatewayQuic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - access-proxy api-gateway quic
	return
}

// ReadObjectFirewallAccessProxyApiGatewayQuic API operation for FortiManager gets the Access ProxyApi GatewayQuic
// with the specified index value.
// Returns the requested Access ProxyApi GatewayQuic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGatewayQuic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxyApiGatewayRealservers API operation for FortiManager creates a new Access ProxyApi GatewayRealservers.
// Returns the index value of the Access ProxyApi GatewayRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGatewayRealservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGatewayRealservers API operation for FortiManager updates the specified Access ProxyApi GatewayRealservers.
// Returns the index value of the Access ProxyApi GatewayRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGatewayRealservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGatewayRealservers API operation for FortiManager deletes the specified Access ProxyApi GatewayRealservers.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGatewayRealservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGatewayRealservers API operation for FortiManager gets the Access ProxyApi GatewayRealservers
// with the specified index value.
// Returns the requested Access ProxyApi GatewayRealservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGatewayRealservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAccessProxyApiGatewaySslCipherSuites API operation for FortiManager creates a new Access ProxyApi GatewaySsl Cipher Suites.
// Returns the index value of the Access ProxyApi GatewaySsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyApiGatewaySslCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyApiGatewaySslCipherSuites API operation for FortiManager updates the specified Access ProxyApi GatewaySsl Cipher Suites.
// Returns the index value of the Access ProxyApi GatewaySsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyApiGatewaySslCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyApiGatewaySslCipherSuites API operation for FortiManager deletes the specified Access ProxyApi GatewaySsl Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyApiGatewaySslCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyApiGatewaySslCipherSuites API operation for FortiManager gets the Access ProxyApi GatewaySsl Cipher Suites
// with the specified index value.
// Returns the requested Access ProxyApi GatewaySsl Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy api-gateway ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyApiGatewaySslCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/api-gateway/{api-gateway}/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxyMove API operation for FortiManager updates the specified Access ProxyMove.
// Returns the index value of the Access ProxyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallAccessProxyMove API operation for FortiManager gets the Access ProxyMove
// with the specified index value.
// Returns the requested Access ProxyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallAccessProxyRealservers API operation for FortiManager creates a new Access ProxyRealservers.
// Returns the index value of the Access ProxyRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAccessProxyRealservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAccessProxyRealservers API operation for FortiManager updates the specified Access ProxyRealservers.
// Returns the index value of the Access ProxyRealservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyRealservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyRealservers API operation for FortiManager deletes the specified Access ProxyRealservers.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyRealservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAccessProxyRealservers API operation for FortiManager gets the Access ProxyRealservers
// with the specified index value.
// Returns the requested Access ProxyRealservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyRealservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallAccessProxyServerPubkeyAuthSettings API operation for FortiManager updates the specified Access ProxyServer Pubkey Auth Settings.
// Returns the index value of the Access ProxyServer Pubkey Auth Settings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy server-pubkey-auth-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAccessProxyServerPubkeyAuthSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/server-pubkey-auth-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAccessProxyServerPubkeyAuthSettings API operation for FortiManager deletes the specified Access ProxyServer Pubkey Auth Settings.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy server-pubkey-auth-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAccessProxyServerPubkeyAuthSettings(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - access-proxy server-pubkey-auth-settings
	return
}

// ReadObjectFirewallAccessProxyServerPubkeyAuthSettings API operation for FortiManager gets the Access ProxyServer Pubkey Auth Settings
// with the specified index value.
// Returns the requested Access ProxyServer Pubkey Auth Settings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - access-proxy server-pubkey-auth-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAccessProxyServerPubkeyAuthSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/access-proxy/{access-proxy}/server-pubkey-auth-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress API operation for FortiManager creates a new Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress API operation for FortiManager updates the specified Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress API operation for FortiManager deletes the specified Address.
// Returns error for service API and SDK errors.
// See the object firewall - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress API operation for FortiManager gets the Address
// with the specified index value.
// Returns the requested Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6 API operation for FortiManager creates a new Address6.
// Returns the index value of the Address6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6 API operation for FortiManager updates the specified Address6.
// Returns the index value of the Address6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6 API operation for FortiManager deletes the specified Address6.
// Returns error for service API and SDK errors.
// See the object firewall - address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6 API operation for FortiManager gets the Address6
// with the specified index value.
// Returns the requested Address6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6Template API operation for FortiManager creates a new Address6 Template.
// Returns the index value of the Address6 Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6Template(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6Template API operation for FortiManager updates the specified Address6 Template.
// Returns the index value of the Address6 Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6Template(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6Template API operation for FortiManager deletes the specified Address6 Template.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6Template(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6Template API operation for FortiManager gets the Address6 Template
// with the specified index value.
// Returns the requested Address6 Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6Template(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6TemplateSubnetSegment API operation for FortiManager creates a new Address6 TemplateSubnet Segment.
// Returns the index value of the Address6 TemplateSubnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6TemplateSubnetSegment(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6TemplateSubnetSegment API operation for FortiManager updates the specified Address6 TemplateSubnet Segment.
// Returns the index value of the Address6 TemplateSubnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6TemplateSubnetSegment(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6TemplateSubnetSegment API operation for FortiManager deletes the specified Address6 TemplateSubnet Segment.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6TemplateSubnetSegment(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6TemplateSubnetSegment API operation for FortiManager gets the Address6 TemplateSubnet Segment
// with the specified index value.
// Returns the requested Address6 TemplateSubnet Segment value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6TemplateSubnetSegment(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6TemplateSubnetSegmentValues API operation for FortiManager creates a new Address6 TemplateSubnet SegmentValues.
// Returns the index value of the Address6 TemplateSubnet SegmentValues and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment values chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6TemplateSubnetSegmentValues(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment/{subnet-segment}/values"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6TemplateSubnetSegmentValues API operation for FortiManager updates the specified Address6 TemplateSubnet SegmentValues.
// Returns the index value of the Address6 TemplateSubnet SegmentValues and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment values chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6TemplateSubnetSegmentValues(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment/{subnet-segment}/values"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6TemplateSubnetSegmentValues API operation for FortiManager deletes the specified Address6 TemplateSubnet SegmentValues.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment values chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6TemplateSubnetSegmentValues(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment/{subnet-segment}/values"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6TemplateSubnetSegmentValues API operation for FortiManager gets the Address6 TemplateSubnet SegmentValues
// with the specified index value.
// Returns the requested Address6 TemplateSubnet SegmentValues value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6-template subnet-segment values chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6TemplateSubnetSegmentValues(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6-template/{address6-template}/subnet-segment/{subnet-segment}/values"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6DynamicMapping API operation for FortiManager creates a new Address6DynamicMapping.
// Returns the index value of the Address6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6DynamicMapping API operation for FortiManager updates the specified Address6DynamicMapping.
// Returns the index value of the Address6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6DynamicMapping API operation for FortiManager deletes the specified Address6DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6DynamicMapping API operation for FortiManager gets the Address6DynamicMapping
// with the specified index value.
// Returns the requested Address6DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6DynamicMappingSubnetSegment API operation for FortiManager creates a new Address6DynamicMappingSubnet Segment.
// Returns the index value of the Address6DynamicMappingSubnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6DynamicMappingSubnetSegment(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6DynamicMappingSubnetSegment API operation for FortiManager updates the specified Address6DynamicMappingSubnet Segment.
// Returns the index value of the Address6DynamicMappingSubnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6DynamicMappingSubnetSegment(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6DynamicMappingSubnetSegment API operation for FortiManager deletes the specified Address6DynamicMappingSubnet Segment.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6DynamicMappingSubnetSegment(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6DynamicMappingSubnetSegment API operation for FortiManager gets the Address6DynamicMappingSubnet Segment
// with the specified index value.
// Returns the requested Address6DynamicMappingSubnet Segment value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 dynamic mapping subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6DynamicMappingSubnetSegment(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6List API operation for FortiManager creates a new Address6List.
// Returns the index value of the Address6List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6List(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6List API operation for FortiManager updates the specified Address6List.
// Returns the index value of the Address6List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6List(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6List API operation for FortiManager deletes the specified Address6List.
// Returns error for service API and SDK errors.
// See the object firewall - address6 list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6List(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6List API operation for FortiManager gets the Address6List
// with the specified index value.
// Returns the requested Address6List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6List(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6SubnetSegment API operation for FortiManager creates a new Address6Subnet Segment.
// Returns the index value of the Address6Subnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6SubnetSegment(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6SubnetSegment API operation for FortiManager updates the specified Address6Subnet Segment.
// Returns the index value of the Address6Subnet Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6SubnetSegment(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6SubnetSegment API operation for FortiManager deletes the specified Address6Subnet Segment.
// Returns error for service API and SDK errors.
// See the object firewall - address6 subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6SubnetSegment(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6SubnetSegment API operation for FortiManager gets the Address6Subnet Segment
// with the specified index value.
// Returns the requested Address6Subnet Segment value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 subnet-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6SubnetSegment(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/subnet-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddress6Tagging API operation for FortiManager creates a new Address6Tagging.
// Returns the index value of the Address6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddress6Tagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddress6Tagging API operation for FortiManager updates the specified Address6Tagging.
// Returns the index value of the Address6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddress6Tagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddress6Tagging API operation for FortiManager deletes the specified Address6Tagging.
// Returns error for service API and SDK errors.
// See the object firewall - address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddress6Tagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddress6Tagging API operation for FortiManager gets the Address6Tagging
// with the specified index value.
// Returns the requested Address6Tagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddress6Tagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address6/{address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddressDynamicMapping API operation for FortiManager creates a new AddressDynamicMapping.
// Returns the index value of the AddressDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddressDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddressDynamicMapping API operation for FortiManager updates the specified AddressDynamicMapping.
// Returns the index value of the AddressDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddressDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddressDynamicMapping API operation for FortiManager deletes the specified AddressDynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - address dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddressDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddressDynamicMapping API operation for FortiManager gets the AddressDynamicMapping
// with the specified index value.
// Returns the requested AddressDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddressDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddressList API operation for FortiManager creates a new AddressList.
// Returns the index value of the AddressList and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddressList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddressList API operation for FortiManager updates the specified AddressList.
// Returns the index value of the AddressList and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddressList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddressList API operation for FortiManager deletes the specified AddressList.
// Returns error for service API and SDK errors.
// See the object firewall - address list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddressList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddressList API operation for FortiManager gets the AddressList
// with the specified index value.
// Returns the requested AddressList value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddressList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddressTagging API operation for FortiManager creates a new AddressTagging.
// Returns the index value of the AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddressTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddressTagging API operation for FortiManager updates the specified AddressTagging.
// Returns the index value of the AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddressTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddressTagging API operation for FortiManager deletes the specified AddressTagging.
// Returns error for service API and SDK errors.
// See the object firewall - address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddressTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddressTagging API operation for FortiManager gets the AddressTagging
// with the specified index value.
// Returns the requested AddressTagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddressTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/address/{address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrp API operation for FortiManager creates a new Addrgrp.
// Returns the index value of the Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrp API operation for FortiManager updates the specified Addrgrp.
// Returns the index value of the Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrp API operation for FortiManager deletes the specified Addrgrp.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrp API operation for FortiManager gets the Addrgrp
// with the specified index value.
// Returns the requested Addrgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrp6 API operation for FortiManager creates a new Addrgrp6.
// Returns the index value of the Addrgrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrp6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrp6 API operation for FortiManager updates the specified Addrgrp6.
// Returns the index value of the Addrgrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrp6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrp6 API operation for FortiManager deletes the specified Addrgrp6.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrp6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrp6 API operation for FortiManager gets the Addrgrp6
// with the specified index value.
// Returns the requested Addrgrp6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrp6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrp6DynamicMapping API operation for FortiManager creates a new Addrgrp6DynamicMapping.
// Returns the index value of the Addrgrp6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrp6DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrp6DynamicMapping API operation for FortiManager updates the specified Addrgrp6DynamicMapping.
// Returns the index value of the Addrgrp6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrp6DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrp6DynamicMapping API operation for FortiManager deletes the specified Addrgrp6DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrp6DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrp6DynamicMapping API operation for FortiManager gets the Addrgrp6DynamicMapping
// with the specified index value.
// Returns the requested Addrgrp6DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrp6DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrp6Tagging API operation for FortiManager creates a new Addrgrp6Tagging.
// Returns the index value of the Addrgrp6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrp6Tagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrp6Tagging API operation for FortiManager updates the specified Addrgrp6Tagging.
// Returns the index value of the Addrgrp6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrp6Tagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrp6Tagging API operation for FortiManager deletes the specified Addrgrp6Tagging.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrp6Tagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrp6Tagging API operation for FortiManager gets the Addrgrp6Tagging
// with the specified index value.
// Returns the requested Addrgrp6Tagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrp6Tagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp6/{addrgrp6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrpDynamicMapping API operation for FortiManager creates a new AddrgrpDynamicMapping.
// Returns the index value of the AddrgrpDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrpDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrpDynamicMapping API operation for FortiManager updates the specified AddrgrpDynamicMapping.
// Returns the index value of the AddrgrpDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrpDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrpDynamicMapping API operation for FortiManager deletes the specified AddrgrpDynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrpDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrpDynamicMapping API operation for FortiManager gets the AddrgrpDynamicMapping
// with the specified index value.
// Returns the requested AddrgrpDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrpDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallAddrgrpTagging API operation for FortiManager creates a new AddrgrpTagging.
// Returns the index value of the AddrgrpTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallAddrgrpTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallAddrgrpTagging API operation for FortiManager updates the specified AddrgrpTagging.
// Returns the index value of the AddrgrpTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallAddrgrpTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallAddrgrpTagging API operation for FortiManager deletes the specified AddrgrpTagging.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallAddrgrpTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallAddrgrpTagging API operation for FortiManager gets the AddrgrpTagging
// with the specified index value.
// Returns the requested AddrgrpTagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallAddrgrpTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/addrgrp/{addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallCarrierEndpointBwl API operation for FortiManager creates a new Carrier Endpoint Bwl.
// Returns the index value of the Carrier Endpoint Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - carrier-endpoint-bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCarrierEndpointBwl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/carrier-endpoint-bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCarrierEndpointBwl API operation for FortiManager updates the specified Carrier Endpoint Bwl.
// Returns the index value of the Carrier Endpoint Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - carrier-endpoint-bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCarrierEndpointBwl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/carrier-endpoint-bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCarrierEndpointBwl API operation for FortiManager deletes the specified Carrier Endpoint Bwl.
// Returns error for service API and SDK errors.
// See the object firewall - carrier-endpoint-bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCarrierEndpointBwl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/carrier-endpoint-bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCarrierEndpointBwl API operation for FortiManager gets the Carrier Endpoint Bwl
// with the specified index value.
// Returns the requested Carrier Endpoint Bwl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - carrier-endpoint-bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCarrierEndpointBwl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/carrier-endpoint-bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallCasbProfile API operation for FortiManager creates a new Casb Profile.
// Returns the index value of the Casb Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCasbProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCasbProfile API operation for FortiManager updates the specified Casb Profile.
// Returns the index value of the Casb Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCasbProfile API operation for FortiManager deletes the specified Casb Profile.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCasbProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCasbProfile API operation for FortiManager gets the Casb Profile
// with the specified index value.
// Returns the requested Casb Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallCasbProfileMove API operation for FortiManager updates the specified Casb ProfileMove.
// Returns the index value of the Casb ProfileMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfileMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallCasbProfileMove API operation for FortiManager gets the Casb ProfileMove
// with the specified index value.
// Returns the requested Casb ProfileMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfileMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallCasbProfileSaasApplication API operation for FortiManager creates a new Casb ProfileSaas Application.
// Returns the index value of the Casb ProfileSaas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCasbProfileSaasApplication(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCasbProfileSaasApplication API operation for FortiManager updates the specified Casb ProfileSaas Application.
// Returns the index value of the Casb ProfileSaas Application and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfileSaasApplication(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCasbProfileSaasApplication API operation for FortiManager deletes the specified Casb ProfileSaas Application.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCasbProfileSaasApplication(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCasbProfileSaasApplication API operation for FortiManager gets the Casb ProfileSaas Application
// with the specified index value.
// Returns the requested Casb ProfileSaas Application value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfileSaasApplication(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallCasbProfileSaasApplicationAccessRule API operation for FortiManager creates a new Casb ProfileSaas ApplicationAccess Rule.
// Returns the index value of the Casb ProfileSaas ApplicationAccess Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCasbProfileSaasApplicationAccessRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCasbProfileSaasApplicationAccessRule API operation for FortiManager updates the specified Casb ProfileSaas ApplicationAccess Rule.
// Returns the index value of the Casb ProfileSaas ApplicationAccess Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfileSaasApplicationAccessRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCasbProfileSaasApplicationAccessRule API operation for FortiManager deletes the specified Casb ProfileSaas ApplicationAccess Rule.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCasbProfileSaasApplicationAccessRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCasbProfileSaasApplicationAccessRule API operation for FortiManager gets the Casb ProfileSaas ApplicationAccess Rule
// with the specified index value.
// Returns the requested Casb ProfileSaas ApplicationAccess Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application access-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfileSaasApplicationAccessRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/access-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallCasbProfileSaasApplicationCustomControl API operation for FortiManager creates a new Casb ProfileSaas ApplicationCustom Control.
// Returns the index value of the Casb ProfileSaas ApplicationCustom Control and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCasbProfileSaasApplicationCustomControl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCasbProfileSaasApplicationCustomControl API operation for FortiManager updates the specified Casb ProfileSaas ApplicationCustom Control.
// Returns the index value of the Casb ProfileSaas ApplicationCustom Control and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfileSaasApplicationCustomControl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCasbProfileSaasApplicationCustomControl API operation for FortiManager deletes the specified Casb ProfileSaas ApplicationCustom Control.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCasbProfileSaasApplicationCustomControl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCasbProfileSaasApplicationCustomControl API operation for FortiManager gets the Casb ProfileSaas ApplicationCustom Control
// with the specified index value.
// Returns the requested Casb ProfileSaas ApplicationCustom Control value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfileSaasApplicationCustomControl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallCasbProfileSaasApplicationCustomControlOption API operation for FortiManager creates a new Casb ProfileSaas ApplicationCustom ControlOption.
// Returns the index value of the Casb ProfileSaas ApplicationCustom ControlOption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallCasbProfileSaasApplicationCustomControlOption(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallCasbProfileSaasApplicationCustomControlOption API operation for FortiManager updates the specified Casb ProfileSaas ApplicationCustom ControlOption.
// Returns the index value of the Casb ProfileSaas ApplicationCustom ControlOption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallCasbProfileSaasApplicationCustomControlOption(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallCasbProfileSaasApplicationCustomControlOption API operation for FortiManager deletes the specified Casb ProfileSaas ApplicationCustom ControlOption.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallCasbProfileSaasApplicationCustomControlOption(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallCasbProfileSaasApplicationCustomControlOption API operation for FortiManager gets the Casb ProfileSaas ApplicationCustom ControlOption
// with the specified index value.
// Returns the requested Casb ProfileSaas ApplicationCustom ControlOption value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - casb-profile saas-application custom-control option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallCasbProfileSaasApplicationCustomControlOption(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/casb-profile/{casb-profile}/saas-application/{saas-application}/custom-control/{custom-control}/option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallDecryptedTrafficMirror API operation for FortiManager creates a new Decrypted Traffic Mirror.
// Returns the index value of the Decrypted Traffic Mirror and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - decrypted-traffic-mirror chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallDecryptedTrafficMirror(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/decrypted-traffic-mirror"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallDecryptedTrafficMirror API operation for FortiManager updates the specified Decrypted Traffic Mirror.
// Returns the index value of the Decrypted Traffic Mirror and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - decrypted-traffic-mirror chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallDecryptedTrafficMirror(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/decrypted-traffic-mirror"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallDecryptedTrafficMirror API operation for FortiManager deletes the specified Decrypted Traffic Mirror.
// Returns error for service API and SDK errors.
// See the object firewall - decrypted-traffic-mirror chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallDecryptedTrafficMirror(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/decrypted-traffic-mirror"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallDecryptedTrafficMirror API operation for FortiManager gets the Decrypted Traffic Mirror
// with the specified index value.
// Returns the requested Decrypted Traffic Mirror value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - decrypted-traffic-mirror chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallDecryptedTrafficMirror(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/decrypted-traffic-mirror"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtp API operation for FortiManager creates a new Gtp.
// Returns the index value of the Gtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtp API operation for FortiManager updates the specified Gtp.
// Returns the index value of the Gtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtp API operation for FortiManager deletes the specified Gtp.
// Returns error for service API and SDK errors.
// See the object firewall - gtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtp API operation for FortiManager gets the Gtp
// with the specified index value.
// Returns the requested Gtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpApn API operation for FortiManager creates a new GtpApn.
// Returns the index value of the GtpApn and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp apn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpApn(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/apn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpApn API operation for FortiManager updates the specified GtpApn.
// Returns the index value of the GtpApn and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp apn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpApn(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/apn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpApn API operation for FortiManager deletes the specified GtpApn.
// Returns error for service API and SDK errors.
// See the object firewall - gtp apn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpApn(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/apn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpApn API operation for FortiManager gets the GtpApn
// with the specified index value.
// Returns the requested GtpApn value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp apn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpApn(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/apn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpIeRemovePolicy API operation for FortiManager creates a new GtpIe Remove Policy.
// Returns the index value of the GtpIe Remove Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-remove-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpIeRemovePolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-remove-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpIeRemovePolicy API operation for FortiManager updates the specified GtpIe Remove Policy.
// Returns the index value of the GtpIe Remove Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-remove-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpIeRemovePolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-remove-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpIeRemovePolicy API operation for FortiManager deletes the specified GtpIe Remove Policy.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-remove-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpIeRemovePolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-remove-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpIeRemovePolicy API operation for FortiManager gets the GtpIe Remove Policy
// with the specified index value.
// Returns the requested GtpIe Remove Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-remove-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpIeRemovePolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-remove-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallGtpIeValidation API operation for FortiManager updates the specified GtpIe Validation.
// Returns the index value of the GtpIe Validation and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-validation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpIeValidation(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-validation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpIeValidation API operation for FortiManager deletes the specified GtpIe Validation.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-validation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpIeValidation(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - gtp ie-validation
	return
}

// ReadObjectFirewallGtpIeValidation API operation for FortiManager gets the GtpIe Validation
// with the specified index value.
// Returns the requested GtpIe Validation value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ie-validation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpIeValidation(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ie-validation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpImsi API operation for FortiManager creates a new GtpImsi.
// Returns the index value of the GtpImsi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp imsi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpImsi(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/imsi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpImsi API operation for FortiManager updates the specified GtpImsi.
// Returns the index value of the GtpImsi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp imsi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpImsi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/imsi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpImsi API operation for FortiManager deletes the specified GtpImsi.
// Returns error for service API and SDK errors.
// See the object firewall - gtp imsi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpImsi(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/imsi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpImsi API operation for FortiManager gets the GtpImsi
// with the specified index value.
// Returns the requested GtpImsi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp imsi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpImsi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/imsi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpIpPolicy API operation for FortiManager creates a new GtpIp Policy.
// Returns the index value of the GtpIp Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpIpPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpIpPolicy API operation for FortiManager updates the specified GtpIp Policy.
// Returns the index value of the GtpIp Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpIpPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpIpPolicy API operation for FortiManager deletes the specified GtpIp Policy.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpIpPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpIpPolicy API operation for FortiManager gets the GtpIp Policy
// with the specified index value.
// Returns the requested GtpIp Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp ip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpIpPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/ip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallGtpMessageRateLimit API operation for FortiManager updates the specified GtpMessage Rate Limit.
// Returns the index value of the GtpMessage Rate Limit and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpMessageRateLimit(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpMessageRateLimit API operation for FortiManager deletes the specified GtpMessage Rate Limit.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpMessageRateLimit(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - gtp message-rate-limit
	return
}

// ReadObjectFirewallGtpMessageRateLimit API operation for FortiManager gets the GtpMessage Rate Limit
// with the specified index value.
// Returns the requested GtpMessage Rate Limit value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpMessageRateLimit(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallGtpMessageRateLimitV0 API operation for FortiManager updates the specified GtpMessage Rate Limit V0.
// Returns the index value of the GtpMessage Rate Limit V0 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v0 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpMessageRateLimitV0(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v0"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpMessageRateLimitV0 API operation for FortiManager deletes the specified GtpMessage Rate Limit V0.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v0 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpMessageRateLimitV0(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - gtp message-rate-limit-v0
	return
}

// ReadObjectFirewallGtpMessageRateLimitV0 API operation for FortiManager gets the GtpMessage Rate Limit V0
// with the specified index value.
// Returns the requested GtpMessage Rate Limit V0 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v0 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpMessageRateLimitV0(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v0"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallGtpMessageRateLimitV1 API operation for FortiManager updates the specified GtpMessage Rate Limit V1.
// Returns the index value of the GtpMessage Rate Limit V1 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpMessageRateLimitV1(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpMessageRateLimitV1 API operation for FortiManager deletes the specified GtpMessage Rate Limit V1.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpMessageRateLimitV1(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - gtp message-rate-limit-v1
	return
}

// ReadObjectFirewallGtpMessageRateLimitV1 API operation for FortiManager gets the GtpMessage Rate Limit V1
// with the specified index value.
// Returns the requested GtpMessage Rate Limit V1 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpMessageRateLimitV1(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallGtpMessageRateLimitV2 API operation for FortiManager updates the specified GtpMessage Rate Limit V2.
// Returns the index value of the GtpMessage Rate Limit V2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpMessageRateLimitV2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpMessageRateLimitV2 API operation for FortiManager deletes the specified GtpMessage Rate Limit V2.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpMessageRateLimitV2(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - gtp message-rate-limit-v2
	return
}

// ReadObjectFirewallGtpMessageRateLimitV2 API operation for FortiManager gets the GtpMessage Rate Limit V2
// with the specified index value.
// Returns the requested GtpMessage Rate Limit V2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp message-rate-limit-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpMessageRateLimitV2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/message-rate-limit-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpNoipPolicy API operation for FortiManager creates a new GtpNoip Policy.
// Returns the index value of the GtpNoip Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp noip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpNoipPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/noip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpNoipPolicy API operation for FortiManager updates the specified GtpNoip Policy.
// Returns the index value of the GtpNoip Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp noip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpNoipPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/noip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpNoipPolicy API operation for FortiManager deletes the specified GtpNoip Policy.
// Returns error for service API and SDK errors.
// See the object firewall - gtp noip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpNoipPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/noip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpNoipPolicy API operation for FortiManager gets the GtpNoip Policy
// with the specified index value.
// Returns the requested GtpNoip Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp noip-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpNoipPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/noip-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpPerApnShaper API operation for FortiManager creates a new GtpPer Apn Shaper.
// Returns the index value of the GtpPer Apn Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp per-apn-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpPerApnShaper(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/per-apn-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpPerApnShaper API operation for FortiManager updates the specified GtpPer Apn Shaper.
// Returns the index value of the GtpPer Apn Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp per-apn-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpPerApnShaper(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/per-apn-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpPerApnShaper API operation for FortiManager deletes the specified GtpPer Apn Shaper.
// Returns error for service API and SDK errors.
// See the object firewall - gtp per-apn-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpPerApnShaper(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/per-apn-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpPerApnShaper API operation for FortiManager gets the GtpPer Apn Shaper
// with the specified index value.
// Returns the requested GtpPer Apn Shaper value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp per-apn-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpPerApnShaper(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/per-apn-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpPolicy API operation for FortiManager creates a new GtpPolicy.
// Returns the index value of the GtpPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpPolicy API operation for FortiManager updates the specified GtpPolicy.
// Returns the index value of the GtpPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpPolicy API operation for FortiManager deletes the specified GtpPolicy.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpPolicy API operation for FortiManager gets the GtpPolicy
// with the specified index value.
// Returns the requested GtpPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallGtpPolicyV2 API operation for FortiManager creates a new GtpPolicy V2.
// Returns the index value of the GtpPolicy V2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallGtpPolicyV2(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallGtpPolicyV2 API operation for FortiManager updates the specified GtpPolicy V2.
// Returns the index value of the GtpPolicy V2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallGtpPolicyV2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallGtpPolicyV2 API operation for FortiManager deletes the specified GtpPolicy V2.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallGtpPolicyV2(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallGtpPolicyV2 API operation for FortiManager gets the GtpPolicy V2
// with the specified index value.
// Returns the requested GtpPolicy V2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - gtp policy-v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallGtpPolicyV2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/gtp/{gtp}/policy-v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIdentityBasedRoute API operation for FortiManager creates a new Identity Based Route.
// Returns the index value of the Identity Based Route and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIdentityBasedRoute(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIdentityBasedRoute API operation for FortiManager updates the specified Identity Based Route.
// Returns the index value of the Identity Based Route and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIdentityBasedRoute(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIdentityBasedRoute API operation for FortiManager deletes the specified Identity Based Route.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIdentityBasedRoute(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIdentityBasedRoute API operation for FortiManager gets the Identity Based Route
// with the specified index value.
// Returns the requested Identity Based Route value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIdentityBasedRoute(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIdentityBasedRouteRule API operation for FortiManager creates a new Identity Based RouteRule.
// Returns the index value of the Identity Based RouteRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIdentityBasedRouteRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route/{identity-based-route}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIdentityBasedRouteRule API operation for FortiManager updates the specified Identity Based RouteRule.
// Returns the index value of the Identity Based RouteRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIdentityBasedRouteRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route/{identity-based-route}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIdentityBasedRouteRule API operation for FortiManager deletes the specified Identity Based RouteRule.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIdentityBasedRouteRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route/{identity-based-route}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIdentityBasedRouteRule API operation for FortiManager gets the Identity Based RouteRule
// with the specified index value.
// Returns the requested Identity Based RouteRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - identity-based-route rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIdentityBasedRouteRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/identity-based-route/{identity-based-route}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallInternetService API operation for FortiManager updates the specified Internet Service.
// Returns the index value of the Internet Service and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetService API operation for FortiManager deletes the specified Internet Service.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetService(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - internet-service
	return
}

// ReadObjectFirewallInternetService API operation for FortiManager gets the Internet Service
// with the specified index value.
// Returns the requested Internet Service value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceAddition API operation for FortiManager creates a new Internet Service Addition.
// Returns the index value of the Internet Service Addition and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceAddition(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceAddition API operation for FortiManager updates the specified Internet Service Addition.
// Returns the index value of the Internet Service Addition and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceAddition(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceAddition API operation for FortiManager deletes the specified Internet Service Addition.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceAddition(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceAddition API operation for FortiManager gets the Internet Service Addition
// with the specified index value.
// Returns the requested Internet Service Addition value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceAddition(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceAdditionEntry API operation for FortiManager creates a new Internet Service AdditionEntry.
// Returns the index value of the Internet Service AdditionEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceAdditionEntry(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceAdditionEntry API operation for FortiManager updates the specified Internet Service AdditionEntry.
// Returns the index value of the Internet Service AdditionEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceAdditionEntry(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceAdditionEntry API operation for FortiManager deletes the specified Internet Service AdditionEntry.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceAdditionEntry(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceAdditionEntry API operation for FortiManager gets the Internet Service AdditionEntry
// with the specified index value.
// Returns the requested Internet Service AdditionEntry value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceAdditionEntry(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceAdditionEntryPortRange API operation for FortiManager creates a new Internet Service AdditionEntryPort Range.
// Returns the index value of the Internet Service AdditionEntryPort Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceAdditionEntryPortRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceAdditionEntryPortRange API operation for FortiManager updates the specified Internet Service AdditionEntryPort Range.
// Returns the index value of the Internet Service AdditionEntryPort Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceAdditionEntryPortRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceAdditionEntryPortRange API operation for FortiManager deletes the specified Internet Service AdditionEntryPort Range.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceAdditionEntryPortRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceAdditionEntryPortRange API operation for FortiManager gets the Internet Service AdditionEntryPort Range
// with the specified index value.
// Returns the requested Internet Service AdditionEntryPort Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-addition entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceAdditionEntryPortRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-addition/{internet-service-addition}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceCustom API operation for FortiManager creates a new Internet Service Custom.
// Returns the index value of the Internet Service Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceCustom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceCustom API operation for FortiManager updates the specified Internet Service Custom.
// Returns the index value of the Internet Service Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceCustom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceCustom API operation for FortiManager deletes the specified Internet Service Custom.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceCustom(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceCustom API operation for FortiManager gets the Internet Service Custom
// with the specified index value.
// Returns the requested Internet Service Custom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceCustom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceCustomGroup API operation for FortiManager creates a new Internet Service Custom Group.
// Returns the index value of the Internet Service Custom Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceCustomGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceCustomGroup API operation for FortiManager updates the specified Internet Service Custom Group.
// Returns the index value of the Internet Service Custom Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceCustomGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceCustomGroup API operation for FortiManager deletes the specified Internet Service Custom Group.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceCustomGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceCustomGroup API operation for FortiManager gets the Internet Service Custom Group
// with the specified index value.
// Returns the requested Internet Service Custom Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceCustomGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceCustomEntry API operation for FortiManager creates a new Internet Service CustomEntry.
// Returns the index value of the Internet Service CustomEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceCustomEntry(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceCustomEntry API operation for FortiManager updates the specified Internet Service CustomEntry.
// Returns the index value of the Internet Service CustomEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceCustomEntry(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceCustomEntry API operation for FortiManager deletes the specified Internet Service CustomEntry.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceCustomEntry(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceCustomEntry API operation for FortiManager gets the Internet Service CustomEntry
// with the specified index value.
// Returns the requested Internet Service CustomEntry value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceCustomEntry(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceCustomEntryPortRange API operation for FortiManager creates a new Internet Service CustomEntryPort Range.
// Returns the index value of the Internet Service CustomEntryPort Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceCustomEntryPortRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceCustomEntryPortRange API operation for FortiManager updates the specified Internet Service CustomEntryPort Range.
// Returns the index value of the Internet Service CustomEntryPort Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceCustomEntryPortRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceCustomEntryPortRange API operation for FortiManager deletes the specified Internet Service CustomEntryPort Range.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceCustomEntryPortRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceCustomEntryPortRange API operation for FortiManager gets the Internet Service CustomEntryPort Range
// with the specified index value.
// Returns the requested Internet Service CustomEntryPort Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-custom entry port-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceCustomEntryPortRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-custom/{internet-service-custom}/entry/{entry}/port-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceGroup API operation for FortiManager creates a new Internet Service Group.
// Returns the index value of the Internet Service Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceGroup API operation for FortiManager updates the specified Internet Service Group.
// Returns the index value of the Internet Service Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceGroup API operation for FortiManager deletes the specified Internet Service Group.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceGroup API operation for FortiManager gets the Internet Service Group
// with the specified index value.
// Returns the requested Internet Service Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceName API operation for FortiManager creates a new Internet Service Name.
// Returns the index value of the Internet Service Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceName API operation for FortiManager updates the specified Internet Service Name.
// Returns the index value of the Internet Service Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceName API operation for FortiManager deletes the specified Internet Service Name.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceName API operation for FortiManager gets the Internet Service Name
// with the specified index value.
// Returns the requested Internet Service Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallInternetServiceEntry API operation for FortiManager creates a new Internet ServiceEntry.
// Returns the index value of the Internet ServiceEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallInternetServiceEntry(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallInternetServiceEntry API operation for FortiManager updates the specified Internet ServiceEntry.
// Returns the index value of the Internet ServiceEntry and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallInternetServiceEntry(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallInternetServiceEntry API operation for FortiManager deletes the specified Internet ServiceEntry.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallInternetServiceEntry(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallInternetServiceEntry API operation for FortiManager gets the Internet ServiceEntry
// with the specified index value.
// Returns the requested Internet ServiceEntry value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - internet-service entry chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallInternetServiceEntry(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/internet-service/entry"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIppool API operation for FortiManager creates a new Ippool.
// Returns the index value of the Ippool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIppool(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIppool API operation for FortiManager updates the specified Ippool.
// Returns the index value of the Ippool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIppool(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIppool API operation for FortiManager deletes the specified Ippool.
// Returns error for service API and SDK errors.
// See the object firewall - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIppool(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIppool API operation for FortiManager gets the Ippool
// with the specified index value.
// Returns the requested Ippool value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIppool(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIppool6 API operation for FortiManager creates a new Ippool6.
// Returns the index value of the Ippool6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIppool6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIppool6 API operation for FortiManager updates the specified Ippool6.
// Returns the index value of the Ippool6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIppool6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIppool6 API operation for FortiManager deletes the specified Ippool6.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIppool6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIppool6 API operation for FortiManager gets the Ippool6
// with the specified index value.
// Returns the requested Ippool6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIppool6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIppool6DynamicMapping API operation for FortiManager creates a new Ippool6DynamicMapping.
// Returns the index value of the Ippool6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIppool6DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6/{ippool6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIppool6DynamicMapping API operation for FortiManager updates the specified Ippool6DynamicMapping.
// Returns the index value of the Ippool6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIppool6DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6/{ippool6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIppool6DynamicMapping API operation for FortiManager deletes the specified Ippool6DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIppool6DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6/{ippool6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIppool6DynamicMapping API operation for FortiManager gets the Ippool6DynamicMapping
// with the specified index value.
// Returns the requested Ippool6DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIppool6DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool6/{ippool6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIppoolDynamicMapping API operation for FortiManager creates a new IppoolDynamicMapping.
// Returns the index value of the IppoolDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIppoolDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool/{ippool}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIppoolDynamicMapping API operation for FortiManager updates the specified IppoolDynamicMapping.
// Returns the index value of the IppoolDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIppoolDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool/{ippool}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIppoolDynamicMapping API operation for FortiManager deletes the specified IppoolDynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - ippool dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIppoolDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ippool/{ippool}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIppoolDynamicMapping API operation for FortiManager gets the IppoolDynamicMapping
// with the specified index value.
// Returns the requested IppoolDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIppoolDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool/{ippool}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallIppoolGrp API operation for FortiManager creates a new IppoolGrp.
// Returns the index value of the IppoolGrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool grp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallIppoolGrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool_grp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallIppoolGrp API operation for FortiManager updates the specified IppoolGrp.
// Returns the index value of the IppoolGrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool grp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallIppoolGrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool_grp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallIppoolGrp API operation for FortiManager deletes the specified IppoolGrp.
// Returns error for service API and SDK errors.
// See the object firewall - ippool grp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallIppoolGrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ippool_grp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallIppoolGrp API operation for FortiManager gets the IppoolGrp
// with the specified index value.
// Returns the requested IppoolGrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ippool grp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallIppoolGrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ippool_grp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallLdbMonitor API operation for FortiManager creates a new Ldb Monitor.
// Returns the index value of the Ldb Monitor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ldb-monitor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallLdbMonitor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ldb-monitor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallLdbMonitor API operation for FortiManager updates the specified Ldb Monitor.
// Returns the index value of the Ldb Monitor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ldb-monitor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallLdbMonitor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ldb-monitor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallLdbMonitor API operation for FortiManager deletes the specified Ldb Monitor.
// Returns error for service API and SDK errors.
// See the object firewall - ldb-monitor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallLdbMonitor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ldb-monitor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallLdbMonitor API operation for FortiManager gets the Ldb Monitor
// with the specified index value.
// Returns the requested Ldb Monitor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ldb-monitor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallLdbMonitor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ldb-monitor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallMmsProfile API operation for FortiManager creates a new Mms Profile.
// Returns the index value of the Mms Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - mms-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallMmsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/mms-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallMmsProfile API operation for FortiManager updates the specified Mms Profile.
// Returns the index value of the Mms Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - mms-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallMmsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/mms-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallMmsProfile API operation for FortiManager deletes the specified Mms Profile.
// Returns error for service API and SDK errors.
// See the object firewall - mms-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallMmsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/mms-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallMmsProfile API operation for FortiManager gets the Mms Profile
// with the specified index value.
// Returns the requested Mms Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - mms-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallMmsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/mms-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallMulticastAddress API operation for FortiManager creates a new Multicast Address.
// Returns the index value of the Multicast Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallMulticastAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallMulticastAddress API operation for FortiManager updates the specified Multicast Address.
// Returns the index value of the Multicast Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallMulticastAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallMulticastAddress API operation for FortiManager deletes the specified Multicast Address.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallMulticastAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallMulticastAddress API operation for FortiManager gets the Multicast Address
// with the specified index value.
// Returns the requested Multicast Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallMulticastAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallMulticastAddress6 API operation for FortiManager creates a new Multicast Address6.
// Returns the index value of the Multicast Address6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallMulticastAddress6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallMulticastAddress6 API operation for FortiManager updates the specified Multicast Address6.
// Returns the index value of the Multicast Address6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallMulticastAddress6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallMulticastAddress6 API operation for FortiManager deletes the specified Multicast Address6.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallMulticastAddress6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallMulticastAddress6 API operation for FortiManager gets the Multicast Address6
// with the specified index value.
// Returns the requested Multicast Address6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallMulticastAddress6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallMulticastAddress6Tagging API operation for FortiManager creates a new Multicast Address6Tagging.
// Returns the index value of the Multicast Address6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallMulticastAddress6Tagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6/{multicast-address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallMulticastAddress6Tagging API operation for FortiManager updates the specified Multicast Address6Tagging.
// Returns the index value of the Multicast Address6Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallMulticastAddress6Tagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6/{multicast-address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallMulticastAddress6Tagging API operation for FortiManager deletes the specified Multicast Address6Tagging.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallMulticastAddress6Tagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6/{multicast-address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallMulticastAddress6Tagging API operation for FortiManager gets the Multicast Address6Tagging
// with the specified index value.
// Returns the requested Multicast Address6Tagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address6 tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallMulticastAddress6Tagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address6/{multicast-address6}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallMulticastAddressTagging API operation for FortiManager creates a new Multicast AddressTagging.
// Returns the index value of the Multicast AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallMulticastAddressTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address/{multicast-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallMulticastAddressTagging API operation for FortiManager updates the specified Multicast AddressTagging.
// Returns the index value of the Multicast AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallMulticastAddressTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address/{multicast-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallMulticastAddressTagging API operation for FortiManager deletes the specified Multicast AddressTagging.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallMulticastAddressTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address/{multicast-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallMulticastAddressTagging API operation for FortiManager gets the Multicast AddressTagging
// with the specified index value.
// Returns the requested Multicast AddressTagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - multicast-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallMulticastAddressTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/multicast-address/{multicast-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallNetworkServiceDynamic API operation for FortiManager creates a new Network Service Dynamic.
// Returns the index value of the Network Service Dynamic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - network-service-dynamic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallNetworkServiceDynamic(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/network-service-dynamic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallNetworkServiceDynamic API operation for FortiManager updates the specified Network Service Dynamic.
// Returns the index value of the Network Service Dynamic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - network-service-dynamic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallNetworkServiceDynamic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/network-service-dynamic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallNetworkServiceDynamic API operation for FortiManager deletes the specified Network Service Dynamic.
// Returns error for service API and SDK errors.
// See the object firewall - network-service-dynamic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallNetworkServiceDynamic(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/network-service-dynamic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallNetworkServiceDynamic API operation for FortiManager gets the Network Service Dynamic
// with the specified index value.
// Returns the requested Network Service Dynamic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - network-service-dynamic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallNetworkServiceDynamic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/network-service-dynamic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProfileGroup API operation for FortiManager creates a new Profile Group.
// Returns the index value of the Profile Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProfileGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProfileGroup API operation for FortiManager updates the specified Profile Group.
// Returns the index value of the Profile Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileGroup API operation for FortiManager deletes the specified Profile Group.
// Returns error for service API and SDK errors.
// See the object firewall - profile-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/profile-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProfileGroup API operation for FortiManager gets the Profile Group
// with the specified index value.
// Returns the requested Profile Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProfileProtocolOptions API operation for FortiManager creates a new Profile Protocol Options.
// Returns the index value of the Profile Protocol Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProfileProtocolOptions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProfileProtocolOptions API operation for FortiManager updates the specified Profile Protocol Options.
// Returns the index value of the Profile Protocol Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptions API operation for FortiManager deletes the specified Profile Protocol Options.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProfileProtocolOptions API operation for FortiManager gets the Profile Protocol Options
// with the specified index value.
// Returns the requested Profile Protocol Options value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsCifs API operation for FortiManager updates the specified Profile Protocol OptionsCifs.
// Returns the index value of the Profile Protocol OptionsCifs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsCifs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsCifs API operation for FortiManager deletes the specified Profile Protocol OptionsCifs.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsCifs(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options cifs
	return
}

// ReadObjectFirewallProfileProtocolOptionsCifs API operation for FortiManager gets the Profile Protocol OptionsCifs
// with the specified index value.
// Returns the requested Profile Protocol OptionsCifs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsCifs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProfileProtocolOptionsCifsFileFilterEntries API operation for FortiManager creates a new Profile Protocol OptionsCifsFile FilterEntries.
// Returns the index value of the Profile Protocol OptionsCifsFile FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProfileProtocolOptionsCifsFileFilterEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsCifsFileFilterEntries API operation for FortiManager updates the specified Profile Protocol OptionsCifsFile FilterEntries.
// Returns the index value of the Profile Protocol OptionsCifsFile FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsCifsFileFilterEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsCifsFileFilterEntries API operation for FortiManager deletes the specified Profile Protocol OptionsCifsFile FilterEntries.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsCifsFileFilterEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProfileProtocolOptionsCifsFileFilterEntries API operation for FortiManager gets the Profile Protocol OptionsCifsFile FilterEntries
// with the specified index value.
// Returns the requested Profile Protocol OptionsCifsFile FilterEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsCifsFileFilterEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsCifsFileFilterEntriesMove API operation for FortiManager updates the specified Profile Protocol OptionsCifsFile FilterEntriesMove.
// Returns the index value of the Profile Protocol OptionsCifsFile FilterEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsCifsFileFilterEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallProfileProtocolOptionsCifsFileFilterEntriesMove API operation for FortiManager gets the Profile Protocol OptionsCifsFile FilterEntriesMove
// with the specified index value.
// Returns the requested Profile Protocol OptionsCifsFile FilterEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs file-filter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsCifsFileFilterEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"filter"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallProfileProtocolOptionsCifsServerKeytab API operation for FortiManager creates a new Profile Protocol OptionsCifsServer Keytab.
// Returns the index value of the Profile Protocol OptionsCifsServer Keytab and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs server-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProfileProtocolOptionsCifsServerKeytab(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/server-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsCifsServerKeytab API operation for FortiManager updates the specified Profile Protocol OptionsCifsServer Keytab.
// Returns the index value of the Profile Protocol OptionsCifsServer Keytab and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs server-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsCifsServerKeytab(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/server-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsCifsServerKeytab API operation for FortiManager deletes the specified Profile Protocol OptionsCifsServer Keytab.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs server-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsCifsServerKeytab(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/server-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProfileProtocolOptionsCifsServerKeytab API operation for FortiManager gets the Profile Protocol OptionsCifsServer Keytab
// with the specified index value.
// Returns the requested Profile Protocol OptionsCifsServer Keytab value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options cifs server-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsCifsServerKeytab(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/cifs/server-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsDns API operation for FortiManager updates the specified Profile Protocol OptionsDns.
// Returns the index value of the Profile Protocol OptionsDns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsDns(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsDns API operation for FortiManager deletes the specified Profile Protocol OptionsDns.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsDns(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options dns
	return
}

// ReadObjectFirewallProfileProtocolOptionsDns API operation for FortiManager gets the Profile Protocol OptionsDns
// with the specified index value.
// Returns the requested Profile Protocol OptionsDns value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsDns(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsFtp API operation for FortiManager updates the specified Profile Protocol OptionsFtp.
// Returns the index value of the Profile Protocol OptionsFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsFtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsFtp API operation for FortiManager deletes the specified Profile Protocol OptionsFtp.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsFtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options ftp
	return
}

// ReadObjectFirewallProfileProtocolOptionsFtp API operation for FortiManager gets the Profile Protocol OptionsFtp
// with the specified index value.
// Returns the requested Profile Protocol OptionsFtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsFtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsHttp API operation for FortiManager updates the specified Profile Protocol OptionsHttp.
// Returns the index value of the Profile Protocol OptionsHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsHttp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsHttp API operation for FortiManager deletes the specified Profile Protocol OptionsHttp.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsHttp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options http
	return
}

// ReadObjectFirewallProfileProtocolOptionsHttp API operation for FortiManager gets the Profile Protocol OptionsHttp
// with the specified index value.
// Returns the requested Profile Protocol OptionsHttp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsHttp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsImap API operation for FortiManager updates the specified Profile Protocol OptionsImap.
// Returns the index value of the Profile Protocol OptionsImap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsImap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsImap API operation for FortiManager deletes the specified Profile Protocol OptionsImap.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsImap(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options imap
	return
}

// ReadObjectFirewallProfileProtocolOptionsImap API operation for FortiManager gets the Profile Protocol OptionsImap
// with the specified index value.
// Returns the requested Profile Protocol OptionsImap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options imap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsImap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/imap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsMailSignature API operation for FortiManager updates the specified Profile Protocol OptionsMail Signature.
// Returns the index value of the Profile Protocol OptionsMail Signature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mail-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsMailSignature(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/mail-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsMailSignature API operation for FortiManager deletes the specified Profile Protocol OptionsMail Signature.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mail-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsMailSignature(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options mail-signature
	return
}

// ReadObjectFirewallProfileProtocolOptionsMailSignature API operation for FortiManager gets the Profile Protocol OptionsMail Signature
// with the specified index value.
// Returns the requested Profile Protocol OptionsMail Signature value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mail-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsMailSignature(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/mail-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsMapi API operation for FortiManager updates the specified Profile Protocol OptionsMapi.
// Returns the index value of the Profile Protocol OptionsMapi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsMapi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsMapi API operation for FortiManager deletes the specified Profile Protocol OptionsMapi.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsMapi(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options mapi
	return
}

// ReadObjectFirewallProfileProtocolOptionsMapi API operation for FortiManager gets the Profile Protocol OptionsMapi
// with the specified index value.
// Returns the requested Profile Protocol OptionsMapi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsMapi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsNntp API operation for FortiManager updates the specified Profile Protocol OptionsNntp.
// Returns the index value of the Profile Protocol OptionsNntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsNntp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsNntp API operation for FortiManager deletes the specified Profile Protocol OptionsNntp.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsNntp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options nntp
	return
}

// ReadObjectFirewallProfileProtocolOptionsNntp API operation for FortiManager gets the Profile Protocol OptionsNntp
// with the specified index value.
// Returns the requested Profile Protocol OptionsNntp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsNntp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsPop3 API operation for FortiManager updates the specified Profile Protocol OptionsPop3.
// Returns the index value of the Profile Protocol OptionsPop3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsPop3(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsPop3 API operation for FortiManager deletes the specified Profile Protocol OptionsPop3.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsPop3(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options pop3
	return
}

// ReadObjectFirewallProfileProtocolOptionsPop3 API operation for FortiManager gets the Profile Protocol OptionsPop3
// with the specified index value.
// Returns the requested Profile Protocol OptionsPop3 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsPop3(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsSmtp API operation for FortiManager updates the specified Profile Protocol OptionsSmtp.
// Returns the index value of the Profile Protocol OptionsSmtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsSmtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsSmtp API operation for FortiManager deletes the specified Profile Protocol OptionsSmtp.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsSmtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options smtp
	return
}

// ReadObjectFirewallProfileProtocolOptionsSmtp API operation for FortiManager gets the Profile Protocol OptionsSmtp
// with the specified index value.
// Returns the requested Profile Protocol OptionsSmtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options smtp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsSmtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/smtp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallProfileProtocolOptionsSsh API operation for FortiManager updates the specified Profile Protocol OptionsSsh.
// Returns the index value of the Profile Protocol OptionsSsh and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProfileProtocolOptionsSsh(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProfileProtocolOptionsSsh API operation for FortiManager deletes the specified Profile Protocol OptionsSsh.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProfileProtocolOptionsSsh(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - profile-protocol-options ssh
	return
}

// ReadObjectFirewallProfileProtocolOptionsSsh API operation for FortiManager gets the Profile Protocol OptionsSsh
// with the specified index value.
// Returns the requested Profile Protocol OptionsSsh value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - profile-protocol-options ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProfileProtocolOptionsSsh(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/profile-protocol-options/{profile-protocol-options}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProxyAddress API operation for FortiManager creates a new Proxy Address.
// Returns the index value of the Proxy Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProxyAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProxyAddress API operation for FortiManager updates the specified Proxy Address.
// Returns the index value of the Proxy Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProxyAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProxyAddress API operation for FortiManager deletes the specified Proxy Address.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProxyAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProxyAddress API operation for FortiManager gets the Proxy Address
// with the specified index value.
// Returns the requested Proxy Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProxyAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProxyAddressHeaderGroup API operation for FortiManager creates a new Proxy AddressHeader Group.
// Returns the index value of the Proxy AddressHeader Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProxyAddressHeaderGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProxyAddressHeaderGroup API operation for FortiManager updates the specified Proxy AddressHeader Group.
// Returns the index value of the Proxy AddressHeader Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProxyAddressHeaderGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProxyAddressHeaderGroup API operation for FortiManager deletes the specified Proxy AddressHeader Group.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProxyAddressHeaderGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProxyAddressHeaderGroup API operation for FortiManager gets the Proxy AddressHeader Group
// with the specified index value.
// Returns the requested Proxy AddressHeader Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProxyAddressHeaderGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProxyAddressTagging API operation for FortiManager creates a new Proxy AddressTagging.
// Returns the index value of the Proxy AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProxyAddressTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProxyAddressTagging API operation for FortiManager updates the specified Proxy AddressTagging.
// Returns the index value of the Proxy AddressTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProxyAddressTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProxyAddressTagging API operation for FortiManager deletes the specified Proxy AddressTagging.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProxyAddressTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProxyAddressTagging API operation for FortiManager gets the Proxy AddressTagging
// with the specified index value.
// Returns the requested Proxy AddressTagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-address tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProxyAddressTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-address/{proxy-address}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProxyAddrgrp API operation for FortiManager creates a new Proxy Addrgrp.
// Returns the index value of the Proxy Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProxyAddrgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProxyAddrgrp API operation for FortiManager updates the specified Proxy Addrgrp.
// Returns the index value of the Proxy Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProxyAddrgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProxyAddrgrp API operation for FortiManager deletes the specified Proxy Addrgrp.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProxyAddrgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProxyAddrgrp API operation for FortiManager gets the Proxy Addrgrp
// with the specified index value.
// Returns the requested Proxy Addrgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProxyAddrgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallProxyAddrgrpTagging API operation for FortiManager creates a new Proxy AddrgrpTagging.
// Returns the index value of the Proxy AddrgrpTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallProxyAddrgrpTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp/{proxy-addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallProxyAddrgrpTagging API operation for FortiManager updates the specified Proxy AddrgrpTagging.
// Returns the index value of the Proxy AddrgrpTagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallProxyAddrgrpTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp/{proxy-addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallProxyAddrgrpTagging API operation for FortiManager deletes the specified Proxy AddrgrpTagging.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallProxyAddrgrpTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp/{proxy-addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallProxyAddrgrpTagging API operation for FortiManager gets the Proxy AddrgrpTagging
// with the specified index value.
// Returns the requested Proxy AddrgrpTagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - proxy-addrgrp tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallProxyAddrgrpTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/proxy-addrgrp/{proxy-addrgrp}/tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallScheduleGroup API operation for FortiManager creates a new ScheduleGroup.
// Returns the index value of the ScheduleGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallScheduleGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallScheduleGroup API operation for FortiManager updates the specified ScheduleGroup.
// Returns the index value of the ScheduleGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallScheduleGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallScheduleGroup API operation for FortiManager deletes the specified ScheduleGroup.
// Returns error for service API and SDK errors.
// See the object firewall - schedule group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallScheduleGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallScheduleGroup API operation for FortiManager gets the ScheduleGroup
// with the specified index value.
// Returns the requested ScheduleGroup value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallScheduleGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallScheduleOnetime API operation for FortiManager creates a new ScheduleOnetime.
// Returns the index value of the ScheduleOnetime and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule onetime chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallScheduleOnetime(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/onetime"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallScheduleOnetime API operation for FortiManager updates the specified ScheduleOnetime.
// Returns the index value of the ScheduleOnetime and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule onetime chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallScheduleOnetime(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/onetime"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallScheduleOnetime API operation for FortiManager deletes the specified ScheduleOnetime.
// Returns error for service API and SDK errors.
// See the object firewall - schedule onetime chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallScheduleOnetime(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/onetime"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallScheduleOnetime API operation for FortiManager gets the ScheduleOnetime
// with the specified index value.
// Returns the requested ScheduleOnetime value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule onetime chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallScheduleOnetime(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/onetime"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallScheduleRecurring API operation for FortiManager creates a new ScheduleRecurring.
// Returns the index value of the ScheduleRecurring and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule recurring chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallScheduleRecurring(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/recurring"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallScheduleRecurring API operation for FortiManager updates the specified ScheduleRecurring.
// Returns the index value of the ScheduleRecurring and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule recurring chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallScheduleRecurring(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/recurring"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallScheduleRecurring API operation for FortiManager deletes the specified ScheduleRecurring.
// Returns error for service API and SDK errors.
// See the object firewall - schedule recurring chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallScheduleRecurring(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/recurring"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallScheduleRecurring API operation for FortiManager gets the ScheduleRecurring
// with the specified index value.
// Returns the requested ScheduleRecurring value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - schedule recurring chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallScheduleRecurring(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/schedule/recurring"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallServiceCategory API operation for FortiManager creates a new ServiceCategory.
// Returns the index value of the ServiceCategory and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallServiceCategory(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallServiceCategory API operation for FortiManager updates the specified ServiceCategory.
// Returns the index value of the ServiceCategory and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallServiceCategory(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallServiceCategory API operation for FortiManager deletes the specified ServiceCategory.
// Returns error for service API and SDK errors.
// See the object firewall - service category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallServiceCategory(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/service/category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallServiceCategory API operation for FortiManager gets the ServiceCategory
// with the specified index value.
// Returns the requested ServiceCategory value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallServiceCategory(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallServiceCustom API operation for FortiManager creates a new ServiceCustom.
// Returns the index value of the ServiceCustom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallServiceCustom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallServiceCustom API operation for FortiManager updates the specified ServiceCustom.
// Returns the index value of the ServiceCustom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallServiceCustom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallServiceCustom API operation for FortiManager deletes the specified ServiceCustom.
// Returns error for service API and SDK errors.
// See the object firewall - service custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallServiceCustom(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/service/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallServiceCustom API operation for FortiManager gets the ServiceCustom
// with the specified index value.
// Returns the requested ServiceCustom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallServiceCustom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallServiceGroup API operation for FortiManager creates a new ServiceGroup.
// Returns the index value of the ServiceGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallServiceGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallServiceGroup API operation for FortiManager updates the specified ServiceGroup.
// Returns the index value of the ServiceGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallServiceGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallServiceGroup API operation for FortiManager deletes the specified ServiceGroup.
// Returns error for service API and SDK errors.
// See the object firewall - service group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallServiceGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/service/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallServiceGroup API operation for FortiManager gets the ServiceGroup
// with the specified index value.
// Returns the requested ServiceGroup value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - service group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallServiceGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/service/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallShaperPerIpShaper API operation for FortiManager creates a new ShaperPer Ip Shaper.
// Returns the index value of the ShaperPer Ip Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper per-ip-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallShaperPerIpShaper(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/per-ip-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallShaperPerIpShaper API operation for FortiManager updates the specified ShaperPer Ip Shaper.
// Returns the index value of the ShaperPer Ip Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper per-ip-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallShaperPerIpShaper(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/per-ip-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallShaperPerIpShaper API operation for FortiManager deletes the specified ShaperPer Ip Shaper.
// Returns error for service API and SDK errors.
// See the object firewall - shaper per-ip-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallShaperPerIpShaper(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/per-ip-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallShaperPerIpShaper API operation for FortiManager gets the ShaperPer Ip Shaper
// with the specified index value.
// Returns the requested ShaperPer Ip Shaper value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper per-ip-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallShaperPerIpShaper(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/per-ip-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallShaperTrafficShaper API operation for FortiManager creates a new ShaperTraffic Shaper.
// Returns the index value of the ShaperTraffic Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper traffic-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallShaperTrafficShaper(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/traffic-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallShaperTrafficShaper API operation for FortiManager updates the specified ShaperTraffic Shaper.
// Returns the index value of the ShaperTraffic Shaper and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper traffic-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallShaperTrafficShaper(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/traffic-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallShaperTrafficShaper API operation for FortiManager deletes the specified ShaperTraffic Shaper.
// Returns error for service API and SDK errors.
// See the object firewall - shaper traffic-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallShaperTrafficShaper(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/traffic-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallShaperTrafficShaper API operation for FortiManager gets the ShaperTraffic Shaper
// with the specified index value.
// Returns the requested ShaperTraffic Shaper value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaper traffic-shaper chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallShaperTrafficShaper(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaper/traffic-shaper"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallShapingProfile API operation for FortiManager creates a new Shaping Profile.
// Returns the index value of the Shaping Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallShapingProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallShapingProfile API operation for FortiManager updates the specified Shaping Profile.
// Returns the index value of the Shaping Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallShapingProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallShapingProfile API operation for FortiManager deletes the specified Shaping Profile.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallShapingProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallShapingProfile API operation for FortiManager gets the Shaping Profile
// with the specified index value.
// Returns the requested Shaping Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallShapingProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallShapingProfileShapingEntries API operation for FortiManager creates a new Shaping ProfileShaping Entries.
// Returns the index value of the Shaping ProfileShaping Entries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallShapingProfileShapingEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallShapingProfileShapingEntries API operation for FortiManager updates the specified Shaping ProfileShaping Entries.
// Returns the index value of the Shaping ProfileShaping Entries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallShapingProfileShapingEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallShapingProfileShapingEntries API operation for FortiManager deletes the specified Shaping ProfileShaping Entries.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallShapingProfileShapingEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallShapingProfileShapingEntries API operation for FortiManager gets the Shaping ProfileShaping Entries
// with the specified index value.
// Returns the requested Shaping ProfileShaping Entries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallShapingProfileShapingEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallShapingProfileShapingEntriesMove API operation for FortiManager updates the specified Shaping ProfileShaping EntriesMove.
// Returns the index value of the Shaping ProfileShaping EntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallShapingProfileShapingEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries/{shaping-entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectFirewallShapingProfileShapingEntriesMove API operation for FortiManager gets the Shaping ProfileShaping EntriesMove
// with the specified index value.
// Returns the requested Shaping ProfileShaping EntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - shaping-profile shaping-entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallShapingProfileShapingEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/shaping-profile/{shaping-profile}/shaping-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectFirewallSshLocalCa API operation for FortiManager creates a new SshLocal Ca.
// Returns the index value of the SshLocal Ca and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssh local-ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallSshLocalCa(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssh/local-ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallSshLocalCa API operation for FortiManager updates the specified SshLocal Ca.
// Returns the index value of the SshLocal Ca and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssh local-ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSshLocalCa(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssh/local-ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSshLocalCa API operation for FortiManager deletes the specified SshLocal Ca.
// Returns error for service API and SDK errors.
// See the object firewall - ssh local-ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSshLocalCa(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ssh/local-ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallSshLocalCa API operation for FortiManager gets the SshLocal Ca
// with the specified index value.
// Returns the requested SshLocal Ca value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssh local-ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSshLocalCa(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssh/local-ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallSslSshProfile API operation for FortiManager creates a new Ssl Ssh Profile.
// Returns the index value of the Ssl Ssh Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallSslSshProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallSslSshProfile API operation for FortiManager updates the specified Ssl Ssh Profile.
// Returns the index value of the Ssl Ssh Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfile API operation for FortiManager deletes the specified Ssl Ssh Profile.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallSslSshProfile API operation for FortiManager gets the Ssl Ssh Profile
// with the specified index value.
// Returns the requested Ssl Ssh Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileDot API operation for FortiManager updates the specified Ssl Ssh ProfileDot.
// Returns the index value of the Ssl Ssh ProfileDot and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile dot chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileDot(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/dot"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileDot API operation for FortiManager deletes the specified Ssl Ssh ProfileDot.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile dot chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileDot(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile dot
	return
}

// ReadObjectFirewallSslSshProfileDot API operation for FortiManager gets the Ssl Ssh ProfileDot
// with the specified index value.
// Returns the requested Ssl Ssh ProfileDot value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile dot chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileDot(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/dot"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallSslSshProfileEchOuterSni API operation for FortiManager creates a new Ssl Ssh ProfileEch Outer Sni.
// Returns the index value of the Ssl Ssh ProfileEch Outer Sni and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ech-outer-sni chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallSslSshProfileEchOuterSni(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ech-outer-sni"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallSslSshProfileEchOuterSni API operation for FortiManager updates the specified Ssl Ssh ProfileEch Outer Sni.
// Returns the index value of the Ssl Ssh ProfileEch Outer Sni and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ech-outer-sni chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileEchOuterSni(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ech-outer-sni"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileEchOuterSni API operation for FortiManager deletes the specified Ssl Ssh ProfileEch Outer Sni.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ech-outer-sni chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileEchOuterSni(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ech-outer-sni"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallSslSshProfileEchOuterSni API operation for FortiManager gets the Ssl Ssh ProfileEch Outer Sni
// with the specified index value.
// Returns the requested Ssl Ssh ProfileEch Outer Sni value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ech-outer-sni chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileEchOuterSni(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ech-outer-sni"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileFtps API operation for FortiManager updates the specified Ssl Ssh ProfileFtps.
// Returns the index value of the Ssl Ssh ProfileFtps and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ftps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileFtps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ftps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileFtps API operation for FortiManager deletes the specified Ssl Ssh ProfileFtps.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ftps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileFtps(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile ftps
	return
}

// ReadObjectFirewallSslSshProfileFtps API operation for FortiManager gets the Ssl Ssh ProfileFtps
// with the specified index value.
// Returns the requested Ssl Ssh ProfileFtps value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ftps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileFtps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ftps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileHttps API operation for FortiManager updates the specified Ssl Ssh ProfileHttps.
// Returns the index value of the Ssl Ssh ProfileHttps and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile https chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileHttps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/https"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileHttps API operation for FortiManager deletes the specified Ssl Ssh ProfileHttps.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile https chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileHttps(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile https
	return
}

// ReadObjectFirewallSslSshProfileHttps API operation for FortiManager gets the Ssl Ssh ProfileHttps
// with the specified index value.
// Returns the requested Ssl Ssh ProfileHttps value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile https chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileHttps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/https"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileImaps API operation for FortiManager updates the specified Ssl Ssh ProfileImaps.
// Returns the index value of the Ssl Ssh ProfileImaps and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile imaps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileImaps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileImaps API operation for FortiManager deletes the specified Ssl Ssh ProfileImaps.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile imaps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileImaps(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile imaps
	return
}

// ReadObjectFirewallSslSshProfileImaps API operation for FortiManager gets the Ssl Ssh ProfileImaps
// with the specified index value.
// Returns the requested Ssl Ssh ProfileImaps value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile imaps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileImaps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfilePop3S API operation for FortiManager updates the specified Ssl Ssh ProfilePop3S.
// Returns the index value of the Ssl Ssh ProfilePop3S and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile pop3s chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfilePop3S(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/pop3s"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfilePop3S API operation for FortiManager deletes the specified Ssl Ssh ProfilePop3S.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile pop3s chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfilePop3S(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile pop3s
	return
}

// ReadObjectFirewallSslSshProfilePop3S API operation for FortiManager gets the Ssl Ssh ProfilePop3S
// with the specified index value.
// Returns the requested Ssl Ssh ProfilePop3S value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile pop3s chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfilePop3S(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/pop3s"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileSmtps API operation for FortiManager updates the specified Ssl Ssh ProfileSmtps.
// Returns the index value of the Ssl Ssh ProfileSmtps and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile smtps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileSmtps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/smtps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileSmtps API operation for FortiManager deletes the specified Ssl Ssh ProfileSmtps.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile smtps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileSmtps(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile smtps
	return
}

// ReadObjectFirewallSslSshProfileSmtps API operation for FortiManager gets the Ssl Ssh ProfileSmtps
// with the specified index value.
// Returns the requested Ssl Ssh ProfileSmtps value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile smtps chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileSmtps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/smtps"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileSsh API operation for FortiManager updates the specified Ssl Ssh ProfileSsh.
// Returns the index value of the Ssl Ssh ProfileSsh and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileSsh(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileSsh API operation for FortiManager deletes the specified Ssl Ssh ProfileSsh.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileSsh(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile ssh
	return
}

// ReadObjectFirewallSslSshProfileSsh API operation for FortiManager gets the Ssl Ssh ProfileSsh
// with the specified index value.
// Returns the requested Ssl Ssh ProfileSsh value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileSsh(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallSslSshProfileSsl API operation for FortiManager updates the specified Ssl Ssh ProfileSsl.
// Returns the index value of the Ssl Ssh ProfileSsl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileSsl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileSsl API operation for FortiManager deletes the specified Ssl Ssh ProfileSsl.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileSsl(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - ssl-ssh-profile ssl
	return
}

// ReadObjectFirewallSslSshProfileSsl API operation for FortiManager gets the Ssl Ssh ProfileSsl
// with the specified index value.
// Returns the requested Ssl Ssh ProfileSsl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileSsl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallSslSshProfileSslExempt API operation for FortiManager creates a new Ssl Ssh ProfileSsl Exempt.
// Returns the index value of the Ssl Ssh ProfileSsl Exempt and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-exempt chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallSslSshProfileSslExempt(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-exempt"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallSslSshProfileSslExempt API operation for FortiManager updates the specified Ssl Ssh ProfileSsl Exempt.
// Returns the index value of the Ssl Ssh ProfileSsl Exempt and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-exempt chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileSslExempt(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-exempt"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileSslExempt API operation for FortiManager deletes the specified Ssl Ssh ProfileSsl Exempt.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-exempt chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileSslExempt(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-exempt"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallSslSshProfileSslExempt API operation for FortiManager gets the Ssl Ssh ProfileSsl Exempt
// with the specified index value.
// Returns the requested Ssl Ssh ProfileSsl Exempt value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-exempt chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileSslExempt(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-exempt"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallSslSshProfileSslServer API operation for FortiManager creates a new Ssl Ssh ProfileSsl Server.
// Returns the index value of the Ssl Ssh ProfileSsl Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallSslSshProfileSslServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallSslSshProfileSslServer API operation for FortiManager updates the specified Ssl Ssh ProfileSsl Server.
// Returns the index value of the Ssl Ssh ProfileSsl Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallSslSshProfileSslServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallSslSshProfileSslServer API operation for FortiManager deletes the specified Ssl Ssh ProfileSsl Server.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallSslSshProfileSslServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallSslSshProfileSslServer API operation for FortiManager gets the Ssl Ssh ProfileSsl Server
// with the specified index value.
// Returns the requested Ssl Ssh ProfileSsl Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - ssl-ssh-profile ssl-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallSslSshProfileSslServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/ssl-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallTrafficClass API operation for FortiManager creates a new Traffic Class.
// Returns the index value of the Traffic Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - traffic-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallTrafficClass(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/traffic-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallTrafficClass API operation for FortiManager updates the specified Traffic Class.
// Returns the index value of the Traffic Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - traffic-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallTrafficClass(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/traffic-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallTrafficClass API operation for FortiManager deletes the specified Traffic Class.
// Returns error for service API and SDK errors.
// See the object firewall - traffic-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallTrafficClass(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/traffic-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallTrafficClass API operation for FortiManager gets the Traffic Class
// with the specified index value.
// Returns the requested Traffic Class value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - traffic-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallTrafficClass(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/traffic-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallVendorMac API operation for FortiManager updates the specified Vendor Mac.
// Returns the index value of the Vendor Mac and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vendor-mac chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVendorMac(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vendor-mac"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVendorMac API operation for FortiManager deletes the specified Vendor Mac.
// Returns error for service API and SDK errors.
// See the object firewall - vendor-mac chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVendorMac(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - vendor-mac
	return
}

// ReadObjectFirewallVendorMac API operation for FortiManager gets the Vendor Mac
// with the specified index value.
// Returns the requested Vendor Mac value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vendor-mac chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVendorMac(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vendor-mac"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip API operation for FortiManager creates a new Vip.
// Returns the index value of the Vip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip API operation for FortiManager updates the specified Vip.
// Returns the index value of the Vip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip API operation for FortiManager deletes the specified Vip.
// Returns error for service API and SDK errors.
// See the object firewall - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip API operation for FortiManager gets the Vip
// with the specified index value.
// Returns the requested Vip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip46 API operation for FortiManager creates a new Vip46.
// Returns the index value of the Vip46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip46(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip46 API operation for FortiManager updates the specified Vip46.
// Returns the index value of the Vip46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip46(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip46 API operation for FortiManager deletes the specified Vip46.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip46(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip46 API operation for FortiManager gets the Vip46
// with the specified index value.
// Returns the requested Vip46 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip46(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip46DynamicMapping API operation for FortiManager creates a new Vip46DynamicMapping.
// Returns the index value of the Vip46DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip46DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip46DynamicMapping API operation for FortiManager updates the specified Vip46DynamicMapping.
// Returns the index value of the Vip46DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip46DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip46DynamicMapping API operation for FortiManager deletes the specified Vip46DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip46DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip46DynamicMapping API operation for FortiManager gets the Vip46DynamicMapping
// with the specified index value.
// Returns the requested Vip46DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip46DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip46Realservers API operation for FortiManager creates a new Vip46Realservers.
// Returns the index value of the Vip46Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip46Realservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip46Realservers API operation for FortiManager updates the specified Vip46Realservers.
// Returns the index value of the Vip46Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip46Realservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip46Realservers API operation for FortiManager deletes the specified Vip46Realservers.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip46Realservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip46Realservers API operation for FortiManager gets the Vip46Realservers
// with the specified index value.
// Returns the requested Vip46Realservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip46 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip46Realservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip46/{vip46}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip6 API operation for FortiManager creates a new Vip6.
// Returns the index value of the Vip6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip6 API operation for FortiManager updates the specified Vip6.
// Returns the index value of the Vip6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip6 API operation for FortiManager deletes the specified Vip6.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip6 API operation for FortiManager gets the Vip6
// with the specified index value.
// Returns the requested Vip6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip64 API operation for FortiManager creates a new Vip64.
// Returns the index value of the Vip64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip64(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip64 API operation for FortiManager updates the specified Vip64.
// Returns the index value of the Vip64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip64(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip64 API operation for FortiManager deletes the specified Vip64.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip64(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip64 API operation for FortiManager gets the Vip64
// with the specified index value.
// Returns the requested Vip64 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip64(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip64DynamicMapping API operation for FortiManager creates a new Vip64DynamicMapping.
// Returns the index value of the Vip64DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip64DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip64DynamicMapping API operation for FortiManager updates the specified Vip64DynamicMapping.
// Returns the index value of the Vip64DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip64DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip64DynamicMapping API operation for FortiManager deletes the specified Vip64DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip64DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip64DynamicMapping API operation for FortiManager gets the Vip64DynamicMapping
// with the specified index value.
// Returns the requested Vip64DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip64DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip64Realservers API operation for FortiManager creates a new Vip64Realservers.
// Returns the index value of the Vip64Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip64Realservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip64Realservers API operation for FortiManager updates the specified Vip64Realservers.
// Returns the index value of the Vip64Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip64Realservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip64Realservers API operation for FortiManager deletes the specified Vip64Realservers.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip64Realservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip64Realservers API operation for FortiManager gets the Vip64Realservers
// with the specified index value.
// Returns the requested Vip64Realservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip64 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip64Realservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip64/{vip64}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip6DynamicMapping API operation for FortiManager creates a new Vip6DynamicMapping.
// Returns the index value of the Vip6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip6DynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip6DynamicMapping API operation for FortiManager updates the specified Vip6DynamicMapping.
// Returns the index value of the Vip6DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip6DynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip6DynamicMapping API operation for FortiManager deletes the specified Vip6DynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip6DynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip6DynamicMapping API operation for FortiManager gets the Vip6DynamicMapping
// with the specified index value.
// Returns the requested Vip6DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip6DynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallVip6Quic API operation for FortiManager updates the specified Vip6Quic.
// Returns the index value of the Vip6Quic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip6Quic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip6Quic API operation for FortiManager deletes the specified Vip6Quic.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip6Quic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - vip6 quic
	return
}

// ReadObjectFirewallVip6Quic API operation for FortiManager gets the Vip6Quic
// with the specified index value.
// Returns the requested Vip6Quic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip6Quic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip6Realservers API operation for FortiManager creates a new Vip6Realservers.
// Returns the index value of the Vip6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip6Realservers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip6Realservers API operation for FortiManager updates the specified Vip6Realservers.
// Returns the index value of the Vip6Realservers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip6Realservers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip6Realservers API operation for FortiManager deletes the specified Vip6Realservers.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip6Realservers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip6Realservers API operation for FortiManager gets the Vip6Realservers
// with the specified index value.
// Returns the requested Vip6Realservers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 realservers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip6Realservers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/realservers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVip6SslServerCipherSuites API operation for FortiManager creates a new Vip6Ssl Server Cipher Suites.
// Returns the index value of the Vip6Ssl Server Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVip6SslServerCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVip6SslServerCipherSuites API operation for FortiManager updates the specified Vip6Ssl Server Cipher Suites.
// Returns the index value of the Vip6Ssl Server Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVip6SslServerCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVip6SslServerCipherSuites API operation for FortiManager deletes the specified Vip6Ssl Server Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVip6SslServerCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVip6SslServerCipherSuites API operation for FortiManager gets the Vip6Ssl Server Cipher Suites
// with the specified index value.
// Returns the requested Vip6Ssl Server Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip6 ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVip6SslServerCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip6/{vip6}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipDynamicMapping API operation for FortiManager creates a new VipDynamicMapping.
// Returns the index value of the VipDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipDynamicMapping API operation for FortiManager updates the specified VipDynamicMapping.
// Returns the index value of the VipDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipDynamicMapping API operation for FortiManager deletes the specified VipDynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - vip dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipDynamicMapping API operation for FortiManager gets the VipDynamicMapping
// with the specified index value.
// Returns the requested VipDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipGslbPublicIps API operation for FortiManager creates a new VipGslb Public Ips.
// Returns the index value of the VipGslb Public Ips and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip gslb-public-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipGslbPublicIps(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/gslb-public-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipGslbPublicIps API operation for FortiManager updates the specified VipGslb Public Ips.
// Returns the index value of the VipGslb Public Ips and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip gslb-public-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipGslbPublicIps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/gslb-public-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipGslbPublicIps API operation for FortiManager deletes the specified VipGslb Public Ips.
// Returns error for service API and SDK errors.
// See the object firewall - vip gslb-public-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipGslbPublicIps(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/gslb-public-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipGslbPublicIps API operation for FortiManager gets the VipGslb Public Ips
// with the specified index value.
// Returns the requested VipGslb Public Ips value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip gslb-public-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipGslbPublicIps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/gslb-public-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFirewallVipQuic API operation for FortiManager updates the specified VipQuic.
// Returns the index value of the VipQuic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipQuic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipQuic API operation for FortiManager deletes the specified VipQuic.
// Returns error for service API and SDK errors.
// See the object firewall - vip quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipQuic(mkey string, paradict map[string]string) (err error) {

	//No unset API for object firewall - vip quic
	return
}

// ReadObjectFirewallVipQuic API operation for FortiManager gets the VipQuic
// with the specified index value.
// Returns the requested VipQuic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip quic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipQuic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/quic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipSslServerCipherSuites API operation for FortiManager creates a new VipSsl Server Cipher Suites.
// Returns the index value of the VipSsl Server Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipSslServerCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipSslServerCipherSuites API operation for FortiManager updates the specified VipSsl Server Cipher Suites.
// Returns the index value of the VipSsl Server Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipSslServerCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipSslServerCipherSuites API operation for FortiManager deletes the specified VipSsl Server Cipher Suites.
// Returns error for service API and SDK errors.
// See the object firewall - vip ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipSslServerCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipSslServerCipherSuites API operation for FortiManager gets the VipSsl Server Cipher Suites
// with the specified index value.
// Returns the requested VipSsl Server Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vip ssl-server-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipSslServerCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vip/{vip}/ssl-server-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipgrp API operation for FortiManager creates a new Vipgrp.
// Returns the index value of the Vipgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipgrp API operation for FortiManager updates the specified Vipgrp.
// Returns the index value of the Vipgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipgrp API operation for FortiManager deletes the specified Vipgrp.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipgrp API operation for FortiManager gets the Vipgrp
// with the specified index value.
// Returns the requested Vipgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipgrp46 API operation for FortiManager creates a new Vipgrp46.
// Returns the index value of the Vipgrp46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipgrp46(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipgrp46 API operation for FortiManager updates the specified Vipgrp46.
// Returns the index value of the Vipgrp46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipgrp46(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipgrp46 API operation for FortiManager deletes the specified Vipgrp46.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipgrp46(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipgrp46 API operation for FortiManager gets the Vipgrp46
// with the specified index value.
// Returns the requested Vipgrp46 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipgrp46(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipgrp6 API operation for FortiManager creates a new Vipgrp6.
// Returns the index value of the Vipgrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipgrp6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipgrp6 API operation for FortiManager updates the specified Vipgrp6.
// Returns the index value of the Vipgrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipgrp6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipgrp6 API operation for FortiManager deletes the specified Vipgrp6.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipgrp6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipgrp6 API operation for FortiManager gets the Vipgrp6
// with the specified index value.
// Returns the requested Vipgrp6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipgrp6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipgrp64 API operation for FortiManager creates a new Vipgrp64.
// Returns the index value of the Vipgrp64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipgrp64(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipgrp64 API operation for FortiManager updates the specified Vipgrp64.
// Returns the index value of the Vipgrp64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipgrp64(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipgrp64 API operation for FortiManager deletes the specified Vipgrp64.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipgrp64(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipgrp64 API operation for FortiManager gets the Vipgrp64
// with the specified index value.
// Returns the requested Vipgrp64 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipgrp64(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallVipgrpDynamicMapping API operation for FortiManager creates a new VipgrpDynamicMapping.
// Returns the index value of the VipgrpDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallVipgrpDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp/{vipgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallVipgrpDynamicMapping API operation for FortiManager updates the specified VipgrpDynamicMapping.
// Returns the index value of the VipgrpDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallVipgrpDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp/{vipgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallVipgrpDynamicMapping API operation for FortiManager deletes the specified VipgrpDynamicMapping.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallVipgrpDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp/{vipgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallVipgrpDynamicMapping API operation for FortiManager gets the VipgrpDynamicMapping
// with the specified index value.
// Returns the requested VipgrpDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - vipgrp dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallVipgrpDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/vipgrp/{vipgrp}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallWildcardFqdnCustom API operation for FortiManager creates a new Wildcard FqdnCustom.
// Returns the index value of the Wildcard FqdnCustom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallWildcardFqdnCustom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallWildcardFqdnCustom API operation for FortiManager updates the specified Wildcard FqdnCustom.
// Returns the index value of the Wildcard FqdnCustom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallWildcardFqdnCustom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallWildcardFqdnCustom API operation for FortiManager deletes the specified Wildcard FqdnCustom.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallWildcardFqdnCustom(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallWildcardFqdnCustom API operation for FortiManager gets the Wildcard FqdnCustom
// with the specified index value.
// Returns the requested Wildcard FqdnCustom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallWildcardFqdnCustom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFirewallWildcardFqdnGroup API operation for FortiManager creates a new Wildcard FqdnGroup.
// Returns the index value of the Wildcard FqdnGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFirewallWildcardFqdnGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFirewallWildcardFqdnGroup API operation for FortiManager updates the specified Wildcard FqdnGroup.
// Returns the index value of the Wildcard FqdnGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFirewallWildcardFqdnGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFirewallWildcardFqdnGroup API operation for FortiManager deletes the specified Wildcard FqdnGroup.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFirewallWildcardFqdnGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFirewallWildcardFqdnGroup API operation for FortiManager gets the Wildcard FqdnGroup
// with the specified index value.
// Returns the requested Wildcard FqdnGroup value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object firewall - wildcard-fqdn group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFirewallWildcardFqdnGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/firewall/wildcard-fqdn/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFmgDeviceBlueprint API operation for FortiManager creates a new DeviceBlueprint.
// Returns the index value of the DeviceBlueprint and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - device blueprint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFmgDeviceBlueprint(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/device/blueprint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFmgDeviceBlueprint API operation for FortiManager updates the specified DeviceBlueprint.
// Returns the index value of the DeviceBlueprint and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - device blueprint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgDeviceBlueprint(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/device/blueprint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgDeviceBlueprint API operation for FortiManager deletes the specified DeviceBlueprint.
// Returns error for service API and SDK errors.
// See the object fmg - device blueprint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgDeviceBlueprint(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fmg/device/blueprint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFmgDeviceBlueprint API operation for FortiManager gets the DeviceBlueprint
// with the specified index value.
// Returns the requested DeviceBlueprint value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - device blueprint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgDeviceBlueprint(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/device/blueprint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFmgFabricAuthorizationTemplate API operation for FortiManager creates a new FabricAuthorizationTemplate.
// Returns the index value of the FabricAuthorizationTemplate and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFmgFabricAuthorizationTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFmgFabricAuthorizationTemplate API operation for FortiManager updates the specified FabricAuthorizationTemplate.
// Returns the index value of the FabricAuthorizationTemplate and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgFabricAuthorizationTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgFabricAuthorizationTemplate API operation for FortiManager deletes the specified FabricAuthorizationTemplate.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgFabricAuthorizationTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFmgFabricAuthorizationTemplate API operation for FortiManager gets the FabricAuthorizationTemplate
// with the specified index value.
// Returns the requested FabricAuthorizationTemplate value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgFabricAuthorizationTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFmgFabricAuthorizationTemplatePlatforms API operation for FortiManager creates a new FabricAuthorizationTemplatePlatforms.
// Returns the index value of the FabricAuthorizationTemplatePlatforms and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template platforms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFmgFabricAuthorizationTemplatePlatforms(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template/{template}/platforms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFmgFabricAuthorizationTemplatePlatforms API operation for FortiManager updates the specified FabricAuthorizationTemplatePlatforms.
// Returns the index value of the FabricAuthorizationTemplatePlatforms and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template platforms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgFabricAuthorizationTemplatePlatforms(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template/{template}/platforms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgFabricAuthorizationTemplatePlatforms API operation for FortiManager deletes the specified FabricAuthorizationTemplatePlatforms.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template platforms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgFabricAuthorizationTemplatePlatforms(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template/{template}/platforms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFmgFabricAuthorizationTemplatePlatforms API operation for FortiManager gets the FabricAuthorizationTemplatePlatforms
// with the specified index value.
// Returns the requested FabricAuthorizationTemplatePlatforms value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - fabric authorization template platforms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgFabricAuthorizationTemplatePlatforms(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/fabric/authorization/template/{template}/platforms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFmgSaseManagerSettings API operation for FortiManager updates the specified Sase ManagerSettings.
// Returns the index value of the Sase ManagerSettings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgSaseManagerSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/sase-manager/settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgSaseManagerSettings API operation for FortiManager deletes the specified Sase ManagerSettings.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgSaseManagerSettings(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fmg - sase-manager settings
	return
}

// ReadObjectFmgSaseManagerSettings API operation for FortiManager gets the Sase ManagerSettings
// with the specified index value.
// Returns the requested Sase ManagerSettings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgSaseManagerSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/sase-manager/settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFmgSaseManagerStatus API operation for FortiManager updates the specified Sase ManagerStatus.
// Returns the index value of the Sase ManagerStatus and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgSaseManagerStatus(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/sase-manager/status"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgSaseManagerStatus API operation for FortiManager deletes the specified Sase ManagerStatus.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgSaseManagerStatus(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fmg - sase-manager status
	return
}

// ReadObjectFmgSaseManagerStatus API operation for FortiManager gets the Sase ManagerStatus
// with the specified index value.
// Returns the requested Sase ManagerStatus value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - sase-manager status chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgSaseManagerStatus(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/sase-manager/status"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFmgVariable API operation for FortiManager creates a new Variable.
// Returns the index value of the Variable and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFmgVariable(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFmgVariable API operation for FortiManager updates the specified Variable.
// Returns the index value of the Variable and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgVariable(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgVariable API operation for FortiManager deletes the specified Variable.
// Returns error for service API and SDK errors.
// See the object fmg - variable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgVariable(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fmg/variable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFmgVariable API operation for FortiManager gets the Variable
// with the specified index value.
// Returns the requested Variable value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgVariable(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFmgVariableDynamicMapping API operation for FortiManager creates a new VariableDynamicMapping.
// Returns the index value of the VariableDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFmgVariableDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable/{variable}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFmgVariableDynamicMapping API operation for FortiManager updates the specified VariableDynamicMapping.
// Returns the index value of the VariableDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFmgVariableDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable/{variable}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFmgVariableDynamicMapping API operation for FortiManager deletes the specified VariableDynamicMapping.
// Returns error for service API and SDK errors.
// See the object fmg - variable dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFmgVariableDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fmg/variable/{variable}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFmgVariableDynamicMapping API operation for FortiManager gets the VariableDynamicMapping
// with the specified index value.
// Returns the requested VariableDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fmg - variable dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFmgVariableDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fmg/variable/{variable}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlan API operation for FortiManager creates a new Vlan.
// Returns the index value of the Vlan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlan(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlan API operation for FortiManager updates the specified Vlan.
// Returns the index value of the Vlan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlan API operation for FortiManager deletes the specified Vlan.
// Returns error for service API and SDK errors.
// See the object fsp - vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlan(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlan API operation for FortiManager gets the Vlan
// with the specified index value.
// Returns the requested Vlan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFspVlanDhcpServer API operation for FortiManager updates the specified VlanDhcp Server.
// Returns the index value of the VlanDhcp Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDhcpServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDhcpServer API operation for FortiManager deletes the specified VlanDhcp Server.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDhcpServer(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fsp - vlan dhcp-server
	return
}

// ReadObjectFspVlanDhcpServer API operation for FortiManager gets the VlanDhcp Server
// with the specified index value.
// Returns the requested VlanDhcp Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDhcpServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDhcpServerExcludeRange API operation for FortiManager creates a new VlanDhcp ServerExclude Range.
// Returns the index value of the VlanDhcp ServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDhcpServerExcludeRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDhcpServerExcludeRange API operation for FortiManager updates the specified VlanDhcp ServerExclude Range.
// Returns the index value of the VlanDhcp ServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDhcpServerExcludeRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDhcpServerExcludeRange API operation for FortiManager deletes the specified VlanDhcp ServerExclude Range.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDhcpServerExcludeRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDhcpServerExcludeRange API operation for FortiManager gets the VlanDhcp ServerExclude Range
// with the specified index value.
// Returns the requested VlanDhcp ServerExclude Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDhcpServerExcludeRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDhcpServerIpRange API operation for FortiManager creates a new VlanDhcp ServerIp Range.
// Returns the index value of the VlanDhcp ServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDhcpServerIpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDhcpServerIpRange API operation for FortiManager updates the specified VlanDhcp ServerIp Range.
// Returns the index value of the VlanDhcp ServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDhcpServerIpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDhcpServerIpRange API operation for FortiManager deletes the specified VlanDhcp ServerIp Range.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDhcpServerIpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDhcpServerIpRange API operation for FortiManager gets the VlanDhcp ServerIp Range
// with the specified index value.
// Returns the requested VlanDhcp ServerIp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDhcpServerIpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDhcpServerOptions API operation for FortiManager creates a new VlanDhcp ServerOptions.
// Returns the index value of the VlanDhcp ServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDhcpServerOptions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDhcpServerOptions API operation for FortiManager updates the specified VlanDhcp ServerOptions.
// Returns the index value of the VlanDhcp ServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDhcpServerOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDhcpServerOptions API operation for FortiManager deletes the specified VlanDhcp ServerOptions.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDhcpServerOptions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDhcpServerOptions API operation for FortiManager gets the VlanDhcp ServerOptions
// with the specified index value.
// Returns the requested VlanDhcp ServerOptions value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDhcpServerOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDhcpServerReservedAddress API operation for FortiManager creates a new VlanDhcp ServerReserved Address.
// Returns the index value of the VlanDhcp ServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDhcpServerReservedAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDhcpServerReservedAddress API operation for FortiManager updates the specified VlanDhcp ServerReserved Address.
// Returns the index value of the VlanDhcp ServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDhcpServerReservedAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDhcpServerReservedAddress API operation for FortiManager deletes the specified VlanDhcp ServerReserved Address.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDhcpServerReservedAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDhcpServerReservedAddress API operation for FortiManager gets the VlanDhcp ServerReserved Address
// with the specified index value.
// Returns the requested VlanDhcp ServerReserved Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDhcpServerReservedAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDynamicMapping API operation for FortiManager creates a new VlanDynamicMapping.
// Returns the index value of the VlanDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDynamicMapping API operation for FortiManager updates the specified VlanDynamicMapping.
// Returns the index value of the VlanDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMapping API operation for FortiManager deletes the specified VlanDynamicMapping.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDynamicMapping API operation for FortiManager gets the VlanDynamicMapping
// with the specified index value.
// Returns the requested VlanDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFspVlanDynamicMappingDhcpServer API operation for FortiManager updates the specified VlanDynamicMappingDhcp Server.
// Returns the index value of the VlanDynamicMappingDhcp Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMappingDhcpServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMappingDhcpServer API operation for FortiManager deletes the specified VlanDynamicMappingDhcp Server.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMappingDhcpServer(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fsp - vlan dynamic mapping dhcp-server
	return
}

// ReadObjectFspVlanDynamicMappingDhcpServer API operation for FortiManager gets the VlanDynamicMappingDhcp Server
// with the specified index value.
// Returns the requested VlanDynamicMappingDhcp Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMappingDhcpServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDynamicMappingDhcpServerExcludeRange API operation for FortiManager creates a new VlanDynamicMappingDhcp ServerExclude Range.
// Returns the index value of the VlanDynamicMappingDhcp ServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDynamicMappingDhcpServerExcludeRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDynamicMappingDhcpServerExcludeRange API operation for FortiManager updates the specified VlanDynamicMappingDhcp ServerExclude Range.
// Returns the index value of the VlanDynamicMappingDhcp ServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMappingDhcpServerExcludeRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMappingDhcpServerExcludeRange API operation for FortiManager deletes the specified VlanDynamicMappingDhcp ServerExclude Range.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMappingDhcpServerExcludeRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDynamicMappingDhcpServerExcludeRange API operation for FortiManager gets the VlanDynamicMappingDhcp ServerExclude Range
// with the specified index value.
// Returns the requested VlanDynamicMappingDhcp ServerExclude Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMappingDhcpServerExcludeRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDynamicMappingDhcpServerIpRange API operation for FortiManager creates a new VlanDynamicMappingDhcp ServerIp Range.
// Returns the index value of the VlanDynamicMappingDhcp ServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDynamicMappingDhcpServerIpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDynamicMappingDhcpServerIpRange API operation for FortiManager updates the specified VlanDynamicMappingDhcp ServerIp Range.
// Returns the index value of the VlanDynamicMappingDhcp ServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMappingDhcpServerIpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMappingDhcpServerIpRange API operation for FortiManager deletes the specified VlanDynamicMappingDhcp ServerIp Range.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMappingDhcpServerIpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDynamicMappingDhcpServerIpRange API operation for FortiManager gets the VlanDynamicMappingDhcp ServerIp Range
// with the specified index value.
// Returns the requested VlanDynamicMappingDhcp ServerIp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMappingDhcpServerIpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDynamicMappingDhcpServerOptions API operation for FortiManager creates a new VlanDynamicMappingDhcp ServerOptions.
// Returns the index value of the VlanDynamicMappingDhcp ServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDynamicMappingDhcpServerOptions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDynamicMappingDhcpServerOptions API operation for FortiManager updates the specified VlanDynamicMappingDhcp ServerOptions.
// Returns the index value of the VlanDynamicMappingDhcp ServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMappingDhcpServerOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMappingDhcpServerOptions API operation for FortiManager deletes the specified VlanDynamicMappingDhcp ServerOptions.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMappingDhcpServerOptions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDynamicMappingDhcpServerOptions API operation for FortiManager gets the VlanDynamicMappingDhcp ServerOptions
// with the specified index value.
// Returns the requested VlanDynamicMappingDhcp ServerOptions value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMappingDhcpServerOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanDynamicMappingDhcpServerReservedAddress API operation for FortiManager creates a new VlanDynamicMappingDhcp ServerReserved Address.
// Returns the index value of the VlanDynamicMappingDhcp ServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanDynamicMappingDhcpServerReservedAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanDynamicMappingDhcpServerReservedAddress API operation for FortiManager updates the specified VlanDynamicMappingDhcp ServerReserved Address.
// Returns the index value of the VlanDynamicMappingDhcp ServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanDynamicMappingDhcpServerReservedAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanDynamicMappingDhcpServerReservedAddress API operation for FortiManager deletes the specified VlanDynamicMappingDhcp ServerReserved Address.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanDynamicMappingDhcpServerReservedAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanDynamicMappingDhcpServerReservedAddress API operation for FortiManager gets the VlanDynamicMappingDhcp ServerReserved Address
// with the specified index value.
// Returns the requested VlanDynamicMappingDhcp ServerReserved Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan dynamic mapping dhcp-server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanDynamicMappingDhcpServerReservedAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/dhcp-server/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFspVlanInterface API operation for FortiManager updates the specified VlanInterface.
// Returns the index value of the VlanInterface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterface(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterface API operation for FortiManager deletes the specified VlanInterface.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterface(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fsp - vlan interface
	return
}

// ReadObjectFspVlanInterface API operation for FortiManager gets the VlanInterface
// with the specified index value.
// Returns the requested VlanInterface value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterface(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectFspVlanInterfaceIpv6 API operation for FortiManager updates the specified VlanInterfaceIpv6.
// Returns the index value of the VlanInterfaceIpv6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceIpv6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceIpv6 API operation for FortiManager deletes the specified VlanInterfaceIpv6.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceIpv6(mkey string, paradict map[string]string) (err error) {

	//No unset API for object fsp - vlan interface ipv6
	return
}

// ReadObjectFspVlanInterfaceIpv6 API operation for FortiManager gets the VlanInterfaceIpv6
// with the specified index value.
// Returns the requested VlanInterfaceIpv6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceIpv6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList API operation for FortiManager creates a new VlanInterfaceIpv6Ip6 Delegated Prefix List.
// Returns the index value of the VlanInterfaceIpv6Ip6 Delegated Prefix List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-delegated-prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-delegated-prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList API operation for FortiManager updates the specified VlanInterfaceIpv6Ip6 Delegated Prefix List.
// Returns the index value of the VlanInterfaceIpv6Ip6 Delegated Prefix List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-delegated-prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-delegated-prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList API operation for FortiManager deletes the specified VlanInterfaceIpv6Ip6 Delegated Prefix List.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-delegated-prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-delegated-prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList API operation for FortiManager gets the VlanInterfaceIpv6Ip6 Delegated Prefix List
// with the specified index value.
// Returns the requested VlanInterfaceIpv6Ip6 Delegated Prefix List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-delegated-prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceIpv6Ip6DelegatedPrefixList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-delegated-prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceIpv6Ip6ExtraAddr API operation for FortiManager creates a new VlanInterfaceIpv6Ip6 Extra Addr.
// Returns the index value of the VlanInterfaceIpv6Ip6 Extra Addr and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-extra-addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceIpv6Ip6ExtraAddr(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-extra-addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceIpv6Ip6ExtraAddr API operation for FortiManager updates the specified VlanInterfaceIpv6Ip6 Extra Addr.
// Returns the index value of the VlanInterfaceIpv6Ip6 Extra Addr and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-extra-addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceIpv6Ip6ExtraAddr(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-extra-addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceIpv6Ip6ExtraAddr API operation for FortiManager deletes the specified VlanInterfaceIpv6Ip6 Extra Addr.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-extra-addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceIpv6Ip6ExtraAddr(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-extra-addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceIpv6Ip6ExtraAddr API operation for FortiManager gets the VlanInterfaceIpv6Ip6 Extra Addr
// with the specified index value.
// Returns the requested VlanInterfaceIpv6Ip6 Extra Addr value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 ip6-extra-addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceIpv6Ip6ExtraAddr(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/ip6-extra-addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceIpv6Vrrp6 API operation for FortiManager creates a new VlanInterfaceIpv6Vrrp6.
// Returns the index value of the VlanInterfaceIpv6Vrrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 vrrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceIpv6Vrrp6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/vrrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceIpv6Vrrp6 API operation for FortiManager updates the specified VlanInterfaceIpv6Vrrp6.
// Returns the index value of the VlanInterfaceIpv6Vrrp6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 vrrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceIpv6Vrrp6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/vrrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceIpv6Vrrp6 API operation for FortiManager deletes the specified VlanInterfaceIpv6Vrrp6.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 vrrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceIpv6Vrrp6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/vrrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceIpv6Vrrp6 API operation for FortiManager gets the VlanInterfaceIpv6Vrrp6
// with the specified index value.
// Returns the requested VlanInterfaceIpv6Vrrp6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface ipv6 vrrp6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceIpv6Vrrp6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/ipv6/vrrp6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceSecondaryip API operation for FortiManager creates a new VlanInterfaceSecondaryip.
// Returns the index value of the VlanInterfaceSecondaryip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface secondaryip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceSecondaryip(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/secondaryip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceSecondaryip API operation for FortiManager updates the specified VlanInterfaceSecondaryip.
// Returns the index value of the VlanInterfaceSecondaryip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface secondaryip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceSecondaryip(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/secondaryip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceSecondaryip API operation for FortiManager deletes the specified VlanInterfaceSecondaryip.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface secondaryip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceSecondaryip(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/secondaryip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceSecondaryip API operation for FortiManager gets the VlanInterfaceSecondaryip
// with the specified index value.
// Returns the requested VlanInterfaceSecondaryip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface secondaryip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceSecondaryip(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/secondaryip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceVrrp API operation for FortiManager creates a new VlanInterfaceVrrp.
// Returns the index value of the VlanInterfaceVrrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceVrrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceVrrp API operation for FortiManager updates the specified VlanInterfaceVrrp.
// Returns the index value of the VlanInterfaceVrrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceVrrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceVrrp API operation for FortiManager deletes the specified VlanInterfaceVrrp.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceVrrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceVrrp API operation for FortiManager gets the VlanInterfaceVrrp
// with the specified index value.
// Returns the requested VlanInterfaceVrrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceVrrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectFspVlanInterfaceVrrpProxyArp API operation for FortiManager creates a new VlanInterfaceVrrpProxy Arp.
// Returns the index value of the VlanInterfaceVrrpProxy Arp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp proxy-arp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectFspVlanInterfaceVrrpProxyArp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp/{vrrp}/proxy-arp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectFspVlanInterfaceVrrpProxyArp API operation for FortiManager updates the specified VlanInterfaceVrrpProxy Arp.
// Returns the index value of the VlanInterfaceVrrpProxy Arp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp proxy-arp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectFspVlanInterfaceVrrpProxyArp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp/{vrrp}/proxy-arp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectFspVlanInterfaceVrrpProxyArp API operation for FortiManager deletes the specified VlanInterfaceVrrpProxy Arp.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp proxy-arp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectFspVlanInterfaceVrrpProxyArp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp/{vrrp}/proxy-arp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectFspVlanInterfaceVrrpProxyArp API operation for FortiManager gets the VlanInterfaceVrrpProxy Arp
// with the specified index value.
// Returns the requested VlanInterfaceVrrpProxy Arp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object fsp - vlan interface vrrp proxy-arp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectFspVlanInterfaceVrrpProxyArp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/fsp/vlan/{vlan}/interface/vrrp/{vrrp}/proxy-arp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectGlobalIpsSensor API operation for FortiManager creates a new IpsSensor.
// Returns the index value of the IpsSensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectGlobalIpsSensor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectGlobalIpsSensor API operation for FortiManager updates the specified IpsSensor.
// Returns the index value of the IpsSensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectGlobalIpsSensor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectGlobalIpsSensor API operation for FortiManager deletes the specified IpsSensor.
// Returns error for service API and SDK errors.
// See the object global - ips sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectGlobalIpsSensor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectGlobalIpsSensor API operation for FortiManager gets the IpsSensor
// with the specified index value.
// Returns the requested IpsSensor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectGlobalIpsSensor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectGlobalIpsSensorEntries API operation for FortiManager creates a new IpsSensorEntries.
// Returns the index value of the IpsSensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectGlobalIpsSensorEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectGlobalIpsSensorEntries API operation for FortiManager updates the specified IpsSensorEntries.
// Returns the index value of the IpsSensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectGlobalIpsSensorEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectGlobalIpsSensorEntries API operation for FortiManager deletes the specified IpsSensorEntries.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectGlobalIpsSensorEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectGlobalIpsSensorEntries API operation for FortiManager gets the IpsSensorEntries
// with the specified index value.
// Returns the requested IpsSensorEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectGlobalIpsSensorEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectGlobalIpsSensorEntriesExemptIp API operation for FortiManager creates a new IpsSensorEntriesExempt Ip.
// Returns the index value of the IpsSensorEntriesExempt Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectGlobalIpsSensorEntriesExemptIp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectGlobalIpsSensorEntriesExemptIp API operation for FortiManager updates the specified IpsSensorEntriesExempt Ip.
// Returns the index value of the IpsSensorEntriesExempt Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectGlobalIpsSensorEntriesExemptIp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectGlobalIpsSensorEntriesExemptIp API operation for FortiManager deletes the specified IpsSensorEntriesExempt Ip.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectGlobalIpsSensorEntriesExemptIp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectGlobalIpsSensorEntriesExemptIp API operation for FortiManager gets the IpsSensorEntriesExempt Ip
// with the specified index value.
// Returns the requested IpsSensorEntriesExempt Ip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectGlobalIpsSensorEntriesExemptIp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectGlobalIpsSensorOverride API operation for FortiManager creates a new IpsSensorOverride.
// Returns the index value of the IpsSensorOverride and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectGlobalIpsSensorOverride(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectGlobalIpsSensorOverride API operation for FortiManager updates the specified IpsSensorOverride.
// Returns the index value of the IpsSensorOverride and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectGlobalIpsSensorOverride(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectGlobalIpsSensorOverride API operation for FortiManager deletes the specified IpsSensorOverride.
// Returns error for service API and SDK errors.
// See the object global - ips sensor override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectGlobalIpsSensorOverride(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectGlobalIpsSensorOverride API operation for FortiManager gets the IpsSensorOverride
// with the specified index value.
// Returns the requested IpsSensorOverride value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object global - ips sensor override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectGlobalIpsSensorOverride(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/global/ips/sensor/{sensor}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIcapProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIcapProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIcapProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIcapProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIcapProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object icap - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIcapProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/icap/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIcapProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIcapProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIcapProfileIcapHeaders API operation for FortiManager creates a new ProfileIcap Headers.
// Returns the index value of the ProfileIcap Headers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile icap-headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIcapProfileIcapHeaders(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/icap-headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIcapProfileIcapHeaders API operation for FortiManager updates the specified ProfileIcap Headers.
// Returns the index value of the ProfileIcap Headers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile icap-headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIcapProfileIcapHeaders(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/icap-headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIcapProfileIcapHeaders API operation for FortiManager deletes the specified ProfileIcap Headers.
// Returns error for service API and SDK errors.
// See the object icap - profile icap-headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIcapProfileIcapHeaders(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/icap-headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIcapProfileIcapHeaders API operation for FortiManager gets the ProfileIcap Headers
// with the specified index value.
// Returns the requested ProfileIcap Headers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile icap-headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIcapProfileIcapHeaders(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/icap-headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIcapProfileRespmodForwardRules API operation for FortiManager creates a new ProfileRespmod Forward Rules.
// Returns the index value of the ProfileRespmod Forward Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIcapProfileRespmodForwardRules(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIcapProfileRespmodForwardRules API operation for FortiManager updates the specified ProfileRespmod Forward Rules.
// Returns the index value of the ProfileRespmod Forward Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIcapProfileRespmodForwardRules(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIcapProfileRespmodForwardRules API operation for FortiManager deletes the specified ProfileRespmod Forward Rules.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIcapProfileRespmodForwardRules(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIcapProfileRespmodForwardRules API operation for FortiManager gets the ProfileRespmod Forward Rules
// with the specified index value.
// Returns the requested ProfileRespmod Forward Rules value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIcapProfileRespmodForwardRules(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIcapProfileRespmodForwardRulesHeaderGroup API operation for FortiManager creates a new ProfileRespmod Forward RulesHeader Group.
// Returns the index value of the ProfileRespmod Forward RulesHeader Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIcapProfileRespmodForwardRulesHeaderGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules/{respmod-forward-rules}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIcapProfileRespmodForwardRulesHeaderGroup API operation for FortiManager updates the specified ProfileRespmod Forward RulesHeader Group.
// Returns the index value of the ProfileRespmod Forward RulesHeader Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIcapProfileRespmodForwardRulesHeaderGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules/{respmod-forward-rules}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIcapProfileRespmodForwardRulesHeaderGroup API operation for FortiManager deletes the specified ProfileRespmod Forward RulesHeader Group.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIcapProfileRespmodForwardRulesHeaderGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules/{respmod-forward-rules}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIcapProfileRespmodForwardRulesHeaderGroup API operation for FortiManager gets the ProfileRespmod Forward RulesHeader Group
// with the specified index value.
// Returns the requested ProfileRespmod Forward RulesHeader Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - profile respmod-forward-rules header-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIcapProfileRespmodForwardRulesHeaderGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/profile/{profile}/respmod-forward-rules/{respmod-forward-rules}/header-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIcapServer API operation for FortiManager creates a new Server.
// Returns the index value of the Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIcapServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIcapServer API operation for FortiManager updates the specified Server.
// Returns the index value of the Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIcapServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIcapServer API operation for FortiManager deletes the specified Server.
// Returns error for service API and SDK errors.
// See the object icap - server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIcapServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/icap/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIcapServer API operation for FortiManager gets the Server
// with the specified index value.
// Returns the requested Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object icap - server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIcapServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/icap/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIpsCustom API operation for FortiManager creates a new Custom.
// Returns the index value of the Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIpsCustom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIpsCustom API operation for FortiManager updates the specified Custom.
// Returns the index value of the Custom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIpsCustom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIpsCustom API operation for FortiManager deletes the specified Custom.
// Returns error for service API and SDK errors.
// See the object ips - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIpsCustom(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ips/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIpsCustom API operation for FortiManager gets the Custom
// with the specified index value.
// Returns the requested Custom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - custom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIpsCustom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/custom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIpsSensor API operation for FortiManager creates a new Sensor.
// Returns the index value of the Sensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIpsSensor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIpsSensor API operation for FortiManager updates the specified Sensor.
// Returns the index value of the Sensor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIpsSensor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIpsSensor API operation for FortiManager deletes the specified Sensor.
// Returns error for service API and SDK errors.
// See the object ips - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIpsSensor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIpsSensor API operation for FortiManager gets the Sensor
// with the specified index value.
// Returns the requested Sensor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIpsSensor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIpsSensorEntries API operation for FortiManager creates a new SensorEntries.
// Returns the index value of the SensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIpsSensorEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIpsSensorEntries API operation for FortiManager updates the specified SensorEntries.
// Returns the index value of the SensorEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIpsSensorEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIpsSensorEntries API operation for FortiManager deletes the specified SensorEntries.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIpsSensorEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIpsSensorEntries API operation for FortiManager gets the SensorEntries
// with the specified index value.
// Returns the requested SensorEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIpsSensorEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectIpsSensorEntriesExemptIp API operation for FortiManager creates a new SensorEntriesExempt Ip.
// Returns the index value of the SensorEntriesExempt Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectIpsSensorEntriesExemptIp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectIpsSensorEntriesExemptIp API operation for FortiManager updates the specified SensorEntriesExempt Ip.
// Returns the index value of the SensorEntriesExempt Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIpsSensorEntriesExemptIp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectIpsSensorEntriesExemptIp API operation for FortiManager deletes the specified SensorEntriesExempt Ip.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectIpsSensorEntriesExemptIp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectIpsSensorEntriesExemptIp API operation for FortiManager gets the SensorEntriesExempt Ip
// with the specified index value.
// Returns the requested SensorEntriesExempt Ip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries exempt-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIpsSensorEntriesExemptIp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries/{entries}/exempt-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectIpsSensorEntriesMove API operation for FortiManager updates the specified SensorEntriesMove.
// Returns the index value of the SensorEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectIpsSensorEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectIpsSensorEntriesMove API operation for FortiManager gets the SensorEntriesMove
// with the specified index value.
// Returns the requested SensorEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ips - sensor entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectIpsSensorEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/ips/sensor/{sensor}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectLogCustomField API operation for FortiManager creates a new Custom Field.
// Returns the index value of the Custom Field and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - custom-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectLogCustomField(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/custom-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectLogCustomField API operation for FortiManager updates the specified Custom Field.
// Returns the index value of the Custom Field and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - custom-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectLogCustomField(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/custom-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectLogCustomField API operation for FortiManager deletes the specified Custom Field.
// Returns error for service API and SDK errors.
// See the object log - custom-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectLogCustomField(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/log/custom-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectLogCustomField API operation for FortiManager gets the Custom Field
// with the specified index value.
// Returns the requested Custom Field value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - custom-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectLogCustomField(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/custom-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectLogNpuServer API operation for FortiManager updates the specified Npu Server.
// Returns the index value of the Npu Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectLogNpuServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectLogNpuServer API operation for FortiManager deletes the specified Npu Server.
// Returns error for service API and SDK errors.
// See the object log - npu-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectLogNpuServer(mkey string, paradict map[string]string) (err error) {

	//No unset API for object log - npu-server
	return
}

// ReadObjectLogNpuServer API operation for FortiManager gets the Npu Server
// with the specified index value.
// Returns the requested Npu Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectLogNpuServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectLogNpuServerServerGroup API operation for FortiManager creates a new Npu ServerServer Group.
// Returns the index value of the Npu ServerServer Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectLogNpuServerServerGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectLogNpuServerServerGroup API operation for FortiManager updates the specified Npu ServerServer Group.
// Returns the index value of the Npu ServerServer Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectLogNpuServerServerGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectLogNpuServerServerGroup API operation for FortiManager deletes the specified Npu ServerServer Group.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectLogNpuServerServerGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectLogNpuServerServerGroup API operation for FortiManager gets the Npu ServerServer Group
// with the specified index value.
// Returns the requested Npu ServerServer Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectLogNpuServerServerGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectLogNpuServerServerInfo API operation for FortiManager creates a new Npu ServerServer Info.
// Returns the index value of the Npu ServerServer Info and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectLogNpuServerServerInfo(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectLogNpuServerServerInfo API operation for FortiManager updates the specified Npu ServerServer Info.
// Returns the index value of the Npu ServerServer Info and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectLogNpuServerServerInfo(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectLogNpuServerServerInfo API operation for FortiManager deletes the specified Npu ServerServer Info.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectLogNpuServerServerInfo(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectLogNpuServerServerInfo API operation for FortiManager gets the Npu ServerServer Info
// with the specified index value.
// Returns the requested Npu ServerServer Info value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object log - npu-server server-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectLogNpuServerServerInfo(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/log/npu-server/server-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAccessList API operation for FortiManager creates a new Access List.
// Returns the index value of the Access List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAccessList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAccessList API operation for FortiManager updates the specified Access List.
// Returns the index value of the Access List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAccessList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAccessList API operation for FortiManager deletes the specified Access List.
// Returns error for service API and SDK errors.
// See the object router - access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAccessList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAccessList API operation for FortiManager gets the Access List
// with the specified index value.
// Returns the requested Access List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAccessList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAccessList6 API operation for FortiManager creates a new Access List6.
// Returns the index value of the Access List6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAccessList6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAccessList6 API operation for FortiManager updates the specified Access List6.
// Returns the index value of the Access List6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAccessList6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAccessList6 API operation for FortiManager deletes the specified Access List6.
// Returns error for service API and SDK errors.
// See the object router - access-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAccessList6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/access-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAccessList6 API operation for FortiManager gets the Access List6
// with the specified index value.
// Returns the requested Access List6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAccessList6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAccessList6Rule API operation for FortiManager creates a new Access List6Rule.
// Returns the index value of the Access List6Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAccessList6Rule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6/{access-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAccessList6Rule API operation for FortiManager updates the specified Access List6Rule.
// Returns the index value of the Access List6Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAccessList6Rule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6/{access-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAccessList6Rule API operation for FortiManager deletes the specified Access List6Rule.
// Returns error for service API and SDK errors.
// See the object router - access-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAccessList6Rule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/access-list6/{access-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAccessList6Rule API operation for FortiManager gets the Access List6Rule
// with the specified index value.
// Returns the requested Access List6Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAccessList6Rule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list6/{access-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAccessListRule API operation for FortiManager creates a new Access ListRule.
// Returns the index value of the Access ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAccessListRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list/{access-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAccessListRule API operation for FortiManager updates the specified Access ListRule.
// Returns the index value of the Access ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAccessListRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list/{access-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAccessListRule API operation for FortiManager deletes the specified Access ListRule.
// Returns error for service API and SDK errors.
// See the object router - access-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAccessListRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/access-list/{access-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAccessListRule API operation for FortiManager gets the Access ListRule
// with the specified index value.
// Returns the requested Access ListRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - access-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAccessListRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/access-list/{access-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAspathList API operation for FortiManager creates a new Aspath List.
// Returns the index value of the Aspath List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAspathList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAspathList API operation for FortiManager updates the specified Aspath List.
// Returns the index value of the Aspath List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAspathList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAspathList API operation for FortiManager deletes the specified Aspath List.
// Returns error for service API and SDK errors.
// See the object router - aspath-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAspathList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/aspath-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAspathList API operation for FortiManager gets the Aspath List
// with the specified index value.
// Returns the requested Aspath List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAspathList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterAspathListRule API operation for FortiManager creates a new Aspath ListRule.
// Returns the index value of the Aspath ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterAspathListRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list/{aspath-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterAspathListRule API operation for FortiManager updates the specified Aspath ListRule.
// Returns the index value of the Aspath ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterAspathListRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list/{aspath-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterAspathListRule API operation for FortiManager deletes the specified Aspath ListRule.
// Returns error for service API and SDK errors.
// See the object router - aspath-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterAspathListRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/aspath-list/{aspath-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterAspathListRule API operation for FortiManager gets the Aspath ListRule
// with the specified index value.
// Returns the requested Aspath ListRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - aspath-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterAspathListRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/aspath-list/{aspath-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterCommunityList API operation for FortiManager creates a new Community List.
// Returns the index value of the Community List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterCommunityList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterCommunityList API operation for FortiManager updates the specified Community List.
// Returns the index value of the Community List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterCommunityList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterCommunityList API operation for FortiManager deletes the specified Community List.
// Returns error for service API and SDK errors.
// See the object router - community-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterCommunityList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/community-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterCommunityList API operation for FortiManager gets the Community List
// with the specified index value.
// Returns the requested Community List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterCommunityList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterCommunityListRule API operation for FortiManager creates a new Community ListRule.
// Returns the index value of the Community ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterCommunityListRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list/{community-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterCommunityListRule API operation for FortiManager updates the specified Community ListRule.
// Returns the index value of the Community ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterCommunityListRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list/{community-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterCommunityListRule API operation for FortiManager deletes the specified Community ListRule.
// Returns error for service API and SDK errors.
// See the object router - community-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterCommunityListRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/community-list/{community-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterCommunityListRule API operation for FortiManager gets the Community ListRule
// with the specified index value.
// Returns the requested Community ListRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - community-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterCommunityListRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/community-list/{community-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterPrefixList API operation for FortiManager creates a new Prefix List.
// Returns the index value of the Prefix List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterPrefixList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterPrefixList API operation for FortiManager updates the specified Prefix List.
// Returns the index value of the Prefix List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterPrefixList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterPrefixList API operation for FortiManager deletes the specified Prefix List.
// Returns error for service API and SDK errors.
// See the object router - prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterPrefixList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterPrefixList API operation for FortiManager gets the Prefix List
// with the specified index value.
// Returns the requested Prefix List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterPrefixList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterPrefixList6 API operation for FortiManager creates a new Prefix List6.
// Returns the index value of the Prefix List6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterPrefixList6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterPrefixList6 API operation for FortiManager updates the specified Prefix List6.
// Returns the index value of the Prefix List6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterPrefixList6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterPrefixList6 API operation for FortiManager deletes the specified Prefix List6.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterPrefixList6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterPrefixList6 API operation for FortiManager gets the Prefix List6
// with the specified index value.
// Returns the requested Prefix List6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterPrefixList6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterPrefixList6Rule API operation for FortiManager creates a new Prefix List6Rule.
// Returns the index value of the Prefix List6Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterPrefixList6Rule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6/{prefix-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterPrefixList6Rule API operation for FortiManager updates the specified Prefix List6Rule.
// Returns the index value of the Prefix List6Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterPrefixList6Rule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6/{prefix-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterPrefixList6Rule API operation for FortiManager deletes the specified Prefix List6Rule.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterPrefixList6Rule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6/{prefix-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterPrefixList6Rule API operation for FortiManager gets the Prefix List6Rule
// with the specified index value.
// Returns the requested Prefix List6Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list6 rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterPrefixList6Rule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list6/{prefix-list6}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterPrefixListRule API operation for FortiManager creates a new Prefix ListRule.
// Returns the index value of the Prefix ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterPrefixListRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list/{prefix-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterPrefixListRule API operation for FortiManager updates the specified Prefix ListRule.
// Returns the index value of the Prefix ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterPrefixListRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list/{prefix-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterPrefixListRule API operation for FortiManager deletes the specified Prefix ListRule.
// Returns error for service API and SDK errors.
// See the object router - prefix-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterPrefixListRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/prefix-list/{prefix-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterPrefixListRule API operation for FortiManager gets the Prefix ListRule
// with the specified index value.
// Returns the requested Prefix ListRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - prefix-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterPrefixListRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/prefix-list/{prefix-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterRouteMap API operation for FortiManager creates a new Route Map.
// Returns the index value of the Route Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterRouteMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterRouteMap API operation for FortiManager updates the specified Route Map.
// Returns the index value of the Route Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterRouteMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterRouteMap API operation for FortiManager deletes the specified Route Map.
// Returns error for service API and SDK errors.
// See the object router - route-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterRouteMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/route-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterRouteMap API operation for FortiManager gets the Route Map
// with the specified index value.
// Returns the requested Route Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterRouteMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectRouterRouteMapRule API operation for FortiManager creates a new Route MapRule.
// Returns the index value of the Route MapRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectRouterRouteMapRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map/{route-map}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectRouterRouteMapRule API operation for FortiManager updates the specified Route MapRule.
// Returns the index value of the Route MapRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectRouterRouteMapRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map/{route-map}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectRouterRouteMapRule API operation for FortiManager deletes the specified Route MapRule.
// Returns error for service API and SDK errors.
// See the object router - route-map rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectRouterRouteMapRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/router/route-map/{route-map}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectRouterRouteMapRule API operation for FortiManager gets the Route MapRule
// with the specified index value.
// Returns the requested Route MapRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object router - route-map rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectRouterRouteMapRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/router/route-map/{route-map}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSctpFilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSctpFilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSctpFilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSctpFilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSctpFilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSctpFilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSctpFilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSctpFilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSctpFilterProfilePpidFilters API operation for FortiManager creates a new ProfilePpid Filters.
// Returns the index value of the ProfilePpid Filters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile ppid-filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSctpFilterProfilePpidFilters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile/{profile}/ppid-filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSctpFilterProfilePpidFilters API operation for FortiManager updates the specified ProfilePpid Filters.
// Returns the index value of the ProfilePpid Filters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile ppid-filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSctpFilterProfilePpidFilters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile/{profile}/ppid-filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSctpFilterProfilePpidFilters API operation for FortiManager deletes the specified ProfilePpid Filters.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile ppid-filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSctpFilterProfilePpidFilters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile/{profile}/ppid-filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSctpFilterProfilePpidFilters API operation for FortiManager gets the ProfilePpid Filters
// with the specified index value.
// Returns the requested ProfilePpid Filters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object sctp-filter - profile ppid-filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSctpFilterProfilePpidFilters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/sctp-filter/profile/{profile}/ppid-filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterBwl API operation for FortiManager creates a new Bwl.
// Returns the index value of the Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterBwl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterBwl API operation for FortiManager updates the specified Bwl.
// Returns the index value of the Bwl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterBwl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterBwl API operation for FortiManager deletes the specified Bwl.
// Returns error for service API and SDK errors.
// See the object spamfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterBwl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterBwl API operation for FortiManager gets the Bwl
// with the specified index value.
// Returns the requested Bwl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bwl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterBwl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bwl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterBword API operation for FortiManager creates a new Bword.
// Returns the index value of the Bword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterBword(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterBword API operation for FortiManager updates the specified Bword.
// Returns the index value of the Bword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterBword(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterBword API operation for FortiManager deletes the specified Bword.
// Returns error for service API and SDK errors.
// See the object spamfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterBword(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterBword API operation for FortiManager gets the Bword
// with the specified index value.
// Returns the requested Bword value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - bword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterBword(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/bword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterDnsbl API operation for FortiManager creates a new Dnsbl.
// Returns the index value of the Dnsbl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterDnsbl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterDnsbl API operation for FortiManager updates the specified Dnsbl.
// Returns the index value of the Dnsbl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterDnsbl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterDnsbl API operation for FortiManager deletes the specified Dnsbl.
// Returns error for service API and SDK errors.
// See the object spamfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterDnsbl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterDnsbl API operation for FortiManager gets the Dnsbl
// with the specified index value.
// Returns the requested Dnsbl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - dnsbl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterDnsbl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/dnsbl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterIptrust API operation for FortiManager creates a new Iptrust.
// Returns the index value of the Iptrust and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterIptrust(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterIptrust API operation for FortiManager updates the specified Iptrust.
// Returns the index value of the Iptrust and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterIptrust(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterIptrust API operation for FortiManager deletes the specified Iptrust.
// Returns error for service API and SDK errors.
// See the object spamfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterIptrust(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterIptrust API operation for FortiManager gets the Iptrust
// with the specified index value.
// Returns the requested Iptrust value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - iptrust chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterIptrust(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/iptrust"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterMheader API operation for FortiManager creates a new Mheader.
// Returns the index value of the Mheader and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterMheader(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterMheader API operation for FortiManager updates the specified Mheader.
// Returns the index value of the Mheader and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterMheader(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterMheader API operation for FortiManager deletes the specified Mheader.
// Returns error for service API and SDK errors.
// See the object spamfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterMheader(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterMheader API operation for FortiManager gets the Mheader
// with the specified index value.
// Returns the requested Mheader value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - mheader chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterMheader(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/mheader"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSpamfilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSpamfilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSpamfilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSpamfilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSpamfilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object spamfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSpamfilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/spamfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSpamfilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object spamfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSpamfilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/spamfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSshFilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSshFilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSshFilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSshFilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSshFilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSshFilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSshFilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSshFilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSshFilterProfileShellCommands API operation for FortiManager creates a new ProfileShell Commands.
// Returns the index value of the ProfileShell Commands and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSshFilterProfileShellCommands(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSshFilterProfileShellCommands API operation for FortiManager updates the specified ProfileShell Commands.
// Returns the index value of the ProfileShell Commands and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSshFilterProfileShellCommands(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSshFilterProfileShellCommands API operation for FortiManager deletes the specified ProfileShell Commands.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSshFilterProfileShellCommands(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSshFilterProfileShellCommands API operation for FortiManager gets the ProfileShell Commands
// with the specified index value.
// Returns the requested ProfileShell Commands value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSshFilterProfileShellCommands(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSshFilterProfileShellCommandsMove API operation for FortiManager updates the specified ProfileShell CommandsMove.
// Returns the index value of the ProfileShell CommandsMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSshFilterProfileShellCommandsMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands/{shell-commands}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSshFilterProfileShellCommandsMove API operation for FortiManager gets the ProfileShell CommandsMove
// with the specified index value.
// Returns the requested ProfileShell CommandsMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object ssh-filter - profile shell-commands move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSshFilterProfileShellCommandsMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/ssh-filter/profile/{profile}/shell-commands"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSwitchControllerAclGroup API operation for FortiManager creates a new AclGroup.
// Returns the index value of the AclGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerAclGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerAclGroup API operation for FortiManager updates the specified AclGroup.
// Returns the index value of the AclGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerAclGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerAclGroup API operation for FortiManager deletes the specified AclGroup.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerAclGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerAclGroup API operation for FortiManager gets the AclGroup
// with the specified index value.
// Returns the requested AclGroup value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerAclGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerAclIngress API operation for FortiManager creates a new AclIngress.
// Returns the index value of the AclIngress and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerAclIngress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerAclIngress API operation for FortiManager updates the specified AclIngress.
// Returns the index value of the AclIngress and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerAclIngress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerAclIngress API operation for FortiManager deletes the specified AclIngress.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerAclIngress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerAclIngress API operation for FortiManager gets the AclIngress
// with the specified index value.
// Returns the requested AclIngress value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerAclIngress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSwitchControllerAclIngressAction API operation for FortiManager updates the specified AclIngressAction.
// Returns the index value of the AclIngressAction and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress action chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerAclIngressAction(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress/{ingress}/action"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerAclIngressAction API operation for FortiManager deletes the specified AclIngressAction.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress action chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerAclIngressAction(mkey string, paradict map[string]string) (err error) {

	//No unset API for object switch-controller - acl ingress action
	return
}

// ReadObjectSwitchControllerAclIngressAction API operation for FortiManager gets the AclIngressAction
// with the specified index value.
// Returns the requested AclIngressAction value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress action chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerAclIngressAction(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress/{ingress}/action"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSwitchControllerAclIngressClassifier API operation for FortiManager updates the specified AclIngressClassifier.
// Returns the index value of the AclIngressClassifier and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress classifier chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerAclIngressClassifier(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress/{ingress}/classifier"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerAclIngressClassifier API operation for FortiManager deletes the specified AclIngressClassifier.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress classifier chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerAclIngressClassifier(mkey string, paradict map[string]string) (err error) {

	//No unset API for object switch-controller - acl ingress classifier
	return
}

// ReadObjectSwitchControllerAclIngressClassifier API operation for FortiManager gets the AclIngressClassifier
// with the specified index value.
// Returns the requested AclIngressClassifier value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - acl ingress classifier chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerAclIngressClassifier(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/acl/ingress/{ingress}/classifier"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerCustomCommand API operation for FortiManager creates a new Custom Command.
// Returns the index value of the Custom Command and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerCustomCommand(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerCustomCommand API operation for FortiManager updates the specified Custom Command.
// Returns the index value of the Custom Command and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerCustomCommand(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerCustomCommand API operation for FortiManager deletes the specified Custom Command.
// Returns error for service API and SDK errors.
// See the object switch-controller - custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerCustomCommand(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerCustomCommand API operation for FortiManager gets the Custom Command
// with the specified index value.
// Returns the requested Custom Command value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerCustomCommand(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerDslPolicy API operation for FortiManager creates a new DslPolicy.
// Returns the index value of the DslPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dsl policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerDslPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dsl/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerDslPolicy API operation for FortiManager updates the specified DslPolicy.
// Returns the index value of the DslPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dsl policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerDslPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dsl/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerDslPolicy API operation for FortiManager deletes the specified DslPolicy.
// Returns error for service API and SDK errors.
// See the object switch-controller - dsl policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerDslPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/dsl/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerDslPolicy API operation for FortiManager gets the DslPolicy
// with the specified index value.
// Returns the requested DslPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dsl policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerDslPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dsl/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerDynamicPortPolicy API operation for FortiManager creates a new Dynamic Port Policy.
// Returns the index value of the Dynamic Port Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerDynamicPortPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerDynamicPortPolicy API operation for FortiManager updates the specified Dynamic Port Policy.
// Returns the index value of the Dynamic Port Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerDynamicPortPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerDynamicPortPolicy API operation for FortiManager deletes the specified Dynamic Port Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerDynamicPortPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerDynamicPortPolicy API operation for FortiManager gets the Dynamic Port Policy
// with the specified index value.
// Returns the requested Dynamic Port Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerDynamicPortPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerDynamicPortPolicyPolicy API operation for FortiManager creates a new Dynamic Port PolicyPolicy.
// Returns the index value of the Dynamic Port PolicyPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerDynamicPortPolicyPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerDynamicPortPolicyPolicy API operation for FortiManager updates the specified Dynamic Port PolicyPolicy.
// Returns the index value of the Dynamic Port PolicyPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerDynamicPortPolicyPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerDynamicPortPolicyPolicy API operation for FortiManager deletes the specified Dynamic Port PolicyPolicy.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerDynamicPortPolicyPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerDynamicPortPolicyPolicy API operation for FortiManager gets the Dynamic Port PolicyPolicy
// with the specified index value.
// Returns the requested Dynamic Port PolicyPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerDynamicPortPolicyPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSwitchControllerDynamicPortPolicyPolicyMove API operation for FortiManager updates the specified Dynamic Port PolicyPolicyMove.
// Returns the index value of the Dynamic Port PolicyPolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerDynamicPortPolicyPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy/{policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSwitchControllerDynamicPortPolicyPolicyMove API operation for FortiManager gets the Dynamic Port PolicyPolicyMove
// with the specified index value.
// Returns the requested Dynamic Port PolicyPolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - dynamic-port-policy policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerDynamicPortPolicyPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/dynamic-port-policy/{dynamic-port-policy}/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSwitchControllerFortilinkSettings API operation for FortiManager creates a new Fortilink Settings.
// Returns the index value of the Fortilink Settings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerFortilinkSettings(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerFortilinkSettings API operation for FortiManager updates the specified Fortilink Settings.
// Returns the index value of the Fortilink Settings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerFortilinkSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerFortilinkSettings API operation for FortiManager deletes the specified Fortilink Settings.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerFortilinkSettings(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerFortilinkSettings API operation for FortiManager gets the Fortilink Settings
// with the specified index value.
// Returns the requested Fortilink Settings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerFortilinkSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSwitchControllerFortilinkSettingsNacPorts API operation for FortiManager updates the specified Fortilink SettingsNac Ports.
// Returns the index value of the Fortilink SettingsNac Ports and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings nac-ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerFortilinkSettingsNacPorts(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings/{fortilink-settings}/nac-ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerFortilinkSettingsNacPorts API operation for FortiManager deletes the specified Fortilink SettingsNac Ports.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings nac-ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerFortilinkSettingsNacPorts(mkey string, paradict map[string]string) (err error) {

	//No unset API for object switch-controller - fortilink-settings nac-ports
	return
}

// ReadObjectSwitchControllerFortilinkSettingsNacPorts API operation for FortiManager gets the Fortilink SettingsNac Ports
// with the specified index value.
// Returns the requested Fortilink SettingsNac Ports value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - fortilink-settings nac-ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerFortilinkSettingsNacPorts(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/fortilink-settings/{fortilink-settings}/nac-ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerLldpProfile API operation for FortiManager creates a new Lldp Profile.
// Returns the index value of the Lldp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerLldpProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerLldpProfile API operation for FortiManager updates the specified Lldp Profile.
// Returns the index value of the Lldp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerLldpProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerLldpProfile API operation for FortiManager deletes the specified Lldp Profile.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerLldpProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerLldpProfile API operation for FortiManager gets the Lldp Profile
// with the specified index value.
// Returns the requested Lldp Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerLldpProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerLldpProfileCustomTlvs API operation for FortiManager creates a new Lldp ProfileCustom Tlvs.
// Returns the index value of the Lldp ProfileCustom Tlvs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile custom-tlvs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerLldpProfileCustomTlvs(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile/{lldp-profile}/custom-tlvs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerLldpProfileCustomTlvs API operation for FortiManager updates the specified Lldp ProfileCustom Tlvs.
// Returns the index value of the Lldp ProfileCustom Tlvs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile custom-tlvs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerLldpProfileCustomTlvs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile/{lldp-profile}/custom-tlvs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerLldpProfileCustomTlvs API operation for FortiManager deletes the specified Lldp ProfileCustom Tlvs.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile custom-tlvs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerLldpProfileCustomTlvs(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile/{lldp-profile}/custom-tlvs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerLldpProfileCustomTlvs API operation for FortiManager gets the Lldp ProfileCustom Tlvs
// with the specified index value.
// Returns the requested Lldp ProfileCustom Tlvs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - lldp-profile custom-tlvs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerLldpProfileCustomTlvs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/lldp-profile/{lldp-profile}/custom-tlvs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerMacPolicy API operation for FortiManager creates a new Mac Policy.
// Returns the index value of the Mac Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - mac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerMacPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/mac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerMacPolicy API operation for FortiManager updates the specified Mac Policy.
// Returns the index value of the Mac Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - mac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerMacPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/mac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerMacPolicy API operation for FortiManager deletes the specified Mac Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - mac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerMacPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/mac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerMacPolicy API operation for FortiManager gets the Mac Policy
// with the specified index value.
// Returns the requested Mac Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - mac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerMacPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/mac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitch API operation for FortiManager creates a new Managed Switch.
// Returns the index value of the Managed Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitch(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitch API operation for FortiManager updates the specified Managed Switch.
// Returns the index value of the Managed Switch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitch API operation for FortiManager deletes the specified Managed Switch.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitch(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitch API operation for FortiManager gets the Managed Switch
// with the specified index value.
// Returns the requested Managed Switch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitchCustomCommand API operation for FortiManager creates a new Managed SwitchCustom Command.
// Returns the index value of the Managed SwitchCustom Command and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitchCustomCommand(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitchCustomCommand API operation for FortiManager updates the specified Managed SwitchCustom Command.
// Returns the index value of the Managed SwitchCustom Command and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitchCustomCommand(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitchCustomCommand API operation for FortiManager deletes the specified Managed SwitchCustom Command.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitchCustomCommand(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitchCustomCommand API operation for FortiManager gets the Managed SwitchCustom Command
// with the specified index value.
// Returns the requested Managed SwitchCustom Command value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch custom-command chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitchCustomCommand(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/custom-command"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient API operation for FortiManager creates a new Managed SwitchDhcp Snooping Static Client.
// Returns the index value of the Managed SwitchDhcp Snooping Static Client and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch dhcp-snooping-static-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/dhcp-snooping-static-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient API operation for FortiManager updates the specified Managed SwitchDhcp Snooping Static Client.
// Returns the index value of the Managed SwitchDhcp Snooping Static Client and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch dhcp-snooping-static-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/dhcp-snooping-static-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient API operation for FortiManager deletes the specified Managed SwitchDhcp Snooping Static Client.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch dhcp-snooping-static-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/dhcp-snooping-static-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient API operation for FortiManager gets the Managed SwitchDhcp Snooping Static Client
// with the specified index value.
// Returns the requested Managed SwitchDhcp Snooping Static Client value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch dhcp-snooping-static-client chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitchDhcpSnoopingStaticClient(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/dhcp-snooping-static-client"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitchPorts API operation for FortiManager creates a new Managed SwitchPorts.
// Returns the index value of the Managed SwitchPorts and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitchPorts(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitchPorts API operation for FortiManager updates the specified Managed SwitchPorts.
// Returns the index value of the Managed SwitchPorts and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitchPorts(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitchPorts API operation for FortiManager deletes the specified Managed SwitchPorts.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitchPorts(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitchPorts API operation for FortiManager gets the Managed SwitchPorts
// with the specified index value.
// Returns the requested Managed SwitchPorts value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch ports chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitchPorts(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/ports"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitchRouteOffloadRouter API operation for FortiManager creates a new Managed SwitchRoute Offload Router.
// Returns the index value of the Managed SwitchRoute Offload Router and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch route-offload-router chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitchRouteOffloadRouter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/route-offload-router"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitchRouteOffloadRouter API operation for FortiManager updates the specified Managed SwitchRoute Offload Router.
// Returns the index value of the Managed SwitchRoute Offload Router and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch route-offload-router chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitchRouteOffloadRouter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/route-offload-router"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitchRouteOffloadRouter API operation for FortiManager deletes the specified Managed SwitchRoute Offload Router.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch route-offload-router chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitchRouteOffloadRouter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/route-offload-router"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitchRouteOffloadRouter API operation for FortiManager gets the Managed SwitchRoute Offload Router
// with the specified index value.
// Returns the requested Managed SwitchRoute Offload Router value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch route-offload-router chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitchRouteOffloadRouter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/route-offload-router"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerManagedSwitchVlan API operation for FortiManager creates a new Managed SwitchVlan.
// Returns the index value of the Managed SwitchVlan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerManagedSwitchVlan(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerManagedSwitchVlan API operation for FortiManager updates the specified Managed SwitchVlan.
// Returns the index value of the Managed SwitchVlan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerManagedSwitchVlan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerManagedSwitchVlan API operation for FortiManager deletes the specified Managed SwitchVlan.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerManagedSwitchVlan(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerManagedSwitchVlan API operation for FortiManager gets the Managed SwitchVlan
// with the specified index value.
// Returns the requested Managed SwitchVlan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - managed-switch vlan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerManagedSwitchVlan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/managed-switch/{managed-switch}/vlan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerPtpProfile API operation for FortiManager creates a new PtpProfile.
// Returns the index value of the PtpProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - ptp profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerPtpProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/ptp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerPtpProfile API operation for FortiManager updates the specified PtpProfile.
// Returns the index value of the PtpProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - ptp profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerPtpProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/ptp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerPtpProfile API operation for FortiManager deletes the specified PtpProfile.
// Returns error for service API and SDK errors.
// See the object switch-controller - ptp profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerPtpProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/ptp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerPtpProfile API operation for FortiManager gets the PtpProfile
// with the specified index value.
// Returns the requested PtpProfile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - ptp profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerPtpProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/ptp/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosDot1PMap API operation for FortiManager creates a new QosDot1P Map.
// Returns the index value of the QosDot1P Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos dot1p-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosDot1PMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/dot1p-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosDot1PMap API operation for FortiManager updates the specified QosDot1P Map.
// Returns the index value of the QosDot1P Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos dot1p-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosDot1PMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/dot1p-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosDot1PMap API operation for FortiManager deletes the specified QosDot1P Map.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos dot1p-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosDot1PMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/dot1p-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosDot1PMap API operation for FortiManager gets the QosDot1P Map
// with the specified index value.
// Returns the requested QosDot1P Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos dot1p-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosDot1PMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/dot1p-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosIpDscpMap API operation for FortiManager creates a new QosIp Dscp Map.
// Returns the index value of the QosIp Dscp Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosIpDscpMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosIpDscpMap API operation for FortiManager updates the specified QosIp Dscp Map.
// Returns the index value of the QosIp Dscp Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosIpDscpMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosIpDscpMap API operation for FortiManager deletes the specified QosIp Dscp Map.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosIpDscpMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosIpDscpMap API operation for FortiManager gets the QosIp Dscp Map
// with the specified index value.
// Returns the requested QosIp Dscp Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosIpDscpMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosIpDscpMapMap API operation for FortiManager creates a new QosIp Dscp MapMap.
// Returns the index value of the QosIp Dscp MapMap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosIpDscpMapMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map/{ip-dscp-map}/map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosIpDscpMapMap API operation for FortiManager updates the specified QosIp Dscp MapMap.
// Returns the index value of the QosIp Dscp MapMap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosIpDscpMapMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map/{ip-dscp-map}/map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosIpDscpMapMap API operation for FortiManager deletes the specified QosIp Dscp MapMap.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosIpDscpMapMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map/{ip-dscp-map}/map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosIpDscpMapMap API operation for FortiManager gets the QosIp Dscp MapMap
// with the specified index value.
// Returns the requested QosIp Dscp MapMap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos ip-dscp-map map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosIpDscpMapMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/ip-dscp-map/{ip-dscp-map}/map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosQosPolicy API operation for FortiManager creates a new QosQos Policy.
// Returns the index value of the QosQos Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos qos-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosQosPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/qos-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosQosPolicy API operation for FortiManager updates the specified QosQos Policy.
// Returns the index value of the QosQos Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos qos-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosQosPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/qos-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosQosPolicy API operation for FortiManager deletes the specified QosQos Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos qos-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosQosPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/qos-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosQosPolicy API operation for FortiManager gets the QosQos Policy
// with the specified index value.
// Returns the requested QosQos Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos qos-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosQosPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/qos-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosQueuePolicy API operation for FortiManager creates a new QosQueue Policy.
// Returns the index value of the QosQueue Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosQueuePolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosQueuePolicy API operation for FortiManager updates the specified QosQueue Policy.
// Returns the index value of the QosQueue Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosQueuePolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosQueuePolicy API operation for FortiManager deletes the specified QosQueue Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosQueuePolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosQueuePolicy API operation for FortiManager gets the QosQueue Policy
// with the specified index value.
// Returns the requested QosQueue Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosQueuePolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerQosQueuePolicyCosQueue API operation for FortiManager creates a new QosQueue PolicyCos Queue.
// Returns the index value of the QosQueue PolicyCos Queue and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy cos-queue chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerQosQueuePolicyCosQueue(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy/{queue-policy}/cos-queue"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerQosQueuePolicyCosQueue API operation for FortiManager updates the specified QosQueue PolicyCos Queue.
// Returns the index value of the QosQueue PolicyCos Queue and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy cos-queue chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerQosQueuePolicyCosQueue(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy/{queue-policy}/cos-queue"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerQosQueuePolicyCosQueue API operation for FortiManager deletes the specified QosQueue PolicyCos Queue.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy cos-queue chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerQosQueuePolicyCosQueue(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy/{queue-policy}/cos-queue"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerQosQueuePolicyCosQueue API operation for FortiManager gets the QosQueue PolicyCos Queue
// with the specified index value.
// Returns the requested QosQueue PolicyCos Queue value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - qos queue-policy cos-queue chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerQosQueuePolicyCosQueue(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/qos/queue-policy/{queue-policy}/cos-queue"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerSecurityPolicy8021X API operation for FortiManager creates a new Security Policy802 1X.
// Returns the index value of the Security Policy802 1X and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - security-policy 802-1X chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerSecurityPolicy8021X(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/security-policy/802-1X"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerSecurityPolicy8021X API operation for FortiManager updates the specified Security Policy802 1X.
// Returns the index value of the Security Policy802 1X and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - security-policy 802-1X chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerSecurityPolicy8021X(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/security-policy/802-1X"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerSecurityPolicy8021X API operation for FortiManager deletes the specified Security Policy802 1X.
// Returns error for service API and SDK errors.
// See the object switch-controller - security-policy 802-1X chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerSecurityPolicy8021X(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/security-policy/802-1X"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerSecurityPolicy8021X API operation for FortiManager gets the Security Policy802 1X
// with the specified index value.
// Returns the requested Security Policy802 1X value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - security-policy 802-1X chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerSecurityPolicy8021X(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/security-policy/802-1X"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerSwitchInterfaceTag API operation for FortiManager creates a new Switch Interface Tag.
// Returns the index value of the Switch Interface Tag and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - switch-interface-tag chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerSwitchInterfaceTag(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/switch-interface-tag"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerSwitchInterfaceTag API operation for FortiManager updates the specified Switch Interface Tag.
// Returns the index value of the Switch Interface Tag and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - switch-interface-tag chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerSwitchInterfaceTag(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/switch-interface-tag"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerSwitchInterfaceTag API operation for FortiManager deletes the specified Switch Interface Tag.
// Returns error for service API and SDK errors.
// See the object switch-controller - switch-interface-tag chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerSwitchInterfaceTag(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/switch-interface-tag"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerSwitchInterfaceTag API operation for FortiManager gets the Switch Interface Tag
// with the specified index value.
// Returns the requested Switch Interface Tag value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - switch-interface-tag chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerSwitchInterfaceTag(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/switch-interface-tag"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerTrafficPolicy API operation for FortiManager creates a new Traffic Policy.
// Returns the index value of the Traffic Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - traffic-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerTrafficPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/traffic-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerTrafficPolicy API operation for FortiManager updates the specified Traffic Policy.
// Returns the index value of the Traffic Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - traffic-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerTrafficPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/traffic-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerTrafficPolicy API operation for FortiManager deletes the specified Traffic Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - traffic-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerTrafficPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/traffic-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerTrafficPolicy API operation for FortiManager gets the Traffic Policy
// with the specified index value.
// Returns the requested Traffic Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - traffic-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerTrafficPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/traffic-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSwitchControllerVlanPolicy API operation for FortiManager creates a new Vlan Policy.
// Returns the index value of the Vlan Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - vlan-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSwitchControllerVlanPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/vlan-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSwitchControllerVlanPolicy API operation for FortiManager updates the specified Vlan Policy.
// Returns the index value of the Vlan Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - vlan-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSwitchControllerVlanPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/vlan-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSwitchControllerVlanPolicy API operation for FortiManager deletes the specified Vlan Policy.
// Returns error for service API and SDK errors.
// See the object switch-controller - vlan-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSwitchControllerVlanPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/switch-controller/vlan-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSwitchControllerVlanPolicy API operation for FortiManager gets the Vlan Policy
// with the specified index value.
// Returns the requested Vlan Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object switch-controller - vlan-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSwitchControllerVlanPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/switch-controller/vlan-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemCustomLanguage API operation for FortiManager creates a new Custom Language.
// Returns the index value of the Custom Language and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - custom-language chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemCustomLanguage(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/custom-language"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemCustomLanguage API operation for FortiManager updates the specified Custom Language.
// Returns the index value of the Custom Language and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - custom-language chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemCustomLanguage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/custom-language"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemCustomLanguage API operation for FortiManager deletes the specified Custom Language.
// Returns error for service API and SDK errors.
// See the object system - custom-language chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemCustomLanguage(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/custom-language"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemCustomLanguage API operation for FortiManager gets the Custom Language
// with the specified index value.
// Returns the requested Custom Language value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - custom-language chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemCustomLanguage(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/custom-language"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemDhcpServer API operation for FortiManager creates a new DhcpServer.
// Returns the index value of the DhcpServer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemDhcpServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemDhcpServer API operation for FortiManager updates the specified DhcpServer.
// Returns the index value of the DhcpServer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemDhcpServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemDhcpServer API operation for FortiManager deletes the specified DhcpServer.
// Returns error for service API and SDK errors.
// See the object system - dhcp server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemDhcpServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemDhcpServer API operation for FortiManager gets the DhcpServer
// with the specified index value.
// Returns the requested DhcpServer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemDhcpServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemDhcpServerExcludeRange API operation for FortiManager creates a new DhcpServerExclude Range.
// Returns the index value of the DhcpServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemDhcpServerExcludeRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemDhcpServerExcludeRange API operation for FortiManager updates the specified DhcpServerExclude Range.
// Returns the index value of the DhcpServerExclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemDhcpServerExcludeRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemDhcpServerExcludeRange API operation for FortiManager deletes the specified DhcpServerExclude Range.
// Returns error for service API and SDK errors.
// See the object system - dhcp server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemDhcpServerExcludeRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemDhcpServerExcludeRange API operation for FortiManager gets the DhcpServerExclude Range
// with the specified index value.
// Returns the requested DhcpServerExclude Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemDhcpServerExcludeRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemDhcpServerIpRange API operation for FortiManager creates a new DhcpServerIp Range.
// Returns the index value of the DhcpServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemDhcpServerIpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemDhcpServerIpRange API operation for FortiManager updates the specified DhcpServerIp Range.
// Returns the index value of the DhcpServerIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemDhcpServerIpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemDhcpServerIpRange API operation for FortiManager deletes the specified DhcpServerIp Range.
// Returns error for service API and SDK errors.
// See the object system - dhcp server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemDhcpServerIpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemDhcpServerIpRange API operation for FortiManager gets the DhcpServerIp Range
// with the specified index value.
// Returns the requested DhcpServerIp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemDhcpServerIpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemDhcpServerOptions API operation for FortiManager creates a new DhcpServerOptions.
// Returns the index value of the DhcpServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemDhcpServerOptions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemDhcpServerOptions API operation for FortiManager updates the specified DhcpServerOptions.
// Returns the index value of the DhcpServerOptions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemDhcpServerOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemDhcpServerOptions API operation for FortiManager deletes the specified DhcpServerOptions.
// Returns error for service API and SDK errors.
// See the object system - dhcp server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemDhcpServerOptions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemDhcpServerOptions API operation for FortiManager gets the DhcpServerOptions
// with the specified index value.
// Returns the requested DhcpServerOptions value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemDhcpServerOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemDhcpServerReservedAddress API operation for FortiManager creates a new DhcpServerReserved Address.
// Returns the index value of the DhcpServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemDhcpServerReservedAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemDhcpServerReservedAddress API operation for FortiManager updates the specified DhcpServerReserved Address.
// Returns the index value of the DhcpServerReserved Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemDhcpServerReservedAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemDhcpServerReservedAddress API operation for FortiManager deletes the specified DhcpServerReserved Address.
// Returns error for service API and SDK errors.
// See the object system - dhcp server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemDhcpServerReservedAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemDhcpServerReservedAddress API operation for FortiManager gets the DhcpServerReserved Address
// with the specified index value.
// Returns the requested DhcpServerReserved Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - dhcp server reserved-address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemDhcpServerReservedAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/dhcp/server/{server}/reserved-address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemExternalResource API operation for FortiManager creates a new External Resource.
// Returns the index value of the External Resource and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - external-resource chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemExternalResource(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/external-resource"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemExternalResource API operation for FortiManager updates the specified External Resource.
// Returns the index value of the External Resource and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - external-resource chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemExternalResource(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/external-resource"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemExternalResource API operation for FortiManager deletes the specified External Resource.
// Returns error for service API and SDK errors.
// See the object system - external-resource chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemExternalResource(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/external-resource"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemExternalResource API operation for FortiManager gets the External Resource
// with the specified index value.
// Returns the requested External Resource value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - external-resource chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemExternalResource(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/external-resource"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemExternalResourceMove API operation for FortiManager updates the specified External ResourceMove.
// Returns the index value of the External ResourceMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - external-resource move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemExternalResourceMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/external-resource/{external-resource}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemExternalResourceMove API operation for FortiManager gets the External ResourceMove
// with the specified index value.
// Returns the requested External ResourceMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - external-resource move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemExternalResourceMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/external-resource"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectSystemFortiguard API operation for FortiManager updates the specified Fortiguard.
// Returns the index value of the Fortiguard and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemFortiguard(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/fortiguard"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemFortiguard API operation for FortiManager deletes the specified Fortiguard.
// Returns error for service API and SDK errors.
// See the object system - fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemFortiguard(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - fortiguard
	return
}

// ReadObjectSystemFortiguard API operation for FortiManager gets the Fortiguard
// with the specified index value.
// Returns the requested Fortiguard value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemFortiguard(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/fortiguard"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemGeoipCountry API operation for FortiManager creates a new Geoip Country.
// Returns the index value of the Geoip Country and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-country chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemGeoipCountry(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-country"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemGeoipCountry API operation for FortiManager updates the specified Geoip Country.
// Returns the index value of the Geoip Country and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-country chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemGeoipCountry(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-country"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemGeoipCountry API operation for FortiManager deletes the specified Geoip Country.
// Returns error for service API and SDK errors.
// See the object system - geoip-country chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemGeoipCountry(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/geoip-country"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemGeoipCountry API operation for FortiManager gets the Geoip Country
// with the specified index value.
// Returns the requested Geoip Country value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-country chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemGeoipCountry(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-country"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemGeoipOverride API operation for FortiManager creates a new Geoip Override.
// Returns the index value of the Geoip Override and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemGeoipOverride(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemGeoipOverride API operation for FortiManager updates the specified Geoip Override.
// Returns the index value of the Geoip Override and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemGeoipOverride(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemGeoipOverride API operation for FortiManager deletes the specified Geoip Override.
// Returns error for service API and SDK errors.
// See the object system - geoip-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemGeoipOverride(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/geoip-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemGeoipOverride API operation for FortiManager gets the Geoip Override
// with the specified index value.
// Returns the requested Geoip Override value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemGeoipOverride(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemGeoipOverrideIpRange API operation for FortiManager creates a new Geoip OverrideIp Range.
// Returns the index value of the Geoip OverrideIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemGeoipOverrideIpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemGeoipOverrideIpRange API operation for FortiManager updates the specified Geoip OverrideIp Range.
// Returns the index value of the Geoip OverrideIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemGeoipOverrideIpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemGeoipOverrideIpRange API operation for FortiManager deletes the specified Geoip OverrideIp Range.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemGeoipOverrideIpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemGeoipOverrideIpRange API operation for FortiManager gets the Geoip OverrideIp Range
// with the specified index value.
// Returns the requested Geoip OverrideIp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemGeoipOverrideIpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemGeoipOverrideIp6Range API operation for FortiManager creates a new Geoip OverrideIp6 Range.
// Returns the index value of the Geoip OverrideIp6 Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip6-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemGeoipOverrideIp6Range(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip6-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemGeoipOverrideIp6Range API operation for FortiManager updates the specified Geoip OverrideIp6 Range.
// Returns the index value of the Geoip OverrideIp6 Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip6-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemGeoipOverrideIp6Range(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip6-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemGeoipOverrideIp6Range API operation for FortiManager deletes the specified Geoip OverrideIp6 Range.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip6-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemGeoipOverrideIp6Range(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip6-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemGeoipOverrideIp6Range API operation for FortiManager gets the Geoip OverrideIp6 Range
// with the specified index value.
// Returns the requested Geoip OverrideIp6 Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - geoip-override ip6-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemGeoipOverrideIp6Range(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/geoip-override/{geoip-override}/ip6-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemMeta API operation for FortiManager creates a new Meta.
// Returns the index value of the Meta and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemMeta(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemMeta API operation for FortiManager updates the specified Meta.
// Returns the index value of the Meta and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemMeta(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemMeta API operation for FortiManager deletes the specified Meta.
// Returns error for service API and SDK errors.
// See the object system - meta chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemMeta(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/meta"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemMeta API operation for FortiManager gets the Meta
// with the specified index value.
// Returns the requested Meta value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemMeta(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemMetaSysMetaFields API operation for FortiManager creates a new MetaSysMetaFields.
// Returns the index value of the MetaSysMetaFields and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta sys meta fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemMetaSysMetaFields(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta/{meta}/sys_meta_fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemMetaSysMetaFields API operation for FortiManager updates the specified MetaSysMetaFields.
// Returns the index value of the MetaSysMetaFields and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta sys meta fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemMetaSysMetaFields(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta/{meta}/sys_meta_fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemMetaSysMetaFields API operation for FortiManager deletes the specified MetaSysMetaFields.
// Returns error for service API and SDK errors.
// See the object system - meta sys meta fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemMetaSysMetaFields(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/meta/{meta}/sys_meta_fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemMetaSysMetaFields API operation for FortiManager gets the MetaSysMetaFields
// with the specified index value.
// Returns the requested MetaSysMetaFields value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - meta sys meta fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemMetaSysMetaFields(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/meta/{meta}/sys_meta_fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpu API operation for FortiManager updates the specified Npu.
// Returns the index value of the Npu and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpu(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpu API operation for FortiManager deletes the specified Npu.
// Returns error for service API and SDK errors.
// See the object system - npu chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpu(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu
	return
}

// ReadObjectSystemNpu API operation for FortiManager gets the Npu
// with the specified index value.
// Returns the requested Npu value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpu(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuBackgroundSseScan API operation for FortiManager updates the specified NpuBackground Sse Scan.
// Returns the index value of the NpuBackground Sse Scan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu background-sse-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuBackgroundSseScan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/background-sse-scan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuBackgroundSseScan API operation for FortiManager deletes the specified NpuBackground Sse Scan.
// Returns error for service API and SDK errors.
// See the object system - npu background-sse-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuBackgroundSseScan(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu background-sse-scan
	return
}

// ReadObjectSystemNpuBackgroundSseScan API operation for FortiManager gets the NpuBackground Sse Scan
// with the specified index value.
// Returns the requested NpuBackground Sse Scan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu background-sse-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuBackgroundSseScan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/background-sse-scan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuDosOptions API operation for FortiManager updates the specified NpuDos Options.
// Returns the index value of the NpuDos Options and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dos-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuDosOptions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dos-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuDosOptions API operation for FortiManager deletes the specified NpuDos Options.
// Returns error for service API and SDK errors.
// See the object system - npu dos-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuDosOptions(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu dos-options
	return
}

// ReadObjectSystemNpuDosOptions API operation for FortiManager gets the NpuDos Options
// with the specified index value.
// Returns the requested NpuDos Options value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dos-options chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuDosOptions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dos-options"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuDswDtsProfile API operation for FortiManager creates a new NpuDsw Dts Profile.
// Returns the index value of the NpuDsw Dts Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuDswDtsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuDswDtsProfile API operation for FortiManager updates the specified NpuDsw Dts Profile.
// Returns the index value of the NpuDsw Dts Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuDswDtsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuDswDtsProfile API operation for FortiManager deletes the specified NpuDsw Dts Profile.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuDswDtsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuDswDtsProfile API operation for FortiManager gets the NpuDsw Dts Profile
// with the specified index value.
// Returns the requested NpuDsw Dts Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuDswDtsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuDswQueueDtsProfile API operation for FortiManager creates a new NpuDsw Queue Dts Profile.
// Returns the index value of the NpuDsw Queue Dts Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-queue-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuDswQueueDtsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-queue-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuDswQueueDtsProfile API operation for FortiManager updates the specified NpuDsw Queue Dts Profile.
// Returns the index value of the NpuDsw Queue Dts Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-queue-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuDswQueueDtsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-queue-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuDswQueueDtsProfile API operation for FortiManager deletes the specified NpuDsw Queue Dts Profile.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-queue-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuDswQueueDtsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-queue-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuDswQueueDtsProfile API operation for FortiManager gets the NpuDsw Queue Dts Profile
// with the specified index value.
// Returns the requested NpuDsw Queue Dts Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu dsw-queue-dts-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuDswQueueDtsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/dsw-queue-dts-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuFpAnomaly API operation for FortiManager updates the specified NpuFp Anomaly.
// Returns the index value of the NpuFp Anomaly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu fp-anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuFpAnomaly(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/fp-anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuFpAnomaly API operation for FortiManager deletes the specified NpuFp Anomaly.
// Returns error for service API and SDK errors.
// See the object system - npu fp-anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuFpAnomaly(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu fp-anomaly
	return
}

// ReadObjectSystemNpuFpAnomaly API operation for FortiManager gets the NpuFp Anomaly
// with the specified index value.
// Returns the requested NpuFp Anomaly value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu fp-anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuFpAnomaly(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/fp-anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuHpe API operation for FortiManager updates the specified NpuHpe.
// Returns the index value of the NpuHpe and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu hpe chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuHpe(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/hpe"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuHpe API operation for FortiManager deletes the specified NpuHpe.
// Returns error for service API and SDK errors.
// See the object system - npu hpe chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuHpe(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu hpe
	return
}

// ReadObjectSystemNpuHpe API operation for FortiManager gets the NpuHpe
// with the specified index value.
// Returns the requested NpuHpe value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu hpe chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuHpe(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/hpe"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuIcmpErrorRateCtrl API operation for FortiManager updates the specified NpuIcmp Error Rate Ctrl.
// Returns the index value of the NpuIcmp Error Rate Ctrl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-error-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuIcmpErrorRateCtrl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/icmp-error-rate-ctrl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuIcmpErrorRateCtrl API operation for FortiManager deletes the specified NpuIcmp Error Rate Ctrl.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-error-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuIcmpErrorRateCtrl(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu icmp-error-rate-ctrl
	return
}

// ReadObjectSystemNpuIcmpErrorRateCtrl API operation for FortiManager gets the NpuIcmp Error Rate Ctrl
// with the specified index value.
// Returns the requested NpuIcmp Error Rate Ctrl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-error-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuIcmpErrorRateCtrl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/icmp-error-rate-ctrl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuIcmpRateCtrl API operation for FortiManager updates the specified NpuIcmp Rate Ctrl.
// Returns the index value of the NpuIcmp Rate Ctrl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuIcmpRateCtrl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/icmp-rate-ctrl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuIcmpRateCtrl API operation for FortiManager deletes the specified NpuIcmp Rate Ctrl.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuIcmpRateCtrl(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu icmp-rate-ctrl
	return
}

// ReadObjectSystemNpuIcmpRateCtrl API operation for FortiManager gets the NpuIcmp Rate Ctrl
// with the specified index value.
// Returns the requested NpuIcmp Rate Ctrl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu icmp-rate-ctrl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuIcmpRateCtrl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/icmp-rate-ctrl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuIpReassembly API operation for FortiManager updates the specified NpuIp Reassembly.
// Returns the index value of the NpuIp Reassembly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu ip-reassembly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuIpReassembly(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/ip-reassembly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuIpReassembly API operation for FortiManager deletes the specified NpuIp Reassembly.
// Returns error for service API and SDK errors.
// See the object system - npu ip-reassembly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuIpReassembly(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu ip-reassembly
	return
}

// ReadObjectSystemNpuIpReassembly API operation for FortiManager gets the NpuIp Reassembly
// with the specified index value.
// Returns the requested NpuIp Reassembly value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu ip-reassembly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuIpReassembly(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/ip-reassembly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuIsfNpQueues API operation for FortiManager updates the specified NpuIsf Np Queues.
// Returns the index value of the NpuIsf Np Queues and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu isf-np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuIsfNpQueues(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/isf-np-queues"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuIsfNpQueues API operation for FortiManager deletes the specified NpuIsf Np Queues.
// Returns error for service API and SDK errors.
// See the object system - npu isf-np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuIsfNpQueues(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu isf-np-queues
	return
}

// ReadObjectSystemNpuIsfNpQueues API operation for FortiManager gets the NpuIsf Np Queues
// with the specified index value.
// Returns the requested NpuIsf Np Queues value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu isf-np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuIsfNpQueues(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/isf-np-queues"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpQueues API operation for FortiManager updates the specified NpuNp Queues.
// Returns the index value of the NpuNp Queues and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueues(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueues API operation for FortiManager deletes the specified NpuNp Queues.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueues(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu np-queues
	return
}

// ReadObjectSystemNpuNpQueues API operation for FortiManager gets the NpuNp Queues
// with the specified index value.
// Returns the requested NpuNp Queues value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueues(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpQueuesEthernetType API operation for FortiManager creates a new NpuNp QueuesEthernet Type.
// Returns the index value of the NpuNp QueuesEthernet Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ethernet-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpQueuesEthernetType(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ethernet-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpQueuesEthernetType API operation for FortiManager updates the specified NpuNp QueuesEthernet Type.
// Returns the index value of the NpuNp QueuesEthernet Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ethernet-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueuesEthernetType(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ethernet-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueuesEthernetType API operation for FortiManager deletes the specified NpuNp QueuesEthernet Type.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ethernet-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueuesEthernetType(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ethernet-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpQueuesEthernetType API operation for FortiManager gets the NpuNp QueuesEthernet Type
// with the specified index value.
// Returns the requested NpuNp QueuesEthernet Type value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ethernet-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueuesEthernetType(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ethernet-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpQueuesIpProtocol API operation for FortiManager creates a new NpuNp QueuesIp Protocol.
// Returns the index value of the NpuNp QueuesIp Protocol and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpQueuesIpProtocol(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpQueuesIpProtocol API operation for FortiManager updates the specified NpuNp QueuesIp Protocol.
// Returns the index value of the NpuNp QueuesIp Protocol and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueuesIpProtocol(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueuesIpProtocol API operation for FortiManager deletes the specified NpuNp QueuesIp Protocol.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueuesIpProtocol(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpQueuesIpProtocol API operation for FortiManager gets the NpuNp QueuesIp Protocol
// with the specified index value.
// Returns the requested NpuNp QueuesIp Protocol value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueuesIpProtocol(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpQueuesIpService API operation for FortiManager creates a new NpuNp QueuesIp Service.
// Returns the index value of the NpuNp QueuesIp Service and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpQueuesIpService(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpQueuesIpService API operation for FortiManager updates the specified NpuNp QueuesIp Service.
// Returns the index value of the NpuNp QueuesIp Service and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueuesIpService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueuesIpService API operation for FortiManager deletes the specified NpuNp QueuesIp Service.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueuesIpService(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpQueuesIpService API operation for FortiManager gets the NpuNp QueuesIp Service
// with the specified index value.
// Returns the requested NpuNp QueuesIp Service value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues ip-service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueuesIpService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/ip-service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpQueuesProfile API operation for FortiManager creates a new NpuNp QueuesProfile.
// Returns the index value of the NpuNp QueuesProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpQueuesProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpQueuesProfile API operation for FortiManager updates the specified NpuNp QueuesProfile.
// Returns the index value of the NpuNp QueuesProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueuesProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueuesProfile API operation for FortiManager deletes the specified NpuNp QueuesProfile.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueuesProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpQueuesProfile API operation for FortiManager gets the NpuNp QueuesProfile
// with the specified index value.
// Returns the requested NpuNp QueuesProfile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueuesProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpQueuesScheduler API operation for FortiManager creates a new NpuNp QueuesScheduler.
// Returns the index value of the NpuNp QueuesScheduler and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues scheduler chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpQueuesScheduler(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/scheduler"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpQueuesScheduler API operation for FortiManager updates the specified NpuNp QueuesScheduler.
// Returns the index value of the NpuNp QueuesScheduler and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues scheduler chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpQueuesScheduler(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/scheduler"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpQueuesScheduler API operation for FortiManager deletes the specified NpuNp QueuesScheduler.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues scheduler chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpQueuesScheduler(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/scheduler"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpQueuesScheduler API operation for FortiManager gets the NpuNp QueuesScheduler
// with the specified index value.
// Returns the requested NpuNp QueuesScheduler value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu np-queues scheduler chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpQueuesScheduler(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/np-queues/scheduler"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuNpuTcam API operation for FortiManager creates a new NpuNpu Tcam.
// Returns the index value of the NpuNpu Tcam and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuNpuTcam(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuNpuTcam API operation for FortiManager updates the specified NpuNpu Tcam.
// Returns the index value of the NpuNpu Tcam and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcam(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcam API operation for FortiManager deletes the specified NpuNpu Tcam.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcam(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuNpuTcam API operation for FortiManager gets the NpuNpu Tcam
// with the specified index value.
// Returns the requested NpuNpu Tcam value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcam(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamData API operation for FortiManager updates the specified NpuNpu TcamData.
// Returns the index value of the NpuNpu TcamData and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamData(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamData API operation for FortiManager deletes the specified NpuNpu TcamData.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamData(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam data
	return
}

// ReadObjectSystemNpuNpuTcamData API operation for FortiManager gets the NpuNpu TcamData
// with the specified index value.
// Returns the requested NpuNpu TcamData value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamData(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamMask API operation for FortiManager updates the specified NpuNpu TcamMask.
// Returns the index value of the NpuNpu TcamMask and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mask chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamMask(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/mask"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamMask API operation for FortiManager deletes the specified NpuNpu TcamMask.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mask chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamMask(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam mask
	return
}

// ReadObjectSystemNpuNpuTcamMask API operation for FortiManager gets the NpuNpu TcamMask
// with the specified index value.
// Returns the requested NpuNpu TcamMask value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mask chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamMask(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/mask"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamMirAct API operation for FortiManager updates the specified NpuNpu TcamMir Act.
// Returns the index value of the NpuNpu TcamMir Act and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mir-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamMirAct(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/mir-act"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamMirAct API operation for FortiManager deletes the specified NpuNpu TcamMir Act.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mir-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamMirAct(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam mir-act
	return
}

// ReadObjectSystemNpuNpuTcamMirAct API operation for FortiManager gets the NpuNpu TcamMir Act
// with the specified index value.
// Returns the requested NpuNpu TcamMir Act value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam mir-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamMirAct(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/mir-act"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamPriAct API operation for FortiManager updates the specified NpuNpu TcamPri Act.
// Returns the index value of the NpuNpu TcamPri Act and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam pri-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamPriAct(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/pri-act"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamPriAct API operation for FortiManager deletes the specified NpuNpu TcamPri Act.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam pri-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamPriAct(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam pri-act
	return
}

// ReadObjectSystemNpuNpuTcamPriAct API operation for FortiManager gets the NpuNpu TcamPri Act
// with the specified index value.
// Returns the requested NpuNpu TcamPri Act value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam pri-act chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamPriAct(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/pri-act"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamSact API operation for FortiManager updates the specified NpuNpu TcamSact.
// Returns the index value of the NpuNpu TcamSact and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam sact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamSact(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/sact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamSact API operation for FortiManager deletes the specified NpuNpu TcamSact.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam sact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamSact(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam sact
	return
}

// ReadObjectSystemNpuNpuTcamSact API operation for FortiManager gets the NpuNpu TcamSact
// with the specified index value.
// Returns the requested NpuNpu TcamSact value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam sact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamSact(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/sact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuNpuTcamTact API operation for FortiManager updates the specified NpuNpu TcamTact.
// Returns the index value of the NpuNpu TcamTact and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam tact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuNpuTcamTact(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/tact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuNpuTcamTact API operation for FortiManager deletes the specified NpuNpu TcamTact.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam tact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuNpuTcamTact(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu npu-tcam tact
	return
}

// ReadObjectSystemNpuNpuTcamTact API operation for FortiManager gets the NpuNpu TcamTact
// with the specified index value.
// Returns the requested NpuNpu TcamTact value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu npu-tcam tact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuNpuTcamTact(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/npu-tcam/{npu-tcam}/tact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuPortCpuMap API operation for FortiManager creates a new NpuPort Cpu Map.
// Returns the index value of the NpuPort Cpu Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-cpu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuPortCpuMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-cpu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuPortCpuMap API operation for FortiManager updates the specified NpuPort Cpu Map.
// Returns the index value of the NpuPort Cpu Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-cpu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuPortCpuMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-cpu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuPortCpuMap API operation for FortiManager deletes the specified NpuPort Cpu Map.
// Returns error for service API and SDK errors.
// See the object system - npu port-cpu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuPortCpuMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/port-cpu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuPortCpuMap API operation for FortiManager gets the NpuPort Cpu Map
// with the specified index value.
// Returns the requested NpuPort Cpu Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-cpu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuPortCpuMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-cpu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuPortNpuMap API operation for FortiManager creates a new NpuPort Npu Map.
// Returns the index value of the NpuPort Npu Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-npu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuPortNpuMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-npu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuPortNpuMap API operation for FortiManager updates the specified NpuPort Npu Map.
// Returns the index value of the NpuPort Npu Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-npu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuPortNpuMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-npu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuPortNpuMap API operation for FortiManager deletes the specified NpuPort Npu Map.
// Returns error for service API and SDK errors.
// See the object system - npu port-npu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuPortNpuMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/port-npu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuPortNpuMap API operation for FortiManager gets the NpuPort Npu Map
// with the specified index value.
// Returns the requested NpuPort Npu Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-npu-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuPortNpuMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-npu-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuPortPathOption API operation for FortiManager updates the specified NpuPort Path Option.
// Returns the index value of the NpuPort Path Option and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-path-option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuPortPathOption(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-path-option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuPortPathOption API operation for FortiManager deletes the specified NpuPort Path Option.
// Returns error for service API and SDK errors.
// See the object system - npu port-path-option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuPortPathOption(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu port-path-option
	return
}

// ReadObjectSystemNpuPortPathOption API operation for FortiManager gets the NpuPort Path Option
// with the specified index value.
// Returns the requested NpuPort Path Option value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu port-path-option chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuPortPathOption(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/port-path-option"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuPriorityProtocol API operation for FortiManager updates the specified NpuPriority Protocol.
// Returns the index value of the NpuPriority Protocol and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu priority-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuPriorityProtocol(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/priority-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuPriorityProtocol API operation for FortiManager deletes the specified NpuPriority Protocol.
// Returns error for service API and SDK errors.
// See the object system - npu priority-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuPriorityProtocol(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu priority-protocol
	return
}

// ReadObjectSystemNpuPriorityProtocol API operation for FortiManager gets the NpuPriority Protocol
// with the specified index value.
// Returns the requested NpuPriority Protocol value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu priority-protocol chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuPriorityProtocol(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/priority-protocol"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuSseHaScan API operation for FortiManager updates the specified NpuSse Ha Scan.
// Returns the index value of the NpuSse Ha Scan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sse-ha-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuSseHaScan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sse-ha-scan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuSseHaScan API operation for FortiManager deletes the specified NpuSse Ha Scan.
// Returns error for service API and SDK errors.
// See the object system - npu sse-ha-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuSseHaScan(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu sse-ha-scan
	return
}

// ReadObjectSystemNpuSseHaScan API operation for FortiManager gets the NpuSse Ha Scan
// with the specified index value.
// Returns the requested NpuSse Ha Scan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sse-ha-scan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuSseHaScan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sse-ha-scan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuSwEhHash API operation for FortiManager updates the specified NpuSw Eh Hash.
// Returns the index value of the NpuSw Eh Hash and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sw-eh-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuSwEhHash(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sw-eh-hash"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuSwEhHash API operation for FortiManager deletes the specified NpuSw Eh Hash.
// Returns error for service API and SDK errors.
// See the object system - npu sw-eh-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuSwEhHash(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu sw-eh-hash
	return
}

// ReadObjectSystemNpuSwEhHash API operation for FortiManager gets the NpuSw Eh Hash
// with the specified index value.
// Returns the requested NpuSw Eh Hash value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sw-eh-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuSwEhHash(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sw-eh-hash"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemNpuSwTrHash API operation for FortiManager updates the specified NpuSw Tr Hash.
// Returns the index value of the NpuSw Tr Hash and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sw-tr-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuSwTrHash(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sw-tr-hash"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuSwTrHash API operation for FortiManager deletes the specified NpuSw Tr Hash.
// Returns error for service API and SDK errors.
// See the object system - npu sw-tr-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuSwTrHash(mkey string, paradict map[string]string) (err error) {

	//No unset API for object system - npu sw-tr-hash
	return
}

// ReadObjectSystemNpuSwTrHash API operation for FortiManager gets the NpuSw Tr Hash
// with the specified index value.
// Returns the requested NpuSw Tr Hash value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu sw-tr-hash chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuSwTrHash(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/sw-tr-hash"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuTcpTimeoutProfile API operation for FortiManager creates a new NpuTcp Timeout Profile.
// Returns the index value of the NpuTcp Timeout Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu tcp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuTcpTimeoutProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/tcp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuTcpTimeoutProfile API operation for FortiManager updates the specified NpuTcp Timeout Profile.
// Returns the index value of the NpuTcp Timeout Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu tcp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuTcpTimeoutProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/tcp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuTcpTimeoutProfile API operation for FortiManager deletes the specified NpuTcp Timeout Profile.
// Returns error for service API and SDK errors.
// See the object system - npu tcp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuTcpTimeoutProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/tcp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuTcpTimeoutProfile API operation for FortiManager gets the NpuTcp Timeout Profile
// with the specified index value.
// Returns the requested NpuTcp Timeout Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu tcp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuTcpTimeoutProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/tcp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemNpuUdpTimeoutProfile API operation for FortiManager creates a new NpuUdp Timeout Profile.
// Returns the index value of the NpuUdp Timeout Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu udp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemNpuUdpTimeoutProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/udp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemNpuUdpTimeoutProfile API operation for FortiManager updates the specified NpuUdp Timeout Profile.
// Returns the index value of the NpuUdp Timeout Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu udp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemNpuUdpTimeoutProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/udp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemNpuUdpTimeoutProfile API operation for FortiManager deletes the specified NpuUdp Timeout Profile.
// Returns error for service API and SDK errors.
// See the object system - npu udp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemNpuUdpTimeoutProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/npu/udp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemNpuUdpTimeoutProfile API operation for FortiManager gets the NpuUdp Timeout Profile
// with the specified index value.
// Returns the requested NpuUdp Timeout Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - npu udp-timeout-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemNpuUdpTimeoutProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/npu/udp-timeout-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemObjectTagging API operation for FortiManager creates a new Object Tagging.
// Returns the index value of the Object Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - object-tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemObjectTagging(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/object-tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemObjectTagging API operation for FortiManager updates the specified Object Tagging.
// Returns the index value of the Object Tagging and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - object-tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemObjectTagging(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/object-tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemObjectTagging API operation for FortiManager deletes the specified Object Tagging.
// Returns error for service API and SDK errors.
// See the object system - object-tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemObjectTagging(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/object-tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemObjectTagging API operation for FortiManager gets the Object Tagging
// with the specified index value.
// Returns the requested Object Tagging value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - object-tagging chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemObjectTagging(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/object-tagging"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroup API operation for FortiManager creates a new Replacemsg Group.
// Returns the index value of the Replacemsg Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroup API operation for FortiManager updates the specified Replacemsg Group.
// Returns the index value of the Replacemsg Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroup API operation for FortiManager deletes the specified Replacemsg Group.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroup API operation for FortiManager gets the Replacemsg Group
// with the specified index value.
// Returns the requested Replacemsg Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupAdmin API operation for FortiManager creates a new Replacemsg GroupAdmin.
// Returns the index value of the Replacemsg GroupAdmin and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupAdmin(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupAdmin API operation for FortiManager updates the specified Replacemsg GroupAdmin.
// Returns the index value of the Replacemsg GroupAdmin and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupAdmin(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupAdmin API operation for FortiManager deletes the specified Replacemsg GroupAdmin.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupAdmin(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupAdmin API operation for FortiManager gets the Replacemsg GroupAdmin
// with the specified index value.
// Returns the requested Replacemsg GroupAdmin value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupAdmin(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupAlertmail API operation for FortiManager creates a new Replacemsg GroupAlertmail.
// Returns the index value of the Replacemsg GroupAlertmail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupAlertmail(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupAlertmail API operation for FortiManager updates the specified Replacemsg GroupAlertmail.
// Returns the index value of the Replacemsg GroupAlertmail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupAlertmail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupAlertmail API operation for FortiManager deletes the specified Replacemsg GroupAlertmail.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupAlertmail(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupAlertmail API operation for FortiManager gets the Replacemsg GroupAlertmail
// with the specified index value.
// Returns the requested Replacemsg GroupAlertmail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupAlertmail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupAuth API operation for FortiManager creates a new Replacemsg GroupAuth.
// Returns the index value of the Replacemsg GroupAuth and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupAuth(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupAuth API operation for FortiManager updates the specified Replacemsg GroupAuth.
// Returns the index value of the Replacemsg GroupAuth and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupAuth(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupAuth API operation for FortiManager deletes the specified Replacemsg GroupAuth.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupAuth(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupAuth API operation for FortiManager gets the Replacemsg GroupAuth
// with the specified index value.
// Returns the requested Replacemsg GroupAuth value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupAuth(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupAutomation API operation for FortiManager creates a new Replacemsg GroupAutomation.
// Returns the index value of the Replacemsg GroupAutomation and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group automation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupAutomation(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/automation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupAutomation API operation for FortiManager updates the specified Replacemsg GroupAutomation.
// Returns the index value of the Replacemsg GroupAutomation and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group automation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupAutomation(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/automation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupAutomation API operation for FortiManager deletes the specified Replacemsg GroupAutomation.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group automation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupAutomation(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/automation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupAutomation API operation for FortiManager gets the Replacemsg GroupAutomation
// with the specified index value.
// Returns the requested Replacemsg GroupAutomation value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group automation chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupAutomation(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/automation"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupCustomMessage API operation for FortiManager creates a new Replacemsg GroupCustom Message.
// Returns the index value of the Replacemsg GroupCustom Message and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group custom-message chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupCustomMessage(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/custom-message"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupCustomMessage API operation for FortiManager updates the specified Replacemsg GroupCustom Message.
// Returns the index value of the Replacemsg GroupCustom Message and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group custom-message chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupCustomMessage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/custom-message"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupCustomMessage API operation for FortiManager deletes the specified Replacemsg GroupCustom Message.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group custom-message chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupCustomMessage(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/custom-message"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupCustomMessage API operation for FortiManager gets the Replacemsg GroupCustom Message
// with the specified index value.
// Returns the requested Replacemsg GroupCustom Message value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group custom-message chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupCustomMessage(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/custom-message"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupDeviceDetectionPortal API operation for FortiManager creates a new Replacemsg GroupDevice Detection Portal.
// Returns the index value of the Replacemsg GroupDevice Detection Portal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupDeviceDetectionPortal(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupDeviceDetectionPortal API operation for FortiManager updates the specified Replacemsg GroupDevice Detection Portal.
// Returns the index value of the Replacemsg GroupDevice Detection Portal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupDeviceDetectionPortal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupDeviceDetectionPortal API operation for FortiManager deletes the specified Replacemsg GroupDevice Detection Portal.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupDeviceDetectionPortal(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupDeviceDetectionPortal API operation for FortiManager gets the Replacemsg GroupDevice Detection Portal
// with the specified index value.
// Returns the requested Replacemsg GroupDevice Detection Portal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupDeviceDetectionPortal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupFortiguardWf API operation for FortiManager creates a new Replacemsg GroupFortiguard Wf.
// Returns the index value of the Replacemsg GroupFortiguard Wf and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupFortiguardWf(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupFortiguardWf API operation for FortiManager updates the specified Replacemsg GroupFortiguard Wf.
// Returns the index value of the Replacemsg GroupFortiguard Wf and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupFortiguardWf(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupFortiguardWf API operation for FortiManager deletes the specified Replacemsg GroupFortiguard Wf.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupFortiguardWf(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupFortiguardWf API operation for FortiManager gets the Replacemsg GroupFortiguard Wf
// with the specified index value.
// Returns the requested Replacemsg GroupFortiguard Wf value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupFortiguardWf(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupFtp API operation for FortiManager creates a new Replacemsg GroupFtp.
// Returns the index value of the Replacemsg GroupFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupFtp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupFtp API operation for FortiManager updates the specified Replacemsg GroupFtp.
// Returns the index value of the Replacemsg GroupFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupFtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupFtp API operation for FortiManager deletes the specified Replacemsg GroupFtp.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupFtp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupFtp API operation for FortiManager gets the Replacemsg GroupFtp
// with the specified index value.
// Returns the requested Replacemsg GroupFtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupFtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupHttp API operation for FortiManager creates a new Replacemsg GroupHttp.
// Returns the index value of the Replacemsg GroupHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupHttp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupHttp API operation for FortiManager updates the specified Replacemsg GroupHttp.
// Returns the index value of the Replacemsg GroupHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupHttp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupHttp API operation for FortiManager deletes the specified Replacemsg GroupHttp.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupHttp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupHttp API operation for FortiManager gets the Replacemsg GroupHttp
// with the specified index value.
// Returns the requested Replacemsg GroupHttp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupHttp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupIcap API operation for FortiManager creates a new Replacemsg GroupIcap.
// Returns the index value of the Replacemsg GroupIcap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group icap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupIcap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/icap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupIcap API operation for FortiManager updates the specified Replacemsg GroupIcap.
// Returns the index value of the Replacemsg GroupIcap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group icap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupIcap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/icap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupIcap API operation for FortiManager deletes the specified Replacemsg GroupIcap.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group icap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupIcap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/icap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupIcap API operation for FortiManager gets the Replacemsg GroupIcap
// with the specified index value.
// Returns the requested Replacemsg GroupIcap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group icap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupIcap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/icap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupMail API operation for FortiManager creates a new Replacemsg GroupMail.
// Returns the index value of the Replacemsg GroupMail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupMail(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupMail API operation for FortiManager updates the specified Replacemsg GroupMail.
// Returns the index value of the Replacemsg GroupMail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupMail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupMail API operation for FortiManager deletes the specified Replacemsg GroupMail.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupMail(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupMail API operation for FortiManager gets the Replacemsg GroupMail
// with the specified index value.
// Returns the requested Replacemsg GroupMail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupMail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupNacQuar API operation for FortiManager creates a new Replacemsg GroupNac Quar.
// Returns the index value of the Replacemsg GroupNac Quar and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupNacQuar(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupNacQuar API operation for FortiManager updates the specified Replacemsg GroupNac Quar.
// Returns the index value of the Replacemsg GroupNac Quar and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupNacQuar(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupNacQuar API operation for FortiManager deletes the specified Replacemsg GroupNac Quar.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupNacQuar(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupNacQuar API operation for FortiManager gets the Replacemsg GroupNac Quar
// with the specified index value.
// Returns the requested Replacemsg GroupNac Quar value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupNacQuar(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupNntp API operation for FortiManager creates a new Replacemsg GroupNntp.
// Returns the index value of the Replacemsg GroupNntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupNntp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupNntp API operation for FortiManager updates the specified Replacemsg GroupNntp.
// Returns the index value of the Replacemsg GroupNntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupNntp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupNntp API operation for FortiManager deletes the specified Replacemsg GroupNntp.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupNntp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupNntp API operation for FortiManager gets the Replacemsg GroupNntp
// with the specified index value.
// Returns the requested Replacemsg GroupNntp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupNntp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupSpam API operation for FortiManager creates a new Replacemsg GroupSpam.
// Returns the index value of the Replacemsg GroupSpam and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupSpam(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupSpam API operation for FortiManager updates the specified Replacemsg GroupSpam.
// Returns the index value of the Replacemsg GroupSpam and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupSpam(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupSpam API operation for FortiManager deletes the specified Replacemsg GroupSpam.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupSpam(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupSpam API operation for FortiManager gets the Replacemsg GroupSpam
// with the specified index value.
// Returns the requested Replacemsg GroupSpam value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupSpam(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupSslvpn API operation for FortiManager creates a new Replacemsg GroupSslvpn.
// Returns the index value of the Replacemsg GroupSslvpn and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupSslvpn(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupSslvpn API operation for FortiManager updates the specified Replacemsg GroupSslvpn.
// Returns the index value of the Replacemsg GroupSslvpn and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupSslvpn(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupSslvpn API operation for FortiManager deletes the specified Replacemsg GroupSslvpn.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupSslvpn(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupSslvpn API operation for FortiManager gets the Replacemsg GroupSslvpn
// with the specified index value.
// Returns the requested Replacemsg GroupSslvpn value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupSslvpn(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupTrafficQuota API operation for FortiManager creates a new Replacemsg GroupTraffic Quota.
// Returns the index value of the Replacemsg GroupTraffic Quota and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupTrafficQuota(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupTrafficQuota API operation for FortiManager updates the specified Replacemsg GroupTraffic Quota.
// Returns the index value of the Replacemsg GroupTraffic Quota and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupTrafficQuota(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupTrafficQuota API operation for FortiManager deletes the specified Replacemsg GroupTraffic Quota.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupTrafficQuota(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupTrafficQuota API operation for FortiManager gets the Replacemsg GroupTraffic Quota
// with the specified index value.
// Returns the requested Replacemsg GroupTraffic Quota value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupTrafficQuota(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupUtm API operation for FortiManager creates a new Replacemsg GroupUtm.
// Returns the index value of the Replacemsg GroupUtm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupUtm(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupUtm API operation for FortiManager updates the specified Replacemsg GroupUtm.
// Returns the index value of the Replacemsg GroupUtm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupUtm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupUtm API operation for FortiManager deletes the specified Replacemsg GroupUtm.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupUtm(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupUtm API operation for FortiManager gets the Replacemsg GroupUtm
// with the specified index value.
// Returns the requested Replacemsg GroupUtm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupUtm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgGroupWebproxy API operation for FortiManager creates a new Replacemsg GroupWebproxy.
// Returns the index value of the Replacemsg GroupWebproxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgGroupWebproxy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgGroupWebproxy API operation for FortiManager updates the specified Replacemsg GroupWebproxy.
// Returns the index value of the Replacemsg GroupWebproxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgGroupWebproxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgGroupWebproxy API operation for FortiManager deletes the specified Replacemsg GroupWebproxy.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgGroupWebproxy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgGroupWebproxy API operation for FortiManager gets the Replacemsg GroupWebproxy
// with the specified index value.
// Returns the requested Replacemsg GroupWebproxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-group webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgGroupWebproxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-group/{replacemsg-group}/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemReplacemsgImage API operation for FortiManager creates a new Replacemsg Image.
// Returns the index value of the Replacemsg Image and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-image chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemReplacemsgImage(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-image"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemReplacemsgImage API operation for FortiManager updates the specified Replacemsg Image.
// Returns the index value of the Replacemsg Image and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-image chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemReplacemsgImage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-image"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemReplacemsgImage API operation for FortiManager deletes the specified Replacemsg Image.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-image chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemReplacemsgImage(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-image"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemReplacemsgImage API operation for FortiManager gets the Replacemsg Image
// with the specified index value.
// Returns the requested Replacemsg Image value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - replacemsg-image chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemReplacemsgImage(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/replacemsg-image"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemSdnConnector API operation for FortiManager creates a new Sdn Connector.
// Returns the index value of the Sdn Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnector(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnector API operation for FortiManager updates the specified Sdn Connector.
// Returns the index value of the Sdn Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnector(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnector API operation for FortiManager deletes the specified Sdn Connector.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnector(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnector API operation for FortiManager gets the Sdn Connector
// with the specified index value.
// Returns the requested Sdn Connector value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnector(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemSdnConnectorCompartmentList API operation for FortiManager creates a new Sdn ConnectorCompartment List.
// Returns the index value of the Sdn ConnectorCompartment List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorCompartmentList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorCompartmentList API operation for FortiManager updates the specified Sdn ConnectorCompartment List.
// Returns the index value of the Sdn ConnectorCompartment List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorCompartmentList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorCompartmentList API operation for FortiManager deletes the specified Sdn ConnectorCompartment List.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorCompartmentList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorCompartmentList API operation for FortiManager gets the Sdn ConnectorCompartment List
// with the specified index value.
// Returns the requested Sdn ConnectorCompartment List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorCompartmentList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorCompartmentListMove API operation for FortiManager updates the specified Sdn ConnectorCompartment ListMove.
// Returns the index value of the Sdn ConnectorCompartment ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorCompartmentListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list/{compartment-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorCompartmentListMove API operation for FortiManager gets the Sdn ConnectorCompartment ListMove
// with the specified index value.
// Returns the requested Sdn ConnectorCompartment ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector compartment-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorCompartmentListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/compartment-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"compartment-id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorExternalAccountList API operation for FortiManager creates a new Sdn ConnectorExternal Account List.
// Returns the index value of the Sdn ConnectorExternal Account List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorExternalAccountList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorExternalAccountList API operation for FortiManager updates the specified Sdn ConnectorExternal Account List.
// Returns the index value of the Sdn ConnectorExternal Account List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorExternalAccountList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorExternalAccountList API operation for FortiManager deletes the specified Sdn ConnectorExternal Account List.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorExternalAccountList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorExternalAccountList API operation for FortiManager gets the Sdn ConnectorExternal Account List
// with the specified index value.
// Returns the requested Sdn ConnectorExternal Account List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorExternalAccountList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorExternalAccountListMove API operation for FortiManager updates the specified Sdn ConnectorExternal Account ListMove.
// Returns the index value of the Sdn ConnectorExternal Account ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorExternalAccountListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list/{external-account-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorExternalAccountListMove API operation for FortiManager gets the Sdn ConnectorExternal Account ListMove
// with the specified index value.
// Returns the requested Sdn ConnectorExternal Account ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-account-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorExternalAccountListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-account-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"role-arn"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorExternalIp API operation for FortiManager creates a new Sdn ConnectorExternal Ip.
// Returns the index value of the Sdn ConnectorExternal Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorExternalIp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorExternalIp API operation for FortiManager updates the specified Sdn ConnectorExternal Ip.
// Returns the index value of the Sdn ConnectorExternal Ip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorExternalIp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorExternalIp API operation for FortiManager deletes the specified Sdn ConnectorExternal Ip.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorExternalIp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorExternalIp API operation for FortiManager gets the Sdn ConnectorExternal Ip
// with the specified index value.
// Returns the requested Sdn ConnectorExternal Ip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorExternalIp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorExternalIpMove API operation for FortiManager updates the specified Sdn ConnectorExternal IpMove.
// Returns the index value of the Sdn ConnectorExternal IpMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorExternalIpMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip/{external-ip}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorExternalIpMove API operation for FortiManager gets the Sdn ConnectorExternal IpMove
// with the specified index value.
// Returns the requested Sdn ConnectorExternal IpMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector external-ip move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorExternalIpMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/external-ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorForwardingRule API operation for FortiManager creates a new Sdn ConnectorForwarding Rule.
// Returns the index value of the Sdn ConnectorForwarding Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorForwardingRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorForwardingRule API operation for FortiManager updates the specified Sdn ConnectorForwarding Rule.
// Returns the index value of the Sdn ConnectorForwarding Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorForwardingRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorForwardingRule API operation for FortiManager deletes the specified Sdn ConnectorForwarding Rule.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorForwardingRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorForwardingRule API operation for FortiManager gets the Sdn ConnectorForwarding Rule
// with the specified index value.
// Returns the requested Sdn ConnectorForwarding Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorForwardingRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorForwardingRuleMove API operation for FortiManager updates the specified Sdn ConnectorForwarding RuleMove.
// Returns the index value of the Sdn ConnectorForwarding RuleMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorForwardingRuleMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule/{forwarding-rule}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorForwardingRuleMove API operation for FortiManager gets the Sdn ConnectorForwarding RuleMove
// with the specified index value.
// Returns the requested Sdn ConnectorForwarding RuleMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector forwarding-rule move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorForwardingRuleMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/forwarding-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"rule-name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorGcpProjectList API operation for FortiManager creates a new Sdn ConnectorGcp Project List.
// Returns the index value of the Sdn ConnectorGcp Project List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorGcpProjectList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorGcpProjectList API operation for FortiManager updates the specified Sdn ConnectorGcp Project List.
// Returns the index value of the Sdn ConnectorGcp Project List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorGcpProjectList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorGcpProjectList API operation for FortiManager deletes the specified Sdn ConnectorGcp Project List.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorGcpProjectList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorGcpProjectList API operation for FortiManager gets the Sdn ConnectorGcp Project List
// with the specified index value.
// Returns the requested Sdn ConnectorGcp Project List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorGcpProjectList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorGcpProjectListMove API operation for FortiManager updates the specified Sdn ConnectorGcp Project ListMove.
// Returns the index value of the Sdn ConnectorGcp Project ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorGcpProjectListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list/{gcp-project-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorGcpProjectListMove API operation for FortiManager gets the Sdn ConnectorGcp Project ListMove
// with the specified index value.
// Returns the requested Sdn ConnectorGcp Project ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector gcp-project-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorGcpProjectListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/gcp-project-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorNic API operation for FortiManager creates a new Sdn ConnectorNic.
// Returns the index value of the Sdn ConnectorNic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorNic(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorNic API operation for FortiManager updates the specified Sdn ConnectorNic.
// Returns the index value of the Sdn ConnectorNic and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorNic(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorNic API operation for FortiManager deletes the specified Sdn ConnectorNic.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorNic(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorNic API operation for FortiManager gets the Sdn ConnectorNic
// with the specified index value.
// Returns the requested Sdn ConnectorNic value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorNic(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemSdnConnectorNicIp API operation for FortiManager creates a new Sdn ConnectorNicIp.
// Returns the index value of the Sdn ConnectorNicIp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorNicIp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorNicIp API operation for FortiManager updates the specified Sdn ConnectorNicIp.
// Returns the index value of the Sdn ConnectorNicIp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorNicIp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorNicIp API operation for FortiManager deletes the specified Sdn ConnectorNicIp.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorNicIp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorNicIp API operation for FortiManager gets the Sdn ConnectorNicIp
// with the specified index value.
// Returns the requested Sdn ConnectorNicIp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorNicIp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorNicIpMove API operation for FortiManager updates the specified Sdn ConnectorNicIpMove.
// Returns the index value of the Sdn ConnectorNicIpMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorNicIpMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip/{ip}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorNicIpMove API operation for FortiManager gets the Sdn ConnectorNicIpMove
// with the specified index value.
// Returns the requested Sdn ConnectorNicIpMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic ip move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorNicIpMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}/ip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectSystemSdnConnectorNicMove API operation for FortiManager updates the specified Sdn ConnectorNicMove.
// Returns the index value of the Sdn ConnectorNicMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorNicMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic/{nic}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorNicMove API operation for FortiManager gets the Sdn ConnectorNicMove
// with the specified index value.
// Returns the requested Sdn ConnectorNicMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector nic move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorNicMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/nic"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorOciRegionList API operation for FortiManager creates a new Sdn ConnectorOci Region List.
// Returns the index value of the Sdn ConnectorOci Region List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorOciRegionList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorOciRegionList API operation for FortiManager updates the specified Sdn ConnectorOci Region List.
// Returns the index value of the Sdn ConnectorOci Region List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorOciRegionList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorOciRegionList API operation for FortiManager deletes the specified Sdn ConnectorOci Region List.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorOciRegionList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorOciRegionList API operation for FortiManager gets the Sdn ConnectorOci Region List
// with the specified index value.
// Returns the requested Sdn ConnectorOci Region List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorOciRegionList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorOciRegionListMove API operation for FortiManager updates the specified Sdn ConnectorOci Region ListMove.
// Returns the index value of the Sdn ConnectorOci Region ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorOciRegionListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list/{oci-region-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorOciRegionListMove API operation for FortiManager gets the Sdn ConnectorOci Region ListMove
// with the specified index value.
// Returns the requested Sdn ConnectorOci Region ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector oci-region-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorOciRegionListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/oci-region-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"region"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorRoute API operation for FortiManager creates a new Sdn ConnectorRoute.
// Returns the index value of the Sdn ConnectorRoute and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorRoute(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorRoute API operation for FortiManager updates the specified Sdn ConnectorRoute.
// Returns the index value of the Sdn ConnectorRoute and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRoute(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorRoute API operation for FortiManager deletes the specified Sdn ConnectorRoute.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorRoute(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorRoute API operation for FortiManager gets the Sdn ConnectorRoute
// with the specified index value.
// Returns the requested Sdn ConnectorRoute value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRoute(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemSdnConnectorRouteTable API operation for FortiManager creates a new Sdn ConnectorRoute Table.
// Returns the index value of the Sdn ConnectorRoute Table and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorRouteTable(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorRouteTable API operation for FortiManager updates the specified Sdn ConnectorRoute Table.
// Returns the index value of the Sdn ConnectorRoute Table and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRouteTable(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorRouteTable API operation for FortiManager deletes the specified Sdn ConnectorRoute Table.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorRouteTable(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorRouteTable API operation for FortiManager gets the Sdn ConnectorRoute Table
// with the specified index value.
// Returns the requested Sdn ConnectorRoute Table value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRouteTable(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorRouteTableMove API operation for FortiManager updates the specified Sdn ConnectorRoute TableMove.
// Returns the index value of the Sdn ConnectorRoute TableMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRouteTableMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorRouteTableMove API operation for FortiManager gets the Sdn ConnectorRoute TableMove
// with the specified index value.
// Returns the requested Sdn ConnectorRoute TableMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRouteTableMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnConnectorRouteTableRoute API operation for FortiManager creates a new Sdn ConnectorRoute TableRoute.
// Returns the index value of the Sdn ConnectorRoute TableRoute and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnConnectorRouteTableRoute(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnConnectorRouteTableRoute API operation for FortiManager updates the specified Sdn ConnectorRoute TableRoute.
// Returns the index value of the Sdn ConnectorRoute TableRoute and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRouteTableRoute(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnConnectorRouteTableRoute API operation for FortiManager deletes the specified Sdn ConnectorRoute TableRoute.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnConnectorRouteTableRoute(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnConnectorRouteTableRoute API operation for FortiManager gets the Sdn ConnectorRoute TableRoute
// with the specified index value.
// Returns the requested Sdn ConnectorRoute TableRoute value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRouteTableRoute(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectSystemSdnConnectorRouteTableRouteMove API operation for FortiManager updates the specified Sdn ConnectorRoute TableRouteMove.
// Returns the index value of the Sdn ConnectorRoute TableRouteMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRouteTableRouteMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route/{route}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorRouteTableRouteMove API operation for FortiManager gets the Sdn ConnectorRoute TableRouteMove
// with the specified index value.
// Returns the requested Sdn ConnectorRoute TableRouteMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route-table route move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRouteTableRouteMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route-table/{route-table}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectSystemSdnConnectorRouteMove API operation for FortiManager updates the specified Sdn ConnectorRouteMove.
// Returns the index value of the Sdn ConnectorRouteMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnConnectorRouteMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route/{route}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectSystemSdnConnectorRouteMove API operation for FortiManager gets the Sdn ConnectorRouteMove
// with the specified index value.
// Returns the requested Sdn ConnectorRouteMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-connector route move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnConnectorRouteMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-connector/{sdn-connector}/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectSystemSdnProxy API operation for FortiManager creates a new Sdn Proxy.
// Returns the index value of the Sdn Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSdnProxy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSdnProxy API operation for FortiManager updates the specified Sdn Proxy.
// Returns the index value of the Sdn Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSdnProxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSdnProxy API operation for FortiManager deletes the specified Sdn Proxy.
// Returns error for service API and SDK errors.
// See the object system - sdn-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSdnProxy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sdn-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSdnProxy API operation for FortiManager gets the Sdn Proxy
// with the specified index value.
// Returns the requested Sdn Proxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sdn-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSdnProxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sdn-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemSmsServer API operation for FortiManager creates a new Sms Server.
// Returns the index value of the Sms Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sms-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemSmsServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sms-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemSmsServer API operation for FortiManager updates the specified Sms Server.
// Returns the index value of the Sms Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sms-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemSmsServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sms-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemSmsServer API operation for FortiManager deletes the specified Sms Server.
// Returns error for service API and SDK errors.
// See the object system - sms-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemSmsServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/sms-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemSmsServer API operation for FortiManager gets the Sms Server
// with the specified index value.
// Returns the requested Sms Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - sms-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemSmsServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/sms-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectSystemVirtualWirePair API operation for FortiManager creates a new Virtual Wire Pair.
// Returns the index value of the Virtual Wire Pair and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - virtual-wire-pair chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectSystemVirtualWirePair(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/virtual-wire-pair"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectSystemVirtualWirePair API operation for FortiManager updates the specified Virtual Wire Pair.
// Returns the index value of the Virtual Wire Pair and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - virtual-wire-pair chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectSystemVirtualWirePair(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/virtual-wire-pair"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectSystemVirtualWirePair API operation for FortiManager deletes the specified Virtual Wire Pair.
// Returns error for service API and SDK errors.
// See the object system - virtual-wire-pair chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectSystemVirtualWirePair(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/system/virtual-wire-pair"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectSystemVirtualWirePair API operation for FortiManager gets the Virtual Wire Pair
// with the specified index value.
// Returns the requested Virtual Wire Pair value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object system - virtual-wire-pair chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectSystemVirtualWirePair(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/system/virtual-wire-pair"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserAdgrp API operation for FortiManager creates a new Adgrp.
// Returns the index value of the Adgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserAdgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserAdgrp API operation for FortiManager updates the specified Adgrp.
// Returns the index value of the Adgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserAdgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserAdgrp API operation for FortiManager deletes the specified Adgrp.
// Returns error for service API and SDK errors.
// See the object user - adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserAdgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserAdgrp API operation for FortiManager gets the Adgrp
// with the specified index value.
// Returns the requested Adgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserAdgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserCertificate API operation for FortiManager creates a new Certificate.
// Returns the index value of the Certificate and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - certificate chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserCertificate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/certificate"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserCertificate API operation for FortiManager updates the specified Certificate.
// Returns the index value of the Certificate and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - certificate chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserCertificate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/certificate"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserCertificate API operation for FortiManager deletes the specified Certificate.
// Returns error for service API and SDK errors.
// See the object user - certificate chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserCertificate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/certificate"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserCertificate API operation for FortiManager gets the Certificate
// with the specified index value.
// Returns the requested Certificate value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - certificate chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserCertificate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/certificate"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserClearpass API operation for FortiManager creates a new Clearpass.
// Returns the index value of the Clearpass and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - clearpass chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserClearpass(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/clearpass"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserClearpass API operation for FortiManager updates the specified Clearpass.
// Returns the index value of the Clearpass and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - clearpass chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserClearpass(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/clearpass"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserClearpass API operation for FortiManager deletes the specified Clearpass.
// Returns error for service API and SDK errors.
// See the object user - clearpass chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserClearpass(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/clearpass"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserClearpass API operation for FortiManager gets the Clearpass
// with the specified index value.
// Returns the requested Clearpass value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - clearpass chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserClearpass(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/clearpass"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserConnector API operation for FortiManager creates a new Connector.
// Returns the index value of the Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserConnector(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserConnector API operation for FortiManager updates the specified Connector.
// Returns the index value of the Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserConnector(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserConnector API operation for FortiManager deletes the specified Connector.
// Returns error for service API and SDK errors.
// See the object user - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserConnector(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserConnector API operation for FortiManager gets the Connector
// with the specified index value.
// Returns the requested Connector value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserConnector(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDevice API operation for FortiManager creates a new Device.
// Returns the index value of the Device and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDevice(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDevice API operation for FortiManager updates the specified Device.
// Returns the index value of the Device and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDevice API operation for FortiManager deletes the specified Device.
// Returns error for service API and SDK errors.
// See the object user - device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDevice(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDevice API operation for FortiManager gets the Device
// with the specified index value.
// Returns the requested Device value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDevice(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDeviceAccessList API operation for FortiManager creates a new Device Access List.
// Returns the index value of the Device Access List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDeviceAccessList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDeviceAccessList API operation for FortiManager updates the specified Device Access List.
// Returns the index value of the Device Access List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDeviceAccessList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDeviceAccessList API operation for FortiManager deletes the specified Device Access List.
// Returns error for service API and SDK errors.
// See the object user - device-access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDeviceAccessList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/device-access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDeviceAccessList API operation for FortiManager gets the Device Access List
// with the specified index value.
// Returns the requested Device Access List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-access-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDeviceAccessList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-access-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDeviceCategory API operation for FortiManager creates a new Device Category.
// Returns the index value of the Device Category and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDeviceCategory(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDeviceCategory API operation for FortiManager updates the specified Device Category.
// Returns the index value of the Device Category and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDeviceCategory(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDeviceCategory API operation for FortiManager deletes the specified Device Category.
// Returns error for service API and SDK errors.
// See the object user - device-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDeviceCategory(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/device-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDeviceCategory API operation for FortiManager gets the Device Category
// with the specified index value.
// Returns the requested Device Category value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDeviceCategory(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDeviceGroup API operation for FortiManager creates a new Device Group.
// Returns the index value of the Device Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDeviceGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDeviceGroup API operation for FortiManager updates the specified Device Group.
// Returns the index value of the Device Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDeviceGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDeviceGroup API operation for FortiManager deletes the specified Device Group.
// Returns error for service API and SDK errors.
// See the object user - device-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDeviceGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/device-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDeviceGroup API operation for FortiManager gets the Device Group
// with the specified index value.
// Returns the requested Device Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - device-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDeviceGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/device-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDomainController API operation for FortiManager creates a new Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDomainController(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDomainController API operation for FortiManager updates the specified Domain Controller.
// Returns the index value of the Domain Controller and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDomainController(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDomainController API operation for FortiManager deletes the specified Domain Controller.
// Returns error for service API and SDK errors.
// See the object user - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDomainController(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDomainController API operation for FortiManager gets the Domain Controller
// with the specified index value.
// Returns the requested Domain Controller value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDomainController(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserDomainControllerExtraServer API operation for FortiManager creates a new Domain ControllerExtra Server.
// Returns the index value of the Domain ControllerExtra Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller extra-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserDomainControllerExtraServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller/{domain-controller}/extra-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserDomainControllerExtraServer API operation for FortiManager updates the specified Domain ControllerExtra Server.
// Returns the index value of the Domain ControllerExtra Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller extra-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserDomainControllerExtraServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller/{domain-controller}/extra-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserDomainControllerExtraServer API operation for FortiManager deletes the specified Domain ControllerExtra Server.
// Returns error for service API and SDK errors.
// See the object user - domain-controller extra-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserDomainControllerExtraServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/domain-controller/{domain-controller}/extra-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserDomainControllerExtraServer API operation for FortiManager gets the Domain ControllerExtra Server
// with the specified index value.
// Returns the requested Domain ControllerExtra Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - domain-controller extra-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserDomainControllerExtraServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/domain-controller/{domain-controller}/extra-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserExchange API operation for FortiManager creates a new Exchange.
// Returns the index value of the Exchange and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - exchange chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserExchange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/exchange"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserExchange API operation for FortiManager updates the specified Exchange.
// Returns the index value of the Exchange and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - exchange chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserExchange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/exchange"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserExchange API operation for FortiManager deletes the specified Exchange.
// Returns error for service API and SDK errors.
// See the object user - exchange chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserExchange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/exchange"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserExchange API operation for FortiManager gets the Exchange
// with the specified index value.
// Returns the requested Exchange value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - exchange chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserExchange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/exchange"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserExternalIdentityProvider API operation for FortiManager creates a new External Identity Provider.
// Returns the index value of the External Identity Provider and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - external-identity-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserExternalIdentityProvider(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/external-identity-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserExternalIdentityProvider API operation for FortiManager updates the specified External Identity Provider.
// Returns the index value of the External Identity Provider and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - external-identity-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserExternalIdentityProvider(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/external-identity-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserExternalIdentityProvider API operation for FortiManager deletes the specified External Identity Provider.
// Returns error for service API and SDK errors.
// See the object user - external-identity-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserExternalIdentityProvider(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/external-identity-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserExternalIdentityProvider API operation for FortiManager gets the External Identity Provider
// with the specified index value.
// Returns the requested External Identity Provider value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - external-identity-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserExternalIdentityProvider(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/external-identity-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFlexvm API operation for FortiManager creates a new Flexvm.
// Returns the index value of the Flexvm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - flexvm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFlexvm(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/flexvm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFlexvm API operation for FortiManager updates the specified Flexvm.
// Returns the index value of the Flexvm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - flexvm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFlexvm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/flexvm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFlexvm API operation for FortiManager deletes the specified Flexvm.
// Returns error for service API and SDK errors.
// See the object user - flexvm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFlexvm(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/flexvm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFlexvm API operation for FortiManager gets the Flexvm
// with the specified index value.
// Returns the requested Flexvm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - flexvm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFlexvm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/flexvm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFortitoken API operation for FortiManager creates a new Fortitoken.
// Returns the index value of the Fortitoken and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fortitoken chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFortitoken(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fortitoken"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFortitoken API operation for FortiManager updates the specified Fortitoken.
// Returns the index value of the Fortitoken and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fortitoken chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFortitoken(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fortitoken"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFortitoken API operation for FortiManager deletes the specified Fortitoken.
// Returns error for service API and SDK errors.
// See the object user - fortitoken chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFortitoken(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/fortitoken"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFortitoken API operation for FortiManager gets the Fortitoken
// with the specified index value.
// Returns the requested Fortitoken value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fortitoken chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFortitoken(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fortitoken"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFsso API operation for FortiManager creates a new Fsso.
// Returns the index value of the Fsso and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFsso(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFsso API operation for FortiManager updates the specified Fsso.
// Returns the index value of the Fsso and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFsso(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFsso API operation for FortiManager deletes the specified Fsso.
// Returns error for service API and SDK errors.
// See the object user - fsso chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFsso(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/fsso"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFsso API operation for FortiManager gets the Fsso
// with the specified index value.
// Returns the requested Fsso value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFsso(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFssoPolling API operation for FortiManager creates a new Fsso Polling.
// Returns the index value of the Fsso Polling and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFssoPolling(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFssoPolling API operation for FortiManager updates the specified Fsso Polling.
// Returns the index value of the Fsso Polling and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFssoPolling(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFssoPolling API operation for FortiManager deletes the specified Fsso Polling.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFssoPolling(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFssoPolling API operation for FortiManager gets the Fsso Polling
// with the specified index value.
// Returns the requested Fsso Polling value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFssoPolling(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFssoPollingAdgrp API operation for FortiManager creates a new Fsso PollingAdgrp.
// Returns the index value of the Fsso PollingAdgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFssoPollingAdgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling/{fsso-polling}/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFssoPollingAdgrp API operation for FortiManager updates the specified Fsso PollingAdgrp.
// Returns the index value of the Fsso PollingAdgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFssoPollingAdgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling/{fsso-polling}/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFssoPollingAdgrp API operation for FortiManager deletes the specified Fsso PollingAdgrp.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFssoPollingAdgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling/{fsso-polling}/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFssoPollingAdgrp API operation for FortiManager gets the Fsso PollingAdgrp
// with the specified index value.
// Returns the requested Fsso PollingAdgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso-polling adgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFssoPollingAdgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso-polling/{fsso-polling}/adgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserFssoDynamicMapping API operation for FortiManager creates a new FssoDynamicMapping.
// Returns the index value of the FssoDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserFssoDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso/{fsso}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserFssoDynamicMapping API operation for FortiManager updates the specified FssoDynamicMapping.
// Returns the index value of the FssoDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserFssoDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso/{fsso}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserFssoDynamicMapping API operation for FortiManager deletes the specified FssoDynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - fsso dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserFssoDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/fsso/{fsso}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserFssoDynamicMapping API operation for FortiManager gets the FssoDynamicMapping
// with the specified index value.
// Returns the requested FssoDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - fsso dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserFssoDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/fsso/{fsso}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserGroup API operation for FortiManager creates a new Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserGroup API operation for FortiManager updates the specified Group.
// Returns the index value of the Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserGroup API operation for FortiManager deletes the specified Group.
// Returns error for service API and SDK errors.
// See the object user - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserGroup API operation for FortiManager gets the Group
// with the specified index value.
// Returns the requested Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserGroupDynamicMapping API operation for FortiManager creates a new GroupDynamicMapping.
// Returns the index value of the GroupDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserGroupDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserGroupDynamicMapping API operation for FortiManager updates the specified GroupDynamicMapping.
// Returns the index value of the GroupDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserGroupDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserGroupDynamicMapping API operation for FortiManager deletes the specified GroupDynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserGroupDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserGroupDynamicMapping API operation for FortiManager gets the GroupDynamicMapping
// with the specified index value.
// Returns the requested GroupDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserGroupDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserGroupDynamicMappingMatch API operation for FortiManager creates a new GroupDynamicMappingMatch.
// Returns the index value of the GroupDynamicMappingMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserGroupDynamicMappingMatch(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserGroupDynamicMappingMatch API operation for FortiManager updates the specified GroupDynamicMappingMatch.
// Returns the index value of the GroupDynamicMappingMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserGroupDynamicMappingMatch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserGroupDynamicMappingMatch API operation for FortiManager deletes the specified GroupDynamicMappingMatch.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserGroupDynamicMappingMatch(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserGroupDynamicMappingMatch API operation for FortiManager gets the GroupDynamicMappingMatch
// with the specified index value.
// Returns the requested GroupDynamicMappingMatch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group dynamic mapping match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserGroupDynamicMappingMatch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserGroupMatch API operation for FortiManager creates a new GroupMatch.
// Returns the index value of the GroupMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserGroupMatch(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserGroupMatch API operation for FortiManager updates the specified GroupMatch.
// Returns the index value of the GroupMatch and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserGroupMatch(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserGroupMatch API operation for FortiManager deletes the specified GroupMatch.
// Returns error for service API and SDK errors.
// See the object user - group match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserGroupMatch(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserGroupMatch API operation for FortiManager gets the GroupMatch
// with the specified index value.
// Returns the requested GroupMatch value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - group match chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserGroupMatch(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/group/{group}/match"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserJson API operation for FortiManager creates a new Json.
// Returns the index value of the Json and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - json chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserJson(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/json"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserJson API operation for FortiManager updates the specified Json.
// Returns the index value of the Json and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - json chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserJson(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/json"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserJson API operation for FortiManager deletes the specified Json.
// Returns error for service API and SDK errors.
// See the object user - json chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserJson(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/json"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserJson API operation for FortiManager gets the Json
// with the specified index value.
// Returns the requested Json value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - json chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserJson(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/json"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserKrbKeytab API operation for FortiManager creates a new Krb Keytab.
// Returns the index value of the Krb Keytab and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - krb-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserKrbKeytab(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/krb-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserKrbKeytab API operation for FortiManager updates the specified Krb Keytab.
// Returns the index value of the Krb Keytab and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - krb-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserKrbKeytab(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/krb-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserKrbKeytab API operation for FortiManager deletes the specified Krb Keytab.
// Returns error for service API and SDK errors.
// See the object user - krb-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserKrbKeytab(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/krb-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserKrbKeytab API operation for FortiManager gets the Krb Keytab
// with the specified index value.
// Returns the requested Krb Keytab value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - krb-keytab chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserKrbKeytab(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/krb-keytab"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserLdap API operation for FortiManager creates a new Ldap.
// Returns the index value of the Ldap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserLdap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserLdap API operation for FortiManager updates the specified Ldap.
// Returns the index value of the Ldap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserLdap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserLdap API operation for FortiManager deletes the specified Ldap.
// Returns error for service API and SDK errors.
// See the object user - ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserLdap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserLdap API operation for FortiManager gets the Ldap
// with the specified index value.
// Returns the requested Ldap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserLdap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserLdapDynamicMapping API operation for FortiManager creates a new LdapDynamicMapping.
// Returns the index value of the LdapDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserLdapDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap/{ldap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserLdapDynamicMapping API operation for FortiManager updates the specified LdapDynamicMapping.
// Returns the index value of the LdapDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserLdapDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap/{ldap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserLdapDynamicMapping API operation for FortiManager deletes the specified LdapDynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - ldap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserLdapDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/ldap/{ldap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserLdapDynamicMapping API operation for FortiManager gets the LdapDynamicMapping
// with the specified index value.
// Returns the requested LdapDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - ldap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserLdapDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/ldap/{ldap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserLocal API operation for FortiManager creates a new Local.
// Returns the index value of the Local and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserLocal(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserLocal API operation for FortiManager updates the specified Local.
// Returns the index value of the Local and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserLocal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserLocal API operation for FortiManager deletes the specified Local.
// Returns error for service API and SDK errors.
// See the object user - local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserLocal(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserLocal API operation for FortiManager gets the Local
// with the specified index value.
// Returns the requested Local value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserLocal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserNsx API operation for FortiManager creates a new Nsx.
// Returns the index value of the Nsx and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserNsx(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserNsx API operation for FortiManager updates the specified Nsx.
// Returns the index value of the Nsx and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserNsx(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserNsx API operation for FortiManager deletes the specified Nsx.
// Returns error for service API and SDK errors.
// See the object user - nsx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserNsx(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/nsx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserNsx API operation for FortiManager gets the Nsx
// with the specified index value.
// Returns the requested Nsx value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserNsx(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserNsxService API operation for FortiManager creates a new NsxService.
// Returns the index value of the NsxService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserNsxService(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx/{nsx}/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserNsxService API operation for FortiManager updates the specified NsxService.
// Returns the index value of the NsxService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserNsxService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx/{nsx}/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserNsxService API operation for FortiManager deletes the specified NsxService.
// Returns error for service API and SDK errors.
// See the object user - nsx service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserNsxService(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/nsx/{nsx}/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserNsxService API operation for FortiManager gets the NsxService
// with the specified index value.
// Returns the requested NsxService value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - nsx service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserNsxService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/nsx/{nsx}/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserPasswordPolicy API operation for FortiManager creates a new Password Policy.
// Returns the index value of the Password Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserPasswordPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserPasswordPolicy API operation for FortiManager updates the specified Password Policy.
// Returns the index value of the Password Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserPasswordPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserPasswordPolicy API operation for FortiManager deletes the specified Password Policy.
// Returns error for service API and SDK errors.
// See the object user - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserPasswordPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserPasswordPolicy API operation for FortiManager gets the Password Policy
// with the specified index value.
// Returns the requested Password Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserPasswordPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserPeer API operation for FortiManager creates a new Peer.
// Returns the index value of the Peer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserPeer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserPeer API operation for FortiManager updates the specified Peer.
// Returns the index value of the Peer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserPeer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserPeer API operation for FortiManager deletes the specified Peer.
// Returns error for service API and SDK errors.
// See the object user - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserPeer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserPeer API operation for FortiManager gets the Peer
// with the specified index value.
// Returns the requested Peer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserPeer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserPeergrp API operation for FortiManager creates a new Peergrp.
// Returns the index value of the Peergrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peergrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserPeergrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peergrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserPeergrp API operation for FortiManager updates the specified Peergrp.
// Returns the index value of the Peergrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peergrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserPeergrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peergrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserPeergrp API operation for FortiManager deletes the specified Peergrp.
// Returns error for service API and SDK errors.
// See the object user - peergrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserPeergrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/peergrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserPeergrp API operation for FortiManager gets the Peergrp
// with the specified index value.
// Returns the requested Peergrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - peergrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserPeergrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/peergrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserPop3 API operation for FortiManager creates a new Pop3.
// Returns the index value of the Pop3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserPop3(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserPop3 API operation for FortiManager updates the specified Pop3.
// Returns the index value of the Pop3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserPop3(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserPop3 API operation for FortiManager deletes the specified Pop3.
// Returns error for service API and SDK errors.
// See the object user - pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserPop3(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserPop3 API operation for FortiManager gets the Pop3
// with the specified index value.
// Returns the requested Pop3 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pop3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserPop3(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pop3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserPxgrid API operation for FortiManager creates a new Pxgrid.
// Returns the index value of the Pxgrid and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pxgrid chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserPxgrid(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pxgrid"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserPxgrid API operation for FortiManager updates the specified Pxgrid.
// Returns the index value of the Pxgrid and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pxgrid chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserPxgrid(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pxgrid"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserPxgrid API operation for FortiManager deletes the specified Pxgrid.
// Returns error for service API and SDK errors.
// See the object user - pxgrid chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserPxgrid(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/pxgrid"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserPxgrid API operation for FortiManager gets the Pxgrid
// with the specified index value.
// Returns the requested Pxgrid value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - pxgrid chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserPxgrid(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/pxgrid"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserRadius API operation for FortiManager creates a new Radius.
// Returns the index value of the Radius and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserRadius(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserRadius API operation for FortiManager updates the specified Radius.
// Returns the index value of the Radius and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserRadius(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserRadius API operation for FortiManager deletes the specified Radius.
// Returns error for service API and SDK errors.
// See the object user - radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserRadius(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserRadius API operation for FortiManager gets the Radius
// with the specified index value.
// Returns the requested Radius value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserRadius(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserRadiusAccountingServer API operation for FortiManager creates a new RadiusAccounting Server.
// Returns the index value of the RadiusAccounting Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserRadiusAccountingServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserRadiusAccountingServer API operation for FortiManager updates the specified RadiusAccounting Server.
// Returns the index value of the RadiusAccounting Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserRadiusAccountingServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserRadiusAccountingServer API operation for FortiManager deletes the specified RadiusAccounting Server.
// Returns error for service API and SDK errors.
// See the object user - radius accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserRadiusAccountingServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserRadiusAccountingServer API operation for FortiManager gets the RadiusAccounting Server
// with the specified index value.
// Returns the requested RadiusAccounting Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserRadiusAccountingServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserRadiusDynamicMapping API operation for FortiManager creates a new RadiusDynamicMapping.
// Returns the index value of the RadiusDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserRadiusDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserRadiusDynamicMapping API operation for FortiManager updates the specified RadiusDynamicMapping.
// Returns the index value of the RadiusDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserRadiusDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserRadiusDynamicMapping API operation for FortiManager deletes the specified RadiusDynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserRadiusDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserRadiusDynamicMapping API operation for FortiManager gets the RadiusDynamicMapping
// with the specified index value.
// Returns the requested RadiusDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserRadiusDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserRadiusDynamicMappingAccountingServer API operation for FortiManager creates a new RadiusDynamicMappingAccounting Server.
// Returns the index value of the RadiusDynamicMappingAccounting Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserRadiusDynamicMappingAccountingServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserRadiusDynamicMappingAccountingServer API operation for FortiManager updates the specified RadiusDynamicMappingAccounting Server.
// Returns the index value of the RadiusDynamicMappingAccounting Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserRadiusDynamicMappingAccountingServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserRadiusDynamicMappingAccountingServer API operation for FortiManager deletes the specified RadiusDynamicMappingAccounting Server.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserRadiusDynamicMappingAccountingServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserRadiusDynamicMappingAccountingServer API operation for FortiManager gets the RadiusDynamicMappingAccounting Server
// with the specified index value.
// Returns the requested RadiusDynamicMappingAccounting Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - radius dynamic mapping accounting-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserRadiusDynamicMappingAccountingServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/radius/{radius}/dynamic_mapping/{dynamic_mapping_name}/{dynamic_mapping_vdom}/accounting-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserSaml API operation for FortiManager creates a new Saml.
// Returns the index value of the Saml and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserSaml(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserSaml API operation for FortiManager updates the specified Saml.
// Returns the index value of the Saml and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserSaml(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserSaml API operation for FortiManager deletes the specified Saml.
// Returns error for service API and SDK errors.
// See the object user - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserSaml(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserSaml API operation for FortiManager gets the Saml
// with the specified index value.
// Returns the requested Saml value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserSaml(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserSamlDynamicMapping API operation for FortiManager creates a new SamlDynamicMapping.
// Returns the index value of the SamlDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserSamlDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml/{saml}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserSamlDynamicMapping API operation for FortiManager updates the specified SamlDynamicMapping.
// Returns the index value of the SamlDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserSamlDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml/{saml}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserSamlDynamicMapping API operation for FortiManager deletes the specified SamlDynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - saml dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserSamlDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/saml/{saml}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserSamlDynamicMapping API operation for FortiManager gets the SamlDynamicMapping
// with the specified index value.
// Returns the requested SamlDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - saml dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserSamlDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/saml/{saml}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserSecurityExemptList API operation for FortiManager creates a new Security Exempt List.
// Returns the index value of the Security Exempt List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserSecurityExemptList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserSecurityExemptList API operation for FortiManager updates the specified Security Exempt List.
// Returns the index value of the Security Exempt List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserSecurityExemptList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserSecurityExemptList API operation for FortiManager deletes the specified Security Exempt List.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserSecurityExemptList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserSecurityExemptList API operation for FortiManager gets the Security Exempt List
// with the specified index value.
// Returns the requested Security Exempt List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserSecurityExemptList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserSecurityExemptListRule API operation for FortiManager creates a new Security Exempt ListRule.
// Returns the index value of the Security Exempt ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserSecurityExemptListRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list/{security-exempt-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserSecurityExemptListRule API operation for FortiManager updates the specified Security Exempt ListRule.
// Returns the index value of the Security Exempt ListRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserSecurityExemptListRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list/{security-exempt-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserSecurityExemptListRule API operation for FortiManager deletes the specified Security Exempt ListRule.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserSecurityExemptListRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list/{security-exempt-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserSecurityExemptListRule API operation for FortiManager gets the Security Exempt ListRule
// with the specified index value.
// Returns the requested Security Exempt ListRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - security-exempt-list rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserSecurityExemptListRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/security-exempt-list/{security-exempt-list}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserTacacs API operation for FortiManager creates a new Tacacs+.
// Returns the index value of the Tacacs+ and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserTacacs(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserTacacs API operation for FortiManager updates the specified Tacacs+.
// Returns the index value of the Tacacs+ and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserTacacs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserTacacs API operation for FortiManager deletes the specified Tacacs+.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserTacacs(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/tacacs+"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserTacacs API operation for FortiManager gets the Tacacs+
// with the specified index value.
// Returns the requested Tacacs+ value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserTacacs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserTacacsDynamicMapping API operation for FortiManager creates a new Tacacs+DynamicMapping.
// Returns the index value of the Tacacs+DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserTacacsDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+/{tacacs+}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserTacacsDynamicMapping API operation for FortiManager updates the specified Tacacs+DynamicMapping.
// Returns the index value of the Tacacs+DynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserTacacsDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+/{tacacs+}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserTacacsDynamicMapping API operation for FortiManager deletes the specified Tacacs+DynamicMapping.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserTacacsDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/tacacs+/{tacacs+}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserTacacsDynamicMapping API operation for FortiManager gets the Tacacs+DynamicMapping
// with the specified index value.
// Returns the requested Tacacs+DynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - tacacs+ dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserTacacsDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/tacacs+/{tacacs+}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserVcenter API operation for FortiManager creates a new Vcenter.
// Returns the index value of the Vcenter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserVcenter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserVcenter API operation for FortiManager updates the specified Vcenter.
// Returns the index value of the Vcenter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserVcenter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserVcenter API operation for FortiManager deletes the specified Vcenter.
// Returns error for service API and SDK errors.
// See the object user - vcenter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserVcenter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/vcenter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserVcenter API operation for FortiManager gets the Vcenter
// with the specified index value.
// Returns the requested Vcenter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserVcenter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectUserVcenterRule API operation for FortiManager creates a new VcenterRule.
// Returns the index value of the VcenterRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectUserVcenterRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter/{vcenter}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectUserVcenterRule API operation for FortiManager updates the specified VcenterRule.
// Returns the index value of the VcenterRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectUserVcenterRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter/{vcenter}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectUserVcenterRule API operation for FortiManager deletes the specified VcenterRule.
// Returns error for service API and SDK errors.
// See the object user - vcenter rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectUserVcenterRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/user/vcenter/{vcenter}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectUserVcenterRule API operation for FortiManager gets the VcenterRule
// with the specified index value.
// Returns the requested VcenterRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object user - vcenter rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectUserVcenterRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/user/vcenter/{vcenter}/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterKeyword API operation for FortiManager creates a new Keyword.
// Returns the index value of the Keyword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterKeyword(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterKeyword API operation for FortiManager updates the specified Keyword.
// Returns the index value of the Keyword and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterKeyword(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterKeyword API operation for FortiManager deletes the specified Keyword.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterKeyword(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterKeyword API operation for FortiManager gets the Keyword
// with the specified index value.
// Returns the requested Keyword value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterKeyword(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterKeywordWord API operation for FortiManager creates a new KeywordWord.
// Returns the index value of the KeywordWord and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword word chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterKeywordWord(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword/{keyword}/word"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterKeywordWord API operation for FortiManager updates the specified KeywordWord.
// Returns the index value of the KeywordWord and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword word chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterKeywordWord(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword/{keyword}/word"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterKeywordWord API operation for FortiManager deletes the specified KeywordWord.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword word chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterKeywordWord(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword/{keyword}/word"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterKeywordWord API operation for FortiManager gets the KeywordWord
// with the specified index value.
// Returns the requested KeywordWord value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - keyword word chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterKeywordWord(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/keyword/{keyword}/word"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object videofilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterProfileFilters API operation for FortiManager creates a new ProfileFilters.
// Returns the index value of the ProfileFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterProfileFilters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterProfileFilters API operation for FortiManager updates the specified ProfileFilters.
// Returns the index value of the ProfileFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfileFilters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterProfileFilters API operation for FortiManager deletes the specified ProfileFilters.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterProfileFilters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterProfileFilters API operation for FortiManager gets the ProfileFilters
// with the specified index value.
// Returns the requested ProfileFilters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfileFilters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVideofilterProfileFiltersMove API operation for FortiManager updates the specified ProfileFiltersMove.
// Returns the index value of the ProfileFiltersMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfileFiltersMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters/{filters}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVideofilterProfileFiltersMove API operation for FortiManager gets the ProfileFiltersMove
// with the specified index value.
// Returns the requested ProfileFiltersMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile filters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfileFiltersMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectVideofilterProfileFortiguardCategory API operation for FortiManager updates the specified ProfileFortiguard Category.
// Returns the index value of the ProfileFortiguard Category and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfileFortiguardCategory(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterProfileFortiguardCategory API operation for FortiManager deletes the specified ProfileFortiguard Category.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterProfileFortiguardCategory(mkey string, paradict map[string]string) (err error) {

	//No unset API for object videofilter - profile fortiguard-category
	return
}

// ReadObjectVideofilterProfileFortiguardCategory API operation for FortiManager gets the ProfileFortiguard Category
// with the specified index value.
// Returns the requested ProfileFortiguard Category value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfileFortiguardCategory(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterProfileFortiguardCategoryFilters API operation for FortiManager creates a new ProfileFortiguard CategoryFilters.
// Returns the index value of the ProfileFortiguard CategoryFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterProfileFortiguardCategoryFilters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterProfileFortiguardCategoryFilters API operation for FortiManager updates the specified ProfileFortiguard CategoryFilters.
// Returns the index value of the ProfileFortiguard CategoryFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfileFortiguardCategoryFilters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterProfileFortiguardCategoryFilters API operation for FortiManager deletes the specified ProfileFortiguard CategoryFilters.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterProfileFortiguardCategoryFilters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterProfileFortiguardCategoryFilters API operation for FortiManager gets the ProfileFortiguard CategoryFilters
// with the specified index value.
// Returns the requested ProfileFortiguard CategoryFilters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfileFortiguardCategoryFilters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVideofilterProfileFortiguardCategoryFiltersMove API operation for FortiManager updates the specified ProfileFortiguard CategoryFiltersMove.
// Returns the index value of the ProfileFortiguard CategoryFiltersMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterProfileFortiguardCategoryFiltersMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters/{filters}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVideofilterProfileFortiguardCategoryFiltersMove API operation for FortiManager gets the ProfileFortiguard CategoryFiltersMove
// with the specified index value.
// Returns the requested ProfileFortiguard CategoryFiltersMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - profile fortiguard-category filters move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterProfileFortiguardCategoryFiltersMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/profile/{profile}/fortiguard-category/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectVideofilterYoutubeChannelFilter API operation for FortiManager creates a new Youtube Channel Filter.
// Returns the index value of the Youtube Channel Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterYoutubeChannelFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterYoutubeChannelFilter API operation for FortiManager updates the specified Youtube Channel Filter.
// Returns the index value of the Youtube Channel Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterYoutubeChannelFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterYoutubeChannelFilter API operation for FortiManager deletes the specified Youtube Channel Filter.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterYoutubeChannelFilter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterYoutubeChannelFilter API operation for FortiManager gets the Youtube Channel Filter
// with the specified index value.
// Returns the requested Youtube Channel Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterYoutubeChannelFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVideofilterYoutubeKey API operation for FortiManager creates a new Youtube Key.
// Returns the index value of the Youtube Key and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVideofilterYoutubeKey(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVideofilterYoutubeKey API operation for FortiManager updates the specified Youtube Key.
// Returns the index value of the Youtube Key and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVideofilterYoutubeKey(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVideofilterYoutubeKey API operation for FortiManager deletes the specified Youtube Key.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVideofilterYoutubeKey(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVideofilterYoutubeKey API operation for FortiManager gets the Youtube Key
// with the specified index value.
// Returns the requested Youtube Key value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object videofilter - youtube-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVideofilterYoutubeKey(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/videofilter/youtube-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVirtualPatchProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVirtualPatchProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVirtualPatchProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVirtualPatchProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVirtualPatchProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVirtualPatchProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVirtualPatchProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVirtualPatchProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVirtualPatchProfileExemption API operation for FortiManager creates a new ProfileExemption.
// Returns the index value of the ProfileExemption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile exemption chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVirtualPatchProfileExemption(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile/{profile}/exemption"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVirtualPatchProfileExemption API operation for FortiManager updates the specified ProfileExemption.
// Returns the index value of the ProfileExemption and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile exemption chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVirtualPatchProfileExemption(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile/{profile}/exemption"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVirtualPatchProfileExemption API operation for FortiManager deletes the specified ProfileExemption.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile exemption chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVirtualPatchProfileExemption(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile/{profile}/exemption"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVirtualPatchProfileExemption API operation for FortiManager gets the ProfileExemption
// with the specified index value.
// Returns the requested ProfileExemption value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object virtual-patch - profile exemption chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVirtualPatchProfileExemption(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/virtual-patch/profile/{profile}/exemption"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVoipProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVoipProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVoipProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVoipProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVoipProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object voip - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVoipProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/voip/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVoipProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVoipProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVoipProfileMsrp API operation for FortiManager updates the specified ProfileMsrp.
// Returns the index value of the ProfileMsrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile msrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVoipProfileMsrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/msrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVoipProfileMsrp API operation for FortiManager deletes the specified ProfileMsrp.
// Returns error for service API and SDK errors.
// See the object voip - profile msrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVoipProfileMsrp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object voip - profile msrp
	return
}

// ReadObjectVoipProfileMsrp API operation for FortiManager gets the ProfileMsrp
// with the specified index value.
// Returns the requested ProfileMsrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile msrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVoipProfileMsrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/msrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVoipProfileSccp API operation for FortiManager updates the specified ProfileSccp.
// Returns the index value of the ProfileSccp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile sccp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVoipProfileSccp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/sccp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVoipProfileSccp API operation for FortiManager deletes the specified ProfileSccp.
// Returns error for service API and SDK errors.
// See the object voip - profile sccp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVoipProfileSccp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object voip - profile sccp
	return
}

// ReadObjectVoipProfileSccp API operation for FortiManager gets the ProfileSccp
// with the specified index value.
// Returns the requested ProfileSccp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile sccp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVoipProfileSccp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/sccp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVoipProfileSip API operation for FortiManager updates the specified ProfileSip.
// Returns the index value of the ProfileSip and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile sip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVoipProfileSip(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/sip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVoipProfileSip API operation for FortiManager deletes the specified ProfileSip.
// Returns error for service API and SDK errors.
// See the object voip - profile sip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVoipProfileSip(mkey string, paradict map[string]string) (err error) {

	//No unset API for object voip - profile sip
	return
}

// ReadObjectVoipProfileSip API operation for FortiManager gets the ProfileSip
// with the specified index value.
// Returns the requested ProfileSip value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object voip - profile sip chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVoipProfileSip(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/voip/profile/{profile}/sip"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnCertificateCa API operation for FortiManager creates a new CertificateCa.
// Returns the index value of the CertificateCa and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnCertificateCa(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnCertificateCa API operation for FortiManager updates the specified CertificateCa.
// Returns the index value of the CertificateCa and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnCertificateCa(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnCertificateCa API operation for FortiManager deletes the specified CertificateCa.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnCertificateCa(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnCertificateCa API operation for FortiManager gets the CertificateCa
// with the specified index value.
// Returns the requested CertificateCa value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnCertificateCa(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnCertificateOcspServer API operation for FortiManager creates a new CertificateOcsp Server.
// Returns the index value of the CertificateOcsp Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ocsp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnCertificateOcspServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ocsp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnCertificateOcspServer API operation for FortiManager updates the specified CertificateOcsp Server.
// Returns the index value of the CertificateOcsp Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ocsp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnCertificateOcspServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ocsp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnCertificateOcspServer API operation for FortiManager deletes the specified CertificateOcsp Server.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ocsp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnCertificateOcspServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ocsp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnCertificateOcspServer API operation for FortiManager gets the CertificateOcsp Server
// with the specified index value.
// Returns the requested CertificateOcsp Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate ocsp-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnCertificateOcspServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/ocsp-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnCertificateRemote API operation for FortiManager creates a new CertificateRemote.
// Returns the index value of the CertificateRemote and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnCertificateRemote(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnCertificateRemote API operation for FortiManager updates the specified CertificateRemote.
// Returns the index value of the CertificateRemote and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnCertificateRemote(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnCertificateRemote API operation for FortiManager deletes the specified CertificateRemote.
// Returns error for service API and SDK errors.
// See the object vpn - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnCertificateRemote(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnCertificateRemote API operation for FortiManager gets the CertificateRemote
// with the specified index value.
// Returns the requested CertificateRemote value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnCertificateRemote(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnIpsecFec API operation for FortiManager creates a new IpsecFec.
// Returns the index value of the IpsecFec and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnIpsecFec(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnIpsecFec API operation for FortiManager updates the specified IpsecFec.
// Returns the index value of the IpsecFec and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnIpsecFec(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnIpsecFec API operation for FortiManager deletes the specified IpsecFec.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnIpsecFec(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnIpsecFec API operation for FortiManager gets the IpsecFec
// with the specified index value.
// Returns the requested IpsecFec value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnIpsecFec(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnIpsecFecMappings API operation for FortiManager creates a new IpsecFecMappings.
// Returns the index value of the IpsecFecMappings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnIpsecFecMappings(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnIpsecFecMappings API operation for FortiManager updates the specified IpsecFecMappings.
// Returns the index value of the IpsecFecMappings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnIpsecFecMappings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnIpsecFecMappings API operation for FortiManager deletes the specified IpsecFecMappings.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnIpsecFecMappings(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnIpsecFecMappings API operation for FortiManager gets the IpsecFecMappings
// with the specified index value.
// Returns the requested IpsecFecMappings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnIpsecFecMappings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVpnIpsecFecMappingsMove API operation for FortiManager updates the specified IpsecFecMappingsMove.
// Returns the index value of the IpsecFecMappingsMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnIpsecFecMappingsMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings/{mappings}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVpnIpsecFecMappingsMove API operation for FortiManager gets the IpsecFecMappingsMove
// with the specified index value.
// Returns the requested IpsecFecMappingsMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ipsec fec mappings move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnIpsecFecMappingsMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ipsec/fec/{fec}/mappings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"seqno"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectVpnSslWebHostCheckSoftware API operation for FortiManager creates a new SslWebHost Check Software.
// Returns the index value of the SslWebHost Check Software and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebHostCheckSoftware(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebHostCheckSoftware API operation for FortiManager updates the specified SslWebHost Check Software.
// Returns the index value of the SslWebHost Check Software and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebHostCheckSoftware(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebHostCheckSoftware API operation for FortiManager deletes the specified SslWebHost Check Software.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebHostCheckSoftware(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebHostCheckSoftware API operation for FortiManager gets the SslWebHost Check Software
// with the specified index value.
// Returns the requested SslWebHost Check Software value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebHostCheckSoftware(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebHostCheckSoftwareCheckItemList API operation for FortiManager creates a new SslWebHost Check SoftwareCheck Item List.
// Returns the index value of the SslWebHost Check SoftwareCheck Item List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software check-item-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebHostCheckSoftwareCheckItemList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software/{host-check-software}/check-item-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebHostCheckSoftwareCheckItemList API operation for FortiManager updates the specified SslWebHost Check SoftwareCheck Item List.
// Returns the index value of the SslWebHost Check SoftwareCheck Item List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software check-item-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebHostCheckSoftwareCheckItemList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software/{host-check-software}/check-item-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebHostCheckSoftwareCheckItemList API operation for FortiManager deletes the specified SslWebHost Check SoftwareCheck Item List.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software check-item-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebHostCheckSoftwareCheckItemList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software/{host-check-software}/check-item-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebHostCheckSoftwareCheckItemList API operation for FortiManager gets the SslWebHost Check SoftwareCheck Item List
// with the specified index value.
// Returns the requested SslWebHost Check SoftwareCheck Item List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web host-check-software check-item-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebHostCheckSoftwareCheckItemList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/host-check-software/{host-check-software}/check-item-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortal API operation for FortiManager creates a new SslWebPortal.
// Returns the index value of the SslWebPortal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortal(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortal API operation for FortiManager updates the specified SslWebPortal.
// Returns the index value of the SslWebPortal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortal API operation for FortiManager deletes the specified SslWebPortal.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortal(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortal API operation for FortiManager gets the SslWebPortal
// with the specified index value.
// Returns the requested SslWebPortal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalBookmarkGroup API operation for FortiManager creates a new SslWebPortalBookmark Group.
// Returns the index value of the SslWebPortalBookmark Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalBookmarkGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalBookmarkGroup API operation for FortiManager updates the specified SslWebPortalBookmark Group.
// Returns the index value of the SslWebPortalBookmark Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalBookmarkGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalBookmarkGroup API operation for FortiManager deletes the specified SslWebPortalBookmark Group.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalBookmarkGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalBookmarkGroup API operation for FortiManager gets the SslWebPortalBookmark Group
// with the specified index value.
// Returns the requested SslWebPortalBookmark Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalBookmarkGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalBookmarkGroupBookmarks API operation for FortiManager creates a new SslWebPortalBookmark GroupBookmarks.
// Returns the index value of the SslWebPortalBookmark GroupBookmarks and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalBookmarkGroupBookmarks(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalBookmarkGroupBookmarks API operation for FortiManager updates the specified SslWebPortalBookmark GroupBookmarks.
// Returns the index value of the SslWebPortalBookmark GroupBookmarks and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalBookmarkGroupBookmarks(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalBookmarkGroupBookmarks API operation for FortiManager deletes the specified SslWebPortalBookmark GroupBookmarks.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalBookmarkGroupBookmarks(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalBookmarkGroupBookmarks API operation for FortiManager gets the SslWebPortalBookmark GroupBookmarks
// with the specified index value.
// Returns the requested SslWebPortalBookmark GroupBookmarks value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalBookmarkGroupBookmarks(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalBookmarkGroupBookmarksFormData API operation for FortiManager creates a new SslWebPortalBookmark GroupBookmarksForm Data.
// Returns the index value of the SslWebPortalBookmark GroupBookmarksForm Data and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalBookmarkGroupBookmarksFormData(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks/{bookmarks}/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalBookmarkGroupBookmarksFormData API operation for FortiManager updates the specified SslWebPortalBookmark GroupBookmarksForm Data.
// Returns the index value of the SslWebPortalBookmark GroupBookmarksForm Data and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalBookmarkGroupBookmarksFormData(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks/{bookmarks}/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalBookmarkGroupBookmarksFormData API operation for FortiManager deletes the specified SslWebPortalBookmark GroupBookmarksForm Data.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalBookmarkGroupBookmarksFormData(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks/{bookmarks}/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalBookmarkGroupBookmarksFormData API operation for FortiManager gets the SslWebPortalBookmark GroupBookmarksForm Data
// with the specified index value.
// Returns the requested SslWebPortalBookmark GroupBookmarksForm Data value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalBookmarkGroupBookmarksFormData(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks/{bookmarks}/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVpnSslWebPortalBookmarkGroupBookmarksMove API operation for FortiManager updates the specified SslWebPortalBookmark GroupBookmarksMove.
// Returns the index value of the SslWebPortalBookmark GroupBookmarksMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalBookmarkGroupBookmarksMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks/{bookmarks}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVpnSslWebPortalBookmarkGroupBookmarksMove API operation for FortiManager gets the SslWebPortalBookmark GroupBookmarksMove
// with the specified index value.
// Returns the requested SslWebPortalBookmark GroupBookmarksMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group bookmarks move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalBookmarkGroupBookmarksMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}/bookmarks"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectVpnSslWebPortalBookmarkGroupMove API operation for FortiManager updates the specified SslWebPortalBookmark GroupMove.
// Returns the index value of the SslWebPortalBookmark GroupMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalBookmarkGroupMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group/{bookmark-group}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVpnSslWebPortalBookmarkGroupMove API operation for FortiManager gets the SslWebPortalBookmark GroupMove
// with the specified index value.
// Returns the requested SslWebPortalBookmark GroupMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal bookmark-group move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalBookmarkGroupMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/bookmark-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateObjectVpnSslWebPortalLandingPage API operation for FortiManager updates the specified SslWebPortalLanding Page.
// Returns the index value of the SslWebPortalLanding Page and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalLandingPage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalLandingPage API operation for FortiManager deletes the specified SslWebPortalLanding Page.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalLandingPage(mkey string, paradict map[string]string) (err error) {

	//No unset API for object vpn - ssl web portal landing-page
	return
}

// ReadObjectVpnSslWebPortalLandingPage API operation for FortiManager gets the SslWebPortalLanding Page
// with the specified index value.
// Returns the requested SslWebPortalLanding Page value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalLandingPage(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalLandingPageFormData API operation for FortiManager creates a new SslWebPortalLanding PageForm Data.
// Returns the index value of the SslWebPortalLanding PageForm Data and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalLandingPageFormData(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalLandingPageFormData API operation for FortiManager updates the specified SslWebPortalLanding PageForm Data.
// Returns the index value of the SslWebPortalLanding PageForm Data and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalLandingPageFormData(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalLandingPageFormData API operation for FortiManager deletes the specified SslWebPortalLanding PageForm Data.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalLandingPageFormData(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalLandingPageFormData API operation for FortiManager gets the SslWebPortalLanding PageForm Data
// with the specified index value.
// Returns the requested SslWebPortalLanding PageForm Data value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal landing-page form-data chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalLandingPageFormData(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/landing-page/form-data"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalMacAddrCheckRule API operation for FortiManager creates a new SslWebPortalMac Addr Check Rule.
// Returns the index value of the SslWebPortalMac Addr Check Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal mac-addr-check-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalMacAddrCheckRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/mac-addr-check-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalMacAddrCheckRule API operation for FortiManager updates the specified SslWebPortalMac Addr Check Rule.
// Returns the index value of the SslWebPortalMac Addr Check Rule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal mac-addr-check-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalMacAddrCheckRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/mac-addr-check-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalMacAddrCheckRule API operation for FortiManager deletes the specified SslWebPortalMac Addr Check Rule.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal mac-addr-check-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalMacAddrCheckRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/mac-addr-check-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalMacAddrCheckRule API operation for FortiManager gets the SslWebPortalMac Addr Check Rule
// with the specified index value.
// Returns the requested SslWebPortalMac Addr Check Rule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal mac-addr-check-rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalMacAddrCheckRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/mac-addr-check-rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnSslWebPortalSplitDns API operation for FortiManager creates a new SslWebPortalSplit Dns.
// Returns the index value of the SslWebPortalSplit Dns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebPortalSplitDns(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebPortalSplitDns API operation for FortiManager updates the specified SslWebPortalSplit Dns.
// Returns the index value of the SslWebPortalSplit Dns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalSplitDns(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebPortalSplitDns API operation for FortiManager deletes the specified SslWebPortalSplit Dns.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebPortalSplitDns(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebPortalSplitDns API operation for FortiManager gets the SslWebPortalSplit Dns
// with the specified index value.
// Returns the requested SslWebPortalSplit Dns value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalSplitDns(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectVpnSslWebPortalSplitDnsMove API operation for FortiManager updates the specified SslWebPortalSplit DnsMove.
// Returns the index value of the SslWebPortalSplit DnsMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebPortalSplitDnsMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns/{split-dns}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectVpnSslWebPortalSplitDnsMove API operation for FortiManager gets the SslWebPortalSplit DnsMove
// with the specified index value.
// Returns the requested SslWebPortalSplit DnsMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web portal split-dns move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebPortalSplitDnsMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/portal/{portal}/split-dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectVpnSslWebRealm API operation for FortiManager creates a new SslWebRealm.
// Returns the index value of the SslWebRealm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnSslWebRealm(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnSslWebRealm API operation for FortiManager updates the specified SslWebRealm.
// Returns the index value of the SslWebRealm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnSslWebRealm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnSslWebRealm API operation for FortiManager deletes the specified SslWebRealm.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnSslWebRealm(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnSslWebRealm API operation for FortiManager gets the SslWebRealm
// with the specified index value.
// Returns the requested SslWebRealm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpn - ssl web realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnSslWebRealm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpn/ssl/web/realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnmgrNode API operation for FortiManager creates a new Node.
// Returns the index value of the Node and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnmgrNode(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnmgrNode API operation for FortiManager updates the specified Node.
// Returns the index value of the Node and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnmgrNode(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnmgrNode API operation for FortiManager deletes the specified Node.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnmgrNode(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnmgrNode API operation for FortiManager gets the Node
// with the specified index value.
// Returns the requested Node value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnmgrNode(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnmgrNodeIpRange API operation for FortiManager creates a new NodeIp Range.
// Returns the index value of the NodeIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnmgrNodeIpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnmgrNodeIpRange API operation for FortiManager updates the specified NodeIp Range.
// Returns the index value of the NodeIp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnmgrNodeIpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnmgrNodeIpRange API operation for FortiManager deletes the specified NodeIp Range.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnmgrNodeIpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnmgrNodeIpRange API operation for FortiManager gets the NodeIp Range
// with the specified index value.
// Returns the requested NodeIp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ip-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnmgrNodeIpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ip-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnmgrNodeIpv4ExcludeRange API operation for FortiManager creates a new NodeIpv4 Exclude Range.
// Returns the index value of the NodeIpv4 Exclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ipv4-exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnmgrNodeIpv4ExcludeRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ipv4-exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnmgrNodeIpv4ExcludeRange API operation for FortiManager updates the specified NodeIpv4 Exclude Range.
// Returns the index value of the NodeIpv4 Exclude Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ipv4-exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnmgrNodeIpv4ExcludeRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ipv4-exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnmgrNodeIpv4ExcludeRange API operation for FortiManager deletes the specified NodeIpv4 Exclude Range.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ipv4-exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnmgrNodeIpv4ExcludeRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ipv4-exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnmgrNodeIpv4ExcludeRange API operation for FortiManager gets the NodeIpv4 Exclude Range
// with the specified index value.
// Returns the requested NodeIpv4 Exclude Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node ipv4-exclude-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnmgrNodeIpv4ExcludeRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/ipv4-exclude-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnmgrNodeProtectedSubnet API operation for FortiManager creates a new NodeProtectedSubnet.
// Returns the index value of the NodeProtectedSubnet and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node protected subnet chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnmgrNodeProtectedSubnet(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/protected_subnet"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnmgrNodeProtectedSubnet API operation for FortiManager updates the specified NodeProtectedSubnet.
// Returns the index value of the NodeProtectedSubnet and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node protected subnet chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnmgrNodeProtectedSubnet(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/protected_subnet"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnmgrNodeProtectedSubnet API operation for FortiManager deletes the specified NodeProtectedSubnet.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node protected subnet chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnmgrNodeProtectedSubnet(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/protected_subnet"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnmgrNodeProtectedSubnet API operation for FortiManager gets the NodeProtectedSubnet
// with the specified index value.
// Returns the requested NodeProtectedSubnet value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node protected subnet chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnmgrNodeProtectedSubnet(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/protected_subnet"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectVpnmgrNodeSummaryAddr API operation for FortiManager creates a new NodeSummaryAddr.
// Returns the index value of the NodeSummaryAddr and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node summary addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectVpnmgrNodeSummaryAddr(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/summary_addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectVpnmgrNodeSummaryAddr API operation for FortiManager updates the specified NodeSummaryAddr.
// Returns the index value of the NodeSummaryAddr and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node summary addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectVpnmgrNodeSummaryAddr(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/summary_addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectVpnmgrNodeSummaryAddr API operation for FortiManager deletes the specified NodeSummaryAddr.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node summary addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectVpnmgrNodeSummaryAddr(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/summary_addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectVpnmgrNodeSummaryAddr API operation for FortiManager gets the NodeSummaryAddr
// with the specified index value.
// Returns the requested NodeSummaryAddr value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object vpnmgr - node summary addr chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectVpnmgrNodeSummaryAddr(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/vpnmgr/node/{node}/summary_addr"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafMainClass API operation for FortiManager creates a new Main Class.
// Returns the index value of the Main Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafMainClass(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafMainClass API operation for FortiManager updates the specified Main Class.
// Returns the index value of the Main Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafMainClass(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafMainClass API operation for FortiManager deletes the specified Main Class.
// Returns error for service API and SDK errors.
// See the object waf - main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafMainClass(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafMainClass API operation for FortiManager gets the Main Class
// with the specified index value.
// Returns the requested Main Class value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafMainClass(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object waf - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileAddressList API operation for FortiManager updates the specified ProfileAddress List.
// Returns the index value of the ProfileAddress List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile address-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileAddressList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/address-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileAddressList API operation for FortiManager deletes the specified ProfileAddress List.
// Returns error for service API and SDK errors.
// See the object waf - profile address-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileAddressList(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile address-list
	return
}

// ReadObjectWafProfileAddressList API operation for FortiManager gets the ProfileAddress List
// with the specified index value.
// Returns the requested ProfileAddress List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile address-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileAddressList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/address-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraint API operation for FortiManager updates the specified ProfileConstraint.
// Returns the index value of the ProfileConstraint and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraint(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraint API operation for FortiManager deletes the specified ProfileConstraint.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraint(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint
	return
}

// ReadObjectWafProfileConstraint API operation for FortiManager gets the ProfileConstraint
// with the specified index value.
// Returns the requested ProfileConstraint value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraint(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintContentLength API operation for FortiManager updates the specified ProfileConstraintContent Length.
// Returns the index value of the ProfileConstraintContent Length and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint content-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintContentLength(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/content-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintContentLength API operation for FortiManager deletes the specified ProfileConstraintContent Length.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint content-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintContentLength(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint content-length
	return
}

// ReadObjectWafProfileConstraintContentLength API operation for FortiManager gets the ProfileConstraintContent Length
// with the specified index value.
// Returns the requested ProfileConstraintContent Length value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint content-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintContentLength(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/content-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfileConstraintException API operation for FortiManager creates a new ProfileConstraintException.
// Returns the index value of the ProfileConstraintException and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint exception chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfileConstraintException(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/exception"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfileConstraintException API operation for FortiManager updates the specified ProfileConstraintException.
// Returns the index value of the ProfileConstraintException and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint exception chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintException(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/exception"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintException API operation for FortiManager deletes the specified ProfileConstraintException.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint exception chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintException(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/exception"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfileConstraintException API operation for FortiManager gets the ProfileConstraintException
// with the specified index value.
// Returns the requested ProfileConstraintException value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint exception chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintException(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/exception"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintHeaderLength API operation for FortiManager updates the specified ProfileConstraintHeader Length.
// Returns the index value of the ProfileConstraintHeader Length and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint header-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintHeaderLength(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/header-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintHeaderLength API operation for FortiManager deletes the specified ProfileConstraintHeader Length.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint header-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintHeaderLength(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint header-length
	return
}

// ReadObjectWafProfileConstraintHeaderLength API operation for FortiManager gets the ProfileConstraintHeader Length
// with the specified index value.
// Returns the requested ProfileConstraintHeader Length value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint header-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintHeaderLength(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/header-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintHostname API operation for FortiManager updates the specified ProfileConstraintHostname.
// Returns the index value of the ProfileConstraintHostname and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint hostname chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintHostname(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/hostname"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintHostname API operation for FortiManager deletes the specified ProfileConstraintHostname.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint hostname chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintHostname(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint hostname
	return
}

// ReadObjectWafProfileConstraintHostname API operation for FortiManager gets the ProfileConstraintHostname
// with the specified index value.
// Returns the requested ProfileConstraintHostname value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint hostname chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintHostname(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/hostname"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintLineLength API operation for FortiManager updates the specified ProfileConstraintLine Length.
// Returns the index value of the ProfileConstraintLine Length and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint line-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintLineLength(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/line-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintLineLength API operation for FortiManager deletes the specified ProfileConstraintLine Length.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint line-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintLineLength(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint line-length
	return
}

// ReadObjectWafProfileConstraintLineLength API operation for FortiManager gets the ProfileConstraintLine Length
// with the specified index value.
// Returns the requested ProfileConstraintLine Length value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint line-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintLineLength(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/line-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMalformed API operation for FortiManager updates the specified ProfileConstraintMalformed.
// Returns the index value of the ProfileConstraintMalformed and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint malformed chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMalformed(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/malformed"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMalformed API operation for FortiManager deletes the specified ProfileConstraintMalformed.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint malformed chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMalformed(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint malformed
	return
}

// ReadObjectWafProfileConstraintMalformed API operation for FortiManager gets the ProfileConstraintMalformed
// with the specified index value.
// Returns the requested ProfileConstraintMalformed value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint malformed chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMalformed(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/malformed"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMaxCookie API operation for FortiManager updates the specified ProfileConstraintMax Cookie.
// Returns the index value of the ProfileConstraintMax Cookie and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-cookie chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMaxCookie(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-cookie"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMaxCookie API operation for FortiManager deletes the specified ProfileConstraintMax Cookie.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-cookie chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMaxCookie(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint max-cookie
	return
}

// ReadObjectWafProfileConstraintMaxCookie API operation for FortiManager gets the ProfileConstraintMax Cookie
// with the specified index value.
// Returns the requested ProfileConstraintMax Cookie value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-cookie chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMaxCookie(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-cookie"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMaxHeaderLine API operation for FortiManager updates the specified ProfileConstraintMax Header Line.
// Returns the index value of the ProfileConstraintMax Header Line and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-header-line chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMaxHeaderLine(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-header-line"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMaxHeaderLine API operation for FortiManager deletes the specified ProfileConstraintMax Header Line.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-header-line chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMaxHeaderLine(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint max-header-line
	return
}

// ReadObjectWafProfileConstraintMaxHeaderLine API operation for FortiManager gets the ProfileConstraintMax Header Line
// with the specified index value.
// Returns the requested ProfileConstraintMax Header Line value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-header-line chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMaxHeaderLine(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-header-line"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMaxRangeSegment API operation for FortiManager updates the specified ProfileConstraintMax Range Segment.
// Returns the index value of the ProfileConstraintMax Range Segment and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-range-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMaxRangeSegment(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-range-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMaxRangeSegment API operation for FortiManager deletes the specified ProfileConstraintMax Range Segment.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-range-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMaxRangeSegment(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint max-range-segment
	return
}

// ReadObjectWafProfileConstraintMaxRangeSegment API operation for FortiManager gets the ProfileConstraintMax Range Segment
// with the specified index value.
// Returns the requested ProfileConstraintMax Range Segment value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-range-segment chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMaxRangeSegment(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-range-segment"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMaxUrlParam API operation for FortiManager updates the specified ProfileConstraintMax Url Param.
// Returns the index value of the ProfileConstraintMax Url Param and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-url-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMaxUrlParam(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-url-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMaxUrlParam API operation for FortiManager deletes the specified ProfileConstraintMax Url Param.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-url-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMaxUrlParam(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint max-url-param
	return
}

// ReadObjectWafProfileConstraintMaxUrlParam API operation for FortiManager gets the ProfileConstraintMax Url Param
// with the specified index value.
// Returns the requested ProfileConstraintMax Url Param value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint max-url-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMaxUrlParam(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/max-url-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintMethod API operation for FortiManager updates the specified ProfileConstraintMethod.
// Returns the index value of the ProfileConstraintMethod and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintMethod(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintMethod API operation for FortiManager deletes the specified ProfileConstraintMethod.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintMethod(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint method
	return
}

// ReadObjectWafProfileConstraintMethod API operation for FortiManager gets the ProfileConstraintMethod
// with the specified index value.
// Returns the requested ProfileConstraintMethod value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintMethod(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintParamLength API operation for FortiManager updates the specified ProfileConstraintParam Length.
// Returns the index value of the ProfileConstraintParam Length and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintParamLength(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/param-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintParamLength API operation for FortiManager deletes the specified ProfileConstraintParam Length.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintParamLength(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint param-length
	return
}

// ReadObjectWafProfileConstraintParamLength API operation for FortiManager gets the ProfileConstraintParam Length
// with the specified index value.
// Returns the requested ProfileConstraintParam Length value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintParamLength(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/param-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintUrlParamLength API operation for FortiManager updates the specified ProfileConstraintUrl Param Length.
// Returns the index value of the ProfileConstraintUrl Param Length and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint url-param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintUrlParamLength(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/url-param-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintUrlParamLength API operation for FortiManager deletes the specified ProfileConstraintUrl Param Length.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint url-param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintUrlParamLength(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint url-param-length
	return
}

// ReadObjectWafProfileConstraintUrlParamLength API operation for FortiManager gets the ProfileConstraintUrl Param Length
// with the specified index value.
// Returns the requested ProfileConstraintUrl Param Length value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint url-param-length chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintUrlParamLength(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/url-param-length"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileConstraintVersion API operation for FortiManager updates the specified ProfileConstraintVersion.
// Returns the index value of the ProfileConstraintVersion and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint version chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileConstraintVersion(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/version"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileConstraintVersion API operation for FortiManager deletes the specified ProfileConstraintVersion.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint version chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileConstraintVersion(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile constraint version
	return
}

// ReadObjectWafProfileConstraintVersion API operation for FortiManager gets the ProfileConstraintVersion
// with the specified index value.
// Returns the requested ProfileConstraintVersion value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile constraint version chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileConstraintVersion(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/constraint/version"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileMethod API operation for FortiManager updates the specified ProfileMethod.
// Returns the index value of the ProfileMethod and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileMethod(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileMethod API operation for FortiManager deletes the specified ProfileMethod.
// Returns error for service API and SDK errors.
// See the object waf - profile method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileMethod(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile method
	return
}

// ReadObjectWafProfileMethod API operation for FortiManager gets the ProfileMethod
// with the specified index value.
// Returns the requested ProfileMethod value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileMethod(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfileMethodMethodPolicy API operation for FortiManager creates a new ProfileMethodMethod Policy.
// Returns the index value of the ProfileMethodMethod Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile method method-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfileMethodMethodPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method/method-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfileMethodMethodPolicy API operation for FortiManager updates the specified ProfileMethodMethod Policy.
// Returns the index value of the ProfileMethodMethod Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile method method-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileMethodMethodPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method/method-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileMethodMethodPolicy API operation for FortiManager deletes the specified ProfileMethodMethod Policy.
// Returns error for service API and SDK errors.
// See the object waf - profile method method-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileMethodMethodPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method/method-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfileMethodMethodPolicy API operation for FortiManager gets the ProfileMethodMethod Policy
// with the specified index value.
// Returns the requested ProfileMethodMethod Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile method method-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileMethodMethodPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/method/method-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileSignature API operation for FortiManager updates the specified ProfileSignature.
// Returns the index value of the ProfileSignature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileSignature(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileSignature API operation for FortiManager deletes the specified ProfileSignature.
// Returns error for service API and SDK errors.
// See the object waf - profile signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileSignature(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile signature
	return
}

// ReadObjectWafProfileSignature API operation for FortiManager gets the ProfileSignature
// with the specified index value.
// Returns the requested ProfileSignature value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileSignature(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfileSignatureCustomSignature API operation for FortiManager creates a new ProfileSignatureCustom Signature.
// Returns the index value of the ProfileSignatureCustom Signature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature custom-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfileSignatureCustomSignature(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/custom-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfileSignatureCustomSignature API operation for FortiManager updates the specified ProfileSignatureCustom Signature.
// Returns the index value of the ProfileSignatureCustom Signature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature custom-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileSignatureCustomSignature(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/custom-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileSignatureCustomSignature API operation for FortiManager deletes the specified ProfileSignatureCustom Signature.
// Returns error for service API and SDK errors.
// See the object waf - profile signature custom-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileSignatureCustomSignature(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/custom-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfileSignatureCustomSignature API operation for FortiManager gets the ProfileSignatureCustom Signature
// with the specified index value.
// Returns the requested ProfileSignatureCustom Signature value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature custom-signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileSignatureCustomSignature(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/custom-signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWafProfileSignatureMainClass API operation for FortiManager updates the specified ProfileSignatureMain Class.
// Returns the index value of the ProfileSignatureMain Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileSignatureMainClass(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileSignatureMainClass API operation for FortiManager deletes the specified ProfileSignatureMain Class.
// Returns error for service API and SDK errors.
// See the object waf - profile signature main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileSignatureMainClass(mkey string, paradict map[string]string) (err error) {

	//No unset API for object waf - profile signature main-class
	return
}

// ReadObjectWafProfileSignatureMainClass API operation for FortiManager gets the ProfileSignatureMain Class
// with the specified index value.
// Returns the requested ProfileSignatureMain Class value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile signature main-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileSignatureMainClass(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/signature/main-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfileUrlAccess API operation for FortiManager creates a new ProfileUrl Access.
// Returns the index value of the ProfileUrl Access and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfileUrlAccess(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfileUrlAccess API operation for FortiManager updates the specified ProfileUrl Access.
// Returns the index value of the ProfileUrl Access and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileUrlAccess(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileUrlAccess API operation for FortiManager deletes the specified ProfileUrl Access.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileUrlAccess(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfileUrlAccess API operation for FortiManager gets the ProfileUrl Access
// with the specified index value.
// Returns the requested ProfileUrl Access value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileUrlAccess(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafProfileUrlAccessAccessPattern API operation for FortiManager creates a new ProfileUrl AccessAccess Pattern.
// Returns the index value of the ProfileUrl AccessAccess Pattern and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access access-pattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafProfileUrlAccessAccessPattern(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access/{url-access}/access-pattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafProfileUrlAccessAccessPattern API operation for FortiManager updates the specified ProfileUrl AccessAccess Pattern.
// Returns the index value of the ProfileUrl AccessAccess Pattern and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access access-pattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafProfileUrlAccessAccessPattern(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access/{url-access}/access-pattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafProfileUrlAccessAccessPattern API operation for FortiManager deletes the specified ProfileUrl AccessAccess Pattern.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access access-pattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafProfileUrlAccessAccessPattern(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access/{url-access}/access-pattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafProfileUrlAccessAccessPattern API operation for FortiManager gets the ProfileUrl AccessAccess Pattern
// with the specified index value.
// Returns the requested ProfileUrl AccessAccess Pattern value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - profile url-access access-pattern chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafProfileUrlAccessAccessPattern(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/profile/{profile}/url-access/{url-access}/access-pattern"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafSignature API operation for FortiManager creates a new Signature.
// Returns the index value of the Signature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafSignature(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafSignature API operation for FortiManager updates the specified Signature.
// Returns the index value of the Signature and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafSignature(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafSignature API operation for FortiManager deletes the specified Signature.
// Returns error for service API and SDK errors.
// See the object waf - signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafSignature(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafSignature API operation for FortiManager gets the Signature
// with the specified index value.
// Returns the requested Signature value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - signature chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafSignature(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/signature"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWafSubClass API operation for FortiManager creates a new Sub Class.
// Returns the index value of the Sub Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - sub-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWafSubClass(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/sub-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWafSubClass API operation for FortiManager updates the specified Sub Class.
// Returns the index value of the Sub Class and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - sub-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWafSubClass(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/sub-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWafSubClass API operation for FortiManager deletes the specified Sub Class.
// Returns error for service API and SDK errors.
// See the object waf - sub-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWafSubClass(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/waf/sub-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWafSubClass API operation for FortiManager gets the Sub Class
// with the specified index value.
// Returns the requested Sub Class value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object waf - sub-class chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWafSubClass(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/waf/sub-class"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWanoptAuthGroup API operation for FortiManager creates a new Auth Group.
// Returns the index value of the Auth Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - auth-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWanoptAuthGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/auth-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWanoptAuthGroup API operation for FortiManager updates the specified Auth Group.
// Returns the index value of the Auth Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - auth-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptAuthGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/auth-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptAuthGroup API operation for FortiManager deletes the specified Auth Group.
// Returns error for service API and SDK errors.
// See the object wanopt - auth-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptAuthGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wanopt/auth-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWanoptAuthGroup API operation for FortiManager gets the Auth Group
// with the specified index value.
// Returns the requested Auth Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - auth-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptAuthGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/auth-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWanoptPeer API operation for FortiManager creates a new Peer.
// Returns the index value of the Peer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWanoptPeer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWanoptPeer API operation for FortiManager updates the specified Peer.
// Returns the index value of the Peer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptPeer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptPeer API operation for FortiManager deletes the specified Peer.
// Returns error for service API and SDK errors.
// See the object wanopt - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptPeer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wanopt/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWanoptPeer API operation for FortiManager gets the Peer
// with the specified index value.
// Returns the requested Peer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptPeer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWanoptProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWanoptProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWanoptProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object wanopt - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wanopt/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWanoptProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWanoptProfileCifs API operation for FortiManager updates the specified ProfileCifs.
// Returns the index value of the ProfileCifs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfileCifs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfileCifs API operation for FortiManager deletes the specified ProfileCifs.
// Returns error for service API and SDK errors.
// See the object wanopt - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfileCifs(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wanopt - profile cifs
	return
}

// ReadObjectWanoptProfileCifs API operation for FortiManager gets the ProfileCifs
// with the specified index value.
// Returns the requested ProfileCifs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile cifs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfileCifs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/cifs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWanoptProfileFtp API operation for FortiManager updates the specified ProfileFtp.
// Returns the index value of the ProfileFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfileFtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfileFtp API operation for FortiManager deletes the specified ProfileFtp.
// Returns error for service API and SDK errors.
// See the object wanopt - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfileFtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wanopt - profile ftp
	return
}

// ReadObjectWanoptProfileFtp API operation for FortiManager gets the ProfileFtp
// with the specified index value.
// Returns the requested ProfileFtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfileFtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWanoptProfileHttp API operation for FortiManager updates the specified ProfileHttp.
// Returns the index value of the ProfileHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfileHttp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfileHttp API operation for FortiManager deletes the specified ProfileHttp.
// Returns error for service API and SDK errors.
// See the object wanopt - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfileHttp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wanopt - profile http
	return
}

// ReadObjectWanoptProfileHttp API operation for FortiManager gets the ProfileHttp
// with the specified index value.
// Returns the requested ProfileHttp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfileHttp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWanoptProfileMapi API operation for FortiManager updates the specified ProfileMapi.
// Returns the index value of the ProfileMapi and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfileMapi(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfileMapi API operation for FortiManager deletes the specified ProfileMapi.
// Returns error for service API and SDK errors.
// See the object wanopt - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfileMapi(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wanopt - profile mapi
	return
}

// ReadObjectWanoptProfileMapi API operation for FortiManager gets the ProfileMapi
// with the specified index value.
// Returns the requested ProfileMapi value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile mapi chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfileMapi(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/mapi"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWanoptProfileTcp API operation for FortiManager updates the specified ProfileTcp.
// Returns the index value of the ProfileTcp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile tcp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWanoptProfileTcp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/tcp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWanoptProfileTcp API operation for FortiManager deletes the specified ProfileTcp.
// Returns error for service API and SDK errors.
// See the object wanopt - profile tcp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWanoptProfileTcp(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wanopt - profile tcp
	return
}

// ReadObjectWanoptProfileTcp API operation for FortiManager gets the ProfileTcp
// with the specified index value.
// Returns the requested ProfileTcp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wanopt - profile tcp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWanoptProfileTcp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wanopt/profile/{profile}/tcp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyForwardServer API operation for FortiManager creates a new Forward Server.
// Returns the index value of the Forward Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyForwardServer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyForwardServer API operation for FortiManager updates the specified Forward Server.
// Returns the index value of the Forward Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyForwardServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyForwardServer API operation for FortiManager deletes the specified Forward Server.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyForwardServer(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyForwardServer API operation for FortiManager gets the Forward Server
// with the specified index value.
// Returns the requested Forward Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyForwardServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyForwardServerGroup API operation for FortiManager creates a new Forward Server Group.
// Returns the index value of the Forward Server Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyForwardServerGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyForwardServerGroup API operation for FortiManager updates the specified Forward Server Group.
// Returns the index value of the Forward Server Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyForwardServerGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyForwardServerGroup API operation for FortiManager deletes the specified Forward Server Group.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyForwardServerGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyForwardServerGroup API operation for FortiManager gets the Forward Server Group
// with the specified index value.
// Returns the requested Forward Server Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyForwardServerGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyForwardServerGroupServerList API operation for FortiManager creates a new Forward Server GroupServer List.
// Returns the index value of the Forward Server GroupServer List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyForwardServerGroupServerList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group/{forward-server-group}/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyForwardServerGroupServerList API operation for FortiManager updates the specified Forward Server GroupServer List.
// Returns the index value of the Forward Server GroupServer List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyForwardServerGroupServerList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group/{forward-server-group}/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyForwardServerGroupServerList API operation for FortiManager deletes the specified Forward Server GroupServer List.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyForwardServerGroupServerList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group/{forward-server-group}/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyForwardServerGroupServerList API operation for FortiManager gets the Forward Server GroupServer List
// with the specified index value.
// Returns the requested Forward Server GroupServer List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - forward-server-group server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyForwardServerGroupServerList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/forward-server-group/{forward-server-group}/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyProfileHeaders API operation for FortiManager creates a new ProfileHeaders.
// Returns the index value of the ProfileHeaders and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyProfileHeaders(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile/{profile}/headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyProfileHeaders API operation for FortiManager updates the specified ProfileHeaders.
// Returns the index value of the ProfileHeaders and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyProfileHeaders(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile/{profile}/headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyProfileHeaders API operation for FortiManager deletes the specified ProfileHeaders.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyProfileHeaders(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile/{profile}/headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyProfileHeaders API operation for FortiManager gets the ProfileHeaders
// with the specified index value.
// Returns the requested ProfileHeaders value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - profile headers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyProfileHeaders(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/profile/{profile}/headers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebProxyWisp API operation for FortiManager creates a new Wisp.
// Returns the index value of the Wisp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - wisp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebProxyWisp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/wisp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebProxyWisp API operation for FortiManager updates the specified Wisp.
// Returns the index value of the Wisp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - wisp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebProxyWisp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/wisp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebProxyWisp API operation for FortiManager deletes the specified Wisp.
// Returns error for service API and SDK errors.
// See the object web-proxy - wisp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebProxyWisp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/web-proxy/wisp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebProxyWisp API operation for FortiManager gets the Wisp
// with the specified index value.
// Returns the requested Wisp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object web-proxy - wisp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebProxyWisp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/web-proxy/wisp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterCategories API operation for FortiManager creates a new Categories.
// Returns the index value of the Categories and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterCategories(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterCategories API operation for FortiManager updates the specified Categories.
// Returns the index value of the Categories and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterCategories(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterCategories API operation for FortiManager deletes the specified Categories.
// Returns error for service API and SDK errors.
// See the object webfilter - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterCategories(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterCategories API operation for FortiManager gets the Categories
// with the specified index value.
// Returns the requested Categories value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - categories chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterCategories(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/categories"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterContent API operation for FortiManager creates a new Content.
// Returns the index value of the Content and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterContent(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterContent API operation for FortiManager updates the specified Content.
// Returns the index value of the Content and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterContent(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterContent API operation for FortiManager deletes the specified Content.
// Returns error for service API and SDK errors.
// See the object webfilter - content chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterContent(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/content"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterContent API operation for FortiManager gets the Content
// with the specified index value.
// Returns the requested Content value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterContent(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterContentHeader API operation for FortiManager creates a new Content Header.
// Returns the index value of the Content Header and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterContentHeader(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterContentHeader API operation for FortiManager updates the specified Content Header.
// Returns the index value of the Content Header and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterContentHeader(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterContentHeader API operation for FortiManager deletes the specified Content Header.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterContentHeader(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterContentHeader API operation for FortiManager gets the Content Header
// with the specified index value.
// Returns the requested Content Header value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterContentHeader(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterContentHeaderEntries API operation for FortiManager creates a new Content HeaderEntries.
// Returns the index value of the Content HeaderEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterContentHeaderEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterContentHeaderEntries API operation for FortiManager updates the specified Content HeaderEntries.
// Returns the index value of the Content HeaderEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterContentHeaderEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterContentHeaderEntries API operation for FortiManager deletes the specified Content HeaderEntries.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterContentHeaderEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterContentHeaderEntries API operation for FortiManager gets the Content HeaderEntries
// with the specified index value.
// Returns the requested Content HeaderEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterContentHeaderEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterContentHeaderEntriesMove API operation for FortiManager updates the specified Content HeaderEntriesMove.
// Returns the index value of the Content HeaderEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterContentHeaderEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWebfilterContentHeaderEntriesMove API operation for FortiManager gets the Content HeaderEntriesMove
// with the specified index value.
// Returns the requested Content HeaderEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content-header entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterContentHeaderEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content-header/{content-header}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"pattern"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWebfilterContentEntries API operation for FortiManager creates a new ContentEntries.
// Returns the index value of the ContentEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterContentEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content/{content}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterContentEntries API operation for FortiManager updates the specified ContentEntries.
// Returns the index value of the ContentEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterContentEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content/{content}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterContentEntries API operation for FortiManager deletes the specified ContentEntries.
// Returns error for service API and SDK errors.
// See the object webfilter - content entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterContentEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/content/{content}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterContentEntries API operation for FortiManager gets the ContentEntries
// with the specified index value.
// Returns the requested ContentEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - content entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterContentEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/content/{content}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterFtgdLocalCat API operation for FortiManager creates a new Ftgd Local Cat.
// Returns the index value of the Ftgd Local Cat and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-cat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterFtgdLocalCat(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-cat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterFtgdLocalCat API operation for FortiManager updates the specified Ftgd Local Cat.
// Returns the index value of the Ftgd Local Cat and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-cat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterFtgdLocalCat(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-cat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterFtgdLocalCat API operation for FortiManager deletes the specified Ftgd Local Cat.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-cat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterFtgdLocalCat(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-cat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterFtgdLocalCat API operation for FortiManager gets the Ftgd Local Cat
// with the specified index value.
// Returns the requested Ftgd Local Cat value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-cat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterFtgdLocalCat(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-cat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterFtgdLocalRating API operation for FortiManager creates a new Ftgd Local Rating.
// Returns the index value of the Ftgd Local Rating and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-rating chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterFtgdLocalRating(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-rating"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterFtgdLocalRating API operation for FortiManager updates the specified Ftgd Local Rating.
// Returns the index value of the Ftgd Local Rating and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-rating chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterFtgdLocalRating(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-rating"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterFtgdLocalRating API operation for FortiManager deletes the specified Ftgd Local Rating.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-rating chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterFtgdLocalRating(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-rating"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterFtgdLocalRating API operation for FortiManager gets the Ftgd Local Rating
// with the specified index value.
// Returns the requested Ftgd Local Rating value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - ftgd-local-rating chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterFtgdLocalRating(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/ftgd-local-rating"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfile API operation for FortiManager creates a new Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfile API operation for FortiManager updates the specified Profile.
// Returns the index value of the Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfile API operation for FortiManager deletes the specified Profile.
// Returns error for service API and SDK errors.
// See the object webfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfile API operation for FortiManager gets the Profile
// with the specified index value.
// Returns the requested Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterProfileAntiphish API operation for FortiManager updates the specified ProfileAntiphish.
// Returns the index value of the ProfileAntiphish and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileAntiphish(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileAntiphish API operation for FortiManager deletes the specified ProfileAntiphish.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileAntiphish(mkey string, paradict map[string]string) (err error) {

	//No unset API for object webfilter - profile antiphish
	return
}

// ReadObjectWebfilterProfileAntiphish API operation for FortiManager gets the ProfileAntiphish
// with the specified index value.
// Returns the requested ProfileAntiphish value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileAntiphish(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfileAntiphishCustomPatterns API operation for FortiManager creates a new ProfileAntiphishCustom Patterns.
// Returns the index value of the ProfileAntiphishCustom Patterns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish custom-patterns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfileAntiphishCustomPatterns(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/custom-patterns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfileAntiphishCustomPatterns API operation for FortiManager updates the specified ProfileAntiphishCustom Patterns.
// Returns the index value of the ProfileAntiphishCustom Patterns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish custom-patterns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileAntiphishCustomPatterns(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/custom-patterns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileAntiphishCustomPatterns API operation for FortiManager deletes the specified ProfileAntiphishCustom Patterns.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish custom-patterns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileAntiphishCustomPatterns(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/custom-patterns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfileAntiphishCustomPatterns API operation for FortiManager gets the ProfileAntiphishCustom Patterns
// with the specified index value.
// Returns the requested ProfileAntiphishCustom Patterns value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish custom-patterns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileAntiphishCustomPatterns(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/custom-patterns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfileAntiphishInspectionEntries API operation for FortiManager creates a new ProfileAntiphishInspection Entries.
// Returns the index value of the ProfileAntiphishInspection Entries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish inspection-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfileAntiphishInspectionEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/inspection-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfileAntiphishInspectionEntries API operation for FortiManager updates the specified ProfileAntiphishInspection Entries.
// Returns the index value of the ProfileAntiphishInspection Entries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish inspection-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileAntiphishInspectionEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/inspection-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileAntiphishInspectionEntries API operation for FortiManager deletes the specified ProfileAntiphishInspection Entries.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish inspection-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileAntiphishInspectionEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/inspection-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfileAntiphishInspectionEntries API operation for FortiManager gets the ProfileAntiphishInspection Entries
// with the specified index value.
// Returns the requested ProfileAntiphishInspection Entries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile antiphish inspection-entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileAntiphishInspectionEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/antiphish/inspection-entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfileFileFilterEntries API operation for FortiManager creates a new ProfileFile FilterEntries.
// Returns the index value of the ProfileFile FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfileFileFilterEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfileFileFilterEntries API operation for FortiManager updates the specified ProfileFile FilterEntries.
// Returns the index value of the ProfileFile FilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileFileFilterEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileFileFilterEntries API operation for FortiManager deletes the specified ProfileFile FilterEntries.
// Returns error for service API and SDK errors.
// See the object webfilter - profile file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileFileFilterEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfileFileFilterEntries API operation for FortiManager gets the ProfileFile FilterEntries
// with the specified index value.
// Returns the requested ProfileFile FilterEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile file-filter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileFileFilterEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/file-filter/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterProfileFtgdWf API operation for FortiManager updates the specified ProfileFtgd Wf.
// Returns the index value of the ProfileFtgd Wf and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileFtgdWf(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileFtgdWf API operation for FortiManager deletes the specified ProfileFtgd Wf.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileFtgdWf(mkey string, paradict map[string]string) (err error) {

	//No unset API for object webfilter - profile ftgd-wf
	return
}

// ReadObjectWebfilterProfileFtgdWf API operation for FortiManager gets the ProfileFtgd Wf
// with the specified index value.
// Returns the requested ProfileFtgd Wf value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileFtgdWf(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfileFtgdWfFilters API operation for FortiManager creates a new ProfileFtgd WfFilters.
// Returns the index value of the ProfileFtgd WfFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfileFtgdWfFilters(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfileFtgdWfFilters API operation for FortiManager updates the specified ProfileFtgd WfFilters.
// Returns the index value of the ProfileFtgd WfFilters and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileFtgdWfFilters(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileFtgdWfFilters API operation for FortiManager deletes the specified ProfileFtgd WfFilters.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileFtgdWfFilters(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfileFtgdWfFilters API operation for FortiManager gets the ProfileFtgd WfFilters
// with the specified index value.
// Returns the requested ProfileFtgd WfFilters value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile ftgd-wf filters chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileFtgdWfFilters(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/ftgd-wf/filters"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterProfileOverride API operation for FortiManager updates the specified ProfileOverride.
// Returns the index value of the ProfileOverride and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileOverride(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileOverride API operation for FortiManager deletes the specified ProfileOverride.
// Returns error for service API and SDK errors.
// See the object webfilter - profile override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileOverride(mkey string, paradict map[string]string) (err error) {

	//No unset API for object webfilter - profile override
	return
}

// ReadObjectWebfilterProfileOverride API operation for FortiManager gets the ProfileOverride
// with the specified index value.
// Returns the requested ProfileOverride value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile override chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileOverride(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/override"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterProfileUrlExtraction API operation for FortiManager updates the specified ProfileUrl Extraction.
// Returns the index value of the ProfileUrl Extraction and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile url-extraction chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileUrlExtraction(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/url-extraction"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileUrlExtraction API operation for FortiManager deletes the specified ProfileUrl Extraction.
// Returns error for service API and SDK errors.
// See the object webfilter - profile url-extraction chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileUrlExtraction(mkey string, paradict map[string]string) (err error) {

	//No unset API for object webfilter - profile url-extraction
	return
}

// ReadObjectWebfilterProfileUrlExtraction API operation for FortiManager gets the ProfileUrl Extraction
// with the specified index value.
// Returns the requested ProfileUrl Extraction value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile url-extraction chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileUrlExtraction(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/url-extraction"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterProfileWeb API operation for FortiManager updates the specified ProfileWeb.
// Returns the index value of the ProfileWeb and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile web chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileWeb(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/web"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileWeb API operation for FortiManager deletes the specified ProfileWeb.
// Returns error for service API and SDK errors.
// See the object webfilter - profile web chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileWeb(mkey string, paradict map[string]string) (err error) {

	//No unset API for object webfilter - profile web
	return
}

// ReadObjectWebfilterProfileWeb API operation for FortiManager gets the ProfileWeb
// with the specified index value.
// Returns the requested ProfileWeb value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile web chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileWeb(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/web"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterProfileYoutubeChannelFilter API operation for FortiManager creates a new ProfileYoutube Channel Filter.
// Returns the index value of the ProfileYoutube Channel Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterProfileYoutubeChannelFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterProfileYoutubeChannelFilter API operation for FortiManager updates the specified ProfileYoutube Channel Filter.
// Returns the index value of the ProfileYoutube Channel Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterProfileYoutubeChannelFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterProfileYoutubeChannelFilter API operation for FortiManager deletes the specified ProfileYoutube Channel Filter.
// Returns error for service API and SDK errors.
// See the object webfilter - profile youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterProfileYoutubeChannelFilter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterProfileYoutubeChannelFilter API operation for FortiManager gets the ProfileYoutube Channel Filter
// with the specified index value.
// Returns the requested ProfileYoutube Channel Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - profile youtube-channel-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterProfileYoutubeChannelFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/profile/{profile}/youtube-channel-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterUrlfilter API operation for FortiManager creates a new Urlfilter.
// Returns the index value of the Urlfilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterUrlfilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterUrlfilter API operation for FortiManager updates the specified Urlfilter.
// Returns the index value of the Urlfilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterUrlfilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterUrlfilter API operation for FortiManager deletes the specified Urlfilter.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterUrlfilter(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterUrlfilter API operation for FortiManager gets the Urlfilter
// with the specified index value.
// Returns the requested Urlfilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterUrlfilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWebfilterUrlfilterEntries API operation for FortiManager creates a new UrlfilterEntries.
// Returns the index value of the UrlfilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWebfilterUrlfilterEntries(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWebfilterUrlfilterEntries API operation for FortiManager updates the specified UrlfilterEntries.
// Returns the index value of the UrlfilterEntries and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterUrlfilterEntries(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWebfilterUrlfilterEntries API operation for FortiManager deletes the specified UrlfilterEntries.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWebfilterUrlfilterEntries(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWebfilterUrlfilterEntries API operation for FortiManager gets the UrlfilterEntries
// with the specified index value.
// Returns the requested UrlfilterEntries value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterUrlfilterEntries(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWebfilterUrlfilterEntriesMove API operation for FortiManager updates the specified UrlfilterEntriesMove.
// Returns the index value of the UrlfilterEntriesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWebfilterUrlfilterEntriesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries/{entries}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWebfilterUrlfilterEntriesMove API operation for FortiManager gets the UrlfilterEntriesMove
// with the specified index value.
// Returns the requested UrlfilterEntriesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object webfilter - urlfilter entries move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWebfilterUrlfilterEntriesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/webfilter/urlfilter/{urlfilter}/entries"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerAccessControlList API operation for FortiManager creates a new Access Control List.
// Returns the index value of the Access Control List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerAccessControlList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerAccessControlList API operation for FortiManager updates the specified Access Control List.
// Returns the index value of the Access Control List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAccessControlList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerAccessControlList API operation for FortiManager deletes the specified Access Control List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerAccessControlList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerAccessControlList API operation for FortiManager gets the Access Control List
// with the specified index value.
// Returns the requested Access Control List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAccessControlList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerAccessControlListLayer3Ipv4Rules API operation for FortiManager creates a new Access Control ListLayer3 Ipv4 Rules.
// Returns the index value of the Access Control ListLayer3 Ipv4 Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerAccessControlListLayer3Ipv4Rules(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerAccessControlListLayer3Ipv4Rules API operation for FortiManager updates the specified Access Control ListLayer3 Ipv4 Rules.
// Returns the index value of the Access Control ListLayer3 Ipv4 Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAccessControlListLayer3Ipv4Rules(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerAccessControlListLayer3Ipv4Rules API operation for FortiManager deletes the specified Access Control ListLayer3 Ipv4 Rules.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerAccessControlListLayer3Ipv4Rules(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerAccessControlListLayer3Ipv4Rules API operation for FortiManager gets the Access Control ListLayer3 Ipv4 Rules
// with the specified index value.
// Returns the requested Access Control ListLayer3 Ipv4 Rules value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAccessControlListLayer3Ipv4Rules(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerAccessControlListLayer3Ipv4RulesMove API operation for FortiManager updates the specified Access Control ListLayer3 Ipv4 RulesMove.
// Returns the index value of the Access Control ListLayer3 Ipv4 RulesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAccessControlListLayer3Ipv4RulesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules/{layer3-ipv4-rules}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerAccessControlListLayer3Ipv4RulesMove API operation for FortiManager gets the Access Control ListLayer3 Ipv4 RulesMove
// with the specified index value.
// Returns the requested Access Control ListLayer3 Ipv4 RulesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv4-rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAccessControlListLayer3Ipv4RulesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv4-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"rule-id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerAccessControlListLayer3Ipv6Rules API operation for FortiManager creates a new Access Control ListLayer3 Ipv6 Rules.
// Returns the index value of the Access Control ListLayer3 Ipv6 Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerAccessControlListLayer3Ipv6Rules(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerAccessControlListLayer3Ipv6Rules API operation for FortiManager updates the specified Access Control ListLayer3 Ipv6 Rules.
// Returns the index value of the Access Control ListLayer3 Ipv6 Rules and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAccessControlListLayer3Ipv6Rules(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerAccessControlListLayer3Ipv6Rules API operation for FortiManager deletes the specified Access Control ListLayer3 Ipv6 Rules.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerAccessControlListLayer3Ipv6Rules(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerAccessControlListLayer3Ipv6Rules API operation for FortiManager gets the Access Control ListLayer3 Ipv6 Rules
// with the specified index value.
// Returns the requested Access Control ListLayer3 Ipv6 Rules value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAccessControlListLayer3Ipv6Rules(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerAccessControlListLayer3Ipv6RulesMove API operation for FortiManager updates the specified Access Control ListLayer3 Ipv6 RulesMove.
// Returns the index value of the Access Control ListLayer3 Ipv6 RulesMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAccessControlListLayer3Ipv6RulesMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules/{layer3-ipv6-rules}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerAccessControlListLayer3Ipv6RulesMove API operation for FortiManager gets the Access Control ListLayer3 Ipv6 RulesMove
// with the specified index value.
// Returns the requested Access Control ListLayer3 Ipv6 RulesMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - access-control-list layer3-ipv6-rules move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAccessControlListLayer3Ipv6RulesMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/access-control-list/{access-control-list}/layer3-ipv6-rules"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"rule-id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerAddress API operation for FortiManager creates a new Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerAddress(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerAddress API operation for FortiManager updates the specified Address.
// Returns the index value of the Address and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAddress(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerAddress API operation for FortiManager deletes the specified Address.
// Returns error for service API and SDK errors.
// See the object wireless-controller - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerAddress(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerAddress API operation for FortiManager gets the Address
// with the specified index value.
// Returns the requested Address value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - address chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAddress(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/address"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerAddrgrp API operation for FortiManager creates a new Addrgrp.
// Returns the index value of the Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerAddrgrp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerAddrgrp API operation for FortiManager updates the specified Addrgrp.
// Returns the index value of the Addrgrp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerAddrgrp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerAddrgrp API operation for FortiManager deletes the specified Addrgrp.
// Returns error for service API and SDK errors.
// See the object wireless-controller - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerAddrgrp(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerAddrgrp API operation for FortiManager gets the Addrgrp
// with the specified index value.
// Returns the requested Addrgrp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - addrgrp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerAddrgrp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/addrgrp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerApcfgProfile API operation for FortiManager creates a new Apcfg Profile.
// Returns the index value of the Apcfg Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerApcfgProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerApcfgProfile API operation for FortiManager updates the specified Apcfg Profile.
// Returns the index value of the Apcfg Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerApcfgProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerApcfgProfile API operation for FortiManager deletes the specified Apcfg Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerApcfgProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerApcfgProfile API operation for FortiManager gets the Apcfg Profile
// with the specified index value.
// Returns the requested Apcfg Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerApcfgProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerApcfgProfileCommandList API operation for FortiManager creates a new Apcfg ProfileCommand List.
// Returns the index value of the Apcfg ProfileCommand List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerApcfgProfileCommandList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerApcfgProfileCommandList API operation for FortiManager updates the specified Apcfg ProfileCommand List.
// Returns the index value of the Apcfg ProfileCommand List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerApcfgProfileCommandList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerApcfgProfileCommandList API operation for FortiManager deletes the specified Apcfg ProfileCommand List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerApcfgProfileCommandList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerApcfgProfileCommandList API operation for FortiManager gets the Apcfg ProfileCommand List
// with the specified index value.
// Returns the requested Apcfg ProfileCommand List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerApcfgProfileCommandList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerApcfgProfileCommandListMove API operation for FortiManager updates the specified Apcfg ProfileCommand ListMove.
// Returns the index value of the Apcfg ProfileCommand ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerApcfgProfileCommandListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list/{command-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerApcfgProfileCommandListMove API operation for FortiManager gets the Apcfg ProfileCommand ListMove
// with the specified index value.
// Returns the requested Apcfg ProfileCommand ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - apcfg-profile command-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerApcfgProfileCommandListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/apcfg-profile/{apcfg-profile}/command-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerArrpProfile API operation for FortiManager creates a new Arrp Profile.
// Returns the index value of the Arrp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - arrp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerArrpProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/arrp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerArrpProfile API operation for FortiManager updates the specified Arrp Profile.
// Returns the index value of the Arrp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - arrp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerArrpProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/arrp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerArrpProfile API operation for FortiManager deletes the specified Arrp Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - arrp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerArrpProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/arrp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerArrpProfile API operation for FortiManager gets the Arrp Profile
// with the specified index value.
// Returns the requested Arrp Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - arrp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerArrpProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/arrp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerBleProfile API operation for FortiManager creates a new Ble Profile.
// Returns the index value of the Ble Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ble-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerBleProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ble-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerBleProfile API operation for FortiManager updates the specified Ble Profile.
// Returns the index value of the Ble Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ble-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerBleProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ble-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerBleProfile API operation for FortiManager deletes the specified Ble Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ble-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerBleProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ble-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerBleProfile API operation for FortiManager gets the Ble Profile
// with the specified index value.
// Returns the requested Ble Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ble-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerBleProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ble-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerBonjourProfile API operation for FortiManager creates a new Bonjour Profile.
// Returns the index value of the Bonjour Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerBonjourProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerBonjourProfile API operation for FortiManager updates the specified Bonjour Profile.
// Returns the index value of the Bonjour Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerBonjourProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerBonjourProfile API operation for FortiManager deletes the specified Bonjour Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerBonjourProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerBonjourProfile API operation for FortiManager gets the Bonjour Profile
// with the specified index value.
// Returns the requested Bonjour Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerBonjourProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerBonjourProfilePolicyList API operation for FortiManager creates a new Bonjour ProfilePolicy List.
// Returns the index value of the Bonjour ProfilePolicy List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerBonjourProfilePolicyList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerBonjourProfilePolicyList API operation for FortiManager updates the specified Bonjour ProfilePolicy List.
// Returns the index value of the Bonjour ProfilePolicy List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerBonjourProfilePolicyList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerBonjourProfilePolicyList API operation for FortiManager deletes the specified Bonjour ProfilePolicy List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerBonjourProfilePolicyList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerBonjourProfilePolicyList API operation for FortiManager gets the Bonjour ProfilePolicy List
// with the specified index value.
// Returns the requested Bonjour ProfilePolicy List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerBonjourProfilePolicyList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerBonjourProfilePolicyListMove API operation for FortiManager updates the specified Bonjour ProfilePolicy ListMove.
// Returns the index value of the Bonjour ProfilePolicy ListMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerBonjourProfilePolicyListMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list/{policy-list}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerBonjourProfilePolicyListMove API operation for FortiManager gets the Bonjour ProfilePolicy ListMove
// with the specified index value.
// Returns the requested Bonjour ProfilePolicy ListMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - bonjour-profile policy-list move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerBonjourProfilePolicyListMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/bonjour-profile/{bonjour-profile}/policy-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policy-id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerHotspot20Anqp3GppCellular API operation for FortiManager creates a new Hotspot20Anqp 3Gpp Cellular.
// Returns the index value of the Hotspot20Anqp 3Gpp Cellular and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20Anqp3GppCellular(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20Anqp3GppCellular API operation for FortiManager updates the specified Hotspot20Anqp 3Gpp Cellular.
// Returns the index value of the Hotspot20Anqp 3Gpp Cellular and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20Anqp3GppCellular(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20Anqp3GppCellular API operation for FortiManager deletes the specified Hotspot20Anqp 3Gpp Cellular.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20Anqp3GppCellular(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20Anqp3GppCellular API operation for FortiManager gets the Hotspot20Anqp 3Gpp Cellular
// with the specified index value.
// Returns the requested Hotspot20Anqp 3Gpp Cellular value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20Anqp3GppCellular(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList API operation for FortiManager creates a new Hotspot20Anqp 3Gpp CellularMcc Mnc List.
// Returns the index value of the Hotspot20Anqp 3Gpp CellularMcc Mnc List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular mcc-mnc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular/{anqp-3gpp-cellular}/mcc-mnc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList API operation for FortiManager updates the specified Hotspot20Anqp 3Gpp CellularMcc Mnc List.
// Returns the index value of the Hotspot20Anqp 3Gpp CellularMcc Mnc List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular mcc-mnc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular/{anqp-3gpp-cellular}/mcc-mnc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList API operation for FortiManager deletes the specified Hotspot20Anqp 3Gpp CellularMcc Mnc List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular mcc-mnc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular/{anqp-3gpp-cellular}/mcc-mnc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList API operation for FortiManager gets the Hotspot20Anqp 3Gpp CellularMcc Mnc List
// with the specified index value.
// Returns the requested Hotspot20Anqp 3Gpp CellularMcc Mnc List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-3gpp-cellular mcc-mnc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20Anqp3GppCellularMccMncList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-3gpp-cellular/{anqp-3gpp-cellular}/mcc-mnc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpIpAddressType API operation for FortiManager creates a new Hotspot20Anqp Ip Address Type.
// Returns the index value of the Hotspot20Anqp Ip Address Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-ip-address-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpIpAddressType(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-ip-address-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpIpAddressType API operation for FortiManager updates the specified Hotspot20Anqp Ip Address Type.
// Returns the index value of the Hotspot20Anqp Ip Address Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-ip-address-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpIpAddressType(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-ip-address-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpIpAddressType API operation for FortiManager deletes the specified Hotspot20Anqp Ip Address Type.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-ip-address-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpIpAddressType(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-ip-address-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpIpAddressType API operation for FortiManager gets the Hotspot20Anqp Ip Address Type
// with the specified index value.
// Returns the requested Hotspot20Anqp Ip Address Type value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-ip-address-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpIpAddressType(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-ip-address-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpNaiRealm API operation for FortiManager creates a new Hotspot20Anqp Nai Realm.
// Returns the index value of the Hotspot20Anqp Nai Realm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpNaiRealm(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpNaiRealm API operation for FortiManager updates the specified Hotspot20Anqp Nai Realm.
// Returns the index value of the Hotspot20Anqp Nai Realm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpNaiRealm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpNaiRealm API operation for FortiManager deletes the specified Hotspot20Anqp Nai Realm.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpNaiRealm(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpNaiRealm API operation for FortiManager gets the Hotspot20Anqp Nai Realm
// with the specified index value.
// Returns the requested Hotspot20Anqp Nai Realm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpNaiRealm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiList API operation for FortiManager creates a new Hotspot20Anqp Nai RealmNai List.
// Returns the index value of the Hotspot20Anqp Nai RealmNai List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiList API operation for FortiManager updates the specified Hotspot20Anqp Nai RealmNai List.
// Returns the index value of the Hotspot20Anqp Nai RealmNai List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiList API operation for FortiManager deletes the specified Hotspot20Anqp Nai RealmNai List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiList API operation for FortiManager gets the Hotspot20Anqp Nai RealmNai List
// with the specified index value.
// Returns the requested Hotspot20Anqp Nai RealmNai List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod API operation for FortiManager creates a new Hotspot20Anqp Nai RealmNai ListEap Method.
// Returns the index value of the Hotspot20Anqp Nai RealmNai ListEap Method and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod API operation for FortiManager updates the specified Hotspot20Anqp Nai RealmNai ListEap Method.
// Returns the index value of the Hotspot20Anqp Nai RealmNai ListEap Method and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod API operation for FortiManager deletes the specified Hotspot20Anqp Nai RealmNai ListEap Method.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod API operation for FortiManager gets the Hotspot20Anqp Nai RealmNai ListEap Method
// with the specified index value.
// Returns the requested Hotspot20Anqp Nai RealmNai ListEap Method value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethod(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam API operation for FortiManager creates a new Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param.
// Returns the index value of the Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method auth-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method/{eap-method}/auth-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam API operation for FortiManager updates the specified Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param.
// Returns the index value of the Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method auth-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method/{eap-method}/auth-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam API operation for FortiManager deletes the specified Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method auth-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method/{eap-method}/auth-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam API operation for FortiManager gets the Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param
// with the specified index value.
// Returns the requested Hotspot20Anqp Nai RealmNai ListEap MethodAuth Param value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-nai-realm nai-list eap-method auth-param chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpNaiRealmNaiListEapMethodAuthParam(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-nai-realm/{anqp-nai-realm}/nai-list/{nai-list}/eap-method/{eap-method}/auth-param"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpNetworkAuthType API operation for FortiManager creates a new Hotspot20Anqp Network Auth Type.
// Returns the index value of the Hotspot20Anqp Network Auth Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-network-auth-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpNetworkAuthType(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-network-auth-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpNetworkAuthType API operation for FortiManager updates the specified Hotspot20Anqp Network Auth Type.
// Returns the index value of the Hotspot20Anqp Network Auth Type and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-network-auth-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpNetworkAuthType(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-network-auth-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpNetworkAuthType API operation for FortiManager deletes the specified Hotspot20Anqp Network Auth Type.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-network-auth-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpNetworkAuthType(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-network-auth-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpNetworkAuthType API operation for FortiManager gets the Hotspot20Anqp Network Auth Type
// with the specified index value.
// Returns the requested Hotspot20Anqp Network Auth Type value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-network-auth-type chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpNetworkAuthType(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-network-auth-type"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpRoamingConsortium API operation for FortiManager creates a new Hotspot20Anqp Roaming Consortium.
// Returns the index value of the Hotspot20Anqp Roaming Consortium and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpRoamingConsortium(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpRoamingConsortium API operation for FortiManager updates the specified Hotspot20Anqp Roaming Consortium.
// Returns the index value of the Hotspot20Anqp Roaming Consortium and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpRoamingConsortium(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpRoamingConsortium API operation for FortiManager deletes the specified Hotspot20Anqp Roaming Consortium.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpRoamingConsortium(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpRoamingConsortium API operation for FortiManager gets the Hotspot20Anqp Roaming Consortium
// with the specified index value.
// Returns the requested Hotspot20Anqp Roaming Consortium value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpRoamingConsortium(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList API operation for FortiManager creates a new Hotspot20Anqp Roaming ConsortiumOi List.
// Returns the index value of the Hotspot20Anqp Roaming ConsortiumOi List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium oi-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium/{anqp-roaming-consortium}/oi-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList API operation for FortiManager updates the specified Hotspot20Anqp Roaming ConsortiumOi List.
// Returns the index value of the Hotspot20Anqp Roaming ConsortiumOi List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium oi-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium/{anqp-roaming-consortium}/oi-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList API operation for FortiManager deletes the specified Hotspot20Anqp Roaming ConsortiumOi List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium oi-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium/{anqp-roaming-consortium}/oi-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList API operation for FortiManager gets the Hotspot20Anqp Roaming ConsortiumOi List
// with the specified index value.
// Returns the requested Hotspot20Anqp Roaming ConsortiumOi List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-roaming-consortium oi-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpRoamingConsortiumOiList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-roaming-consortium/{anqp-roaming-consortium}/oi-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpVenueName API operation for FortiManager creates a new Hotspot20Anqp Venue Name.
// Returns the index value of the Hotspot20Anqp Venue Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpVenueName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpVenueName API operation for FortiManager updates the specified Hotspot20Anqp Venue Name.
// Returns the index value of the Hotspot20Anqp Venue Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpVenueName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpVenueName API operation for FortiManager deletes the specified Hotspot20Anqp Venue Name.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpVenueName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpVenueName API operation for FortiManager gets the Hotspot20Anqp Venue Name
// with the specified index value.
// Returns the requested Hotspot20Anqp Venue Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpVenueName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpVenueNameValueList API operation for FortiManager creates a new Hotspot20Anqp Venue NameValue List.
// Returns the index value of the Hotspot20Anqp Venue NameValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpVenueNameValueList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name/{anqp-venue-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpVenueNameValueList API operation for FortiManager updates the specified Hotspot20Anqp Venue NameValue List.
// Returns the index value of the Hotspot20Anqp Venue NameValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpVenueNameValueList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name/{anqp-venue-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpVenueNameValueList API operation for FortiManager deletes the specified Hotspot20Anqp Venue NameValue List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpVenueNameValueList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name/{anqp-venue-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpVenueNameValueList API operation for FortiManager gets the Hotspot20Anqp Venue NameValue List
// with the specified index value.
// Returns the requested Hotspot20Anqp Venue NameValue List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpVenueNameValueList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-name/{anqp-venue-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpVenueUrl API operation for FortiManager creates a new Hotspot20Anqp Venue Url.
// Returns the index value of the Hotspot20Anqp Venue Url and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpVenueUrl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpVenueUrl API operation for FortiManager updates the specified Hotspot20Anqp Venue Url.
// Returns the index value of the Hotspot20Anqp Venue Url and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpVenueUrl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpVenueUrl API operation for FortiManager deletes the specified Hotspot20Anqp Venue Url.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpVenueUrl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpVenueUrl API operation for FortiManager gets the Hotspot20Anqp Venue Url
// with the specified index value.
// Returns the requested Hotspot20Anqp Venue Url value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpVenueUrl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20AnqpVenueUrlValueList API operation for FortiManager creates a new Hotspot20Anqp Venue UrlValue List.
// Returns the index value of the Hotspot20Anqp Venue UrlValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20AnqpVenueUrlValueList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url/{anqp-venue-url}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20AnqpVenueUrlValueList API operation for FortiManager updates the specified Hotspot20Anqp Venue UrlValue List.
// Returns the index value of the Hotspot20Anqp Venue UrlValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20AnqpVenueUrlValueList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url/{anqp-venue-url}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20AnqpVenueUrlValueList API operation for FortiManager deletes the specified Hotspot20Anqp Venue UrlValue List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20AnqpVenueUrlValueList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url/{anqp-venue-url}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20AnqpVenueUrlValueList API operation for FortiManager gets the Hotspot20Anqp Venue UrlValue List
// with the specified index value.
// Returns the requested Hotspot20Anqp Venue UrlValue List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 anqp-venue-url value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20AnqpVenueUrlValueList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/anqp-venue-url/{anqp-venue-url}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpAdviceOfCharge API operation for FortiManager creates a new Hotspot20H2Qp Advice Of Charge.
// Returns the index value of the Hotspot20H2Qp Advice Of Charge and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpAdviceOfCharge(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpAdviceOfCharge API operation for FortiManager updates the specified Hotspot20H2Qp Advice Of Charge.
// Returns the index value of the Hotspot20H2Qp Advice Of Charge and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpAdviceOfCharge(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpAdviceOfCharge API operation for FortiManager deletes the specified Hotspot20H2Qp Advice Of Charge.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpAdviceOfCharge(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpAdviceOfCharge API operation for FortiManager gets the Hotspot20H2Qp Advice Of Charge
// with the specified index value.
// Returns the requested Hotspot20H2Qp Advice Of Charge value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpAdviceOfCharge(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList API operation for FortiManager creates a new Hotspot20H2Qp Advice Of ChargeAoc List.
// Returns the index value of the Hotspot20H2Qp Advice Of ChargeAoc List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList API operation for FortiManager updates the specified Hotspot20H2Qp Advice Of ChargeAoc List.
// Returns the index value of the Hotspot20H2Qp Advice Of ChargeAoc List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList API operation for FortiManager deletes the specified Hotspot20H2Qp Advice Of ChargeAoc List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList API operation for FortiManager gets the Hotspot20H2Qp Advice Of ChargeAoc List
// with the specified index value.
// Returns the requested Hotspot20H2Qp Advice Of ChargeAoc List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo API operation for FortiManager creates a new Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info.
// Returns the index value of the Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list plan-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list/{aoc-list}/plan-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo API operation for FortiManager updates the specified Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info.
// Returns the index value of the Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list plan-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list/{aoc-list}/plan-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo API operation for FortiManager deletes the specified Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list plan-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list/{aoc-list}/plan-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo API operation for FortiManager gets the Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info
// with the specified index value.
// Returns the requested Hotspot20H2Qp Advice Of ChargeAoc ListPlan Info value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-advice-of-charge aoc-list plan-info chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpAdviceOfChargeAocListPlanInfo(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-advice-of-charge/{h2qp-advice-of-charge}/aoc-list/{aoc-list}/plan-info"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpConnCapability API operation for FortiManager creates a new Hotspot20H2Qp Conn Capability.
// Returns the index value of the Hotspot20H2Qp Conn Capability and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-conn-capability chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpConnCapability(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-conn-capability"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpConnCapability API operation for FortiManager updates the specified Hotspot20H2Qp Conn Capability.
// Returns the index value of the Hotspot20H2Qp Conn Capability and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-conn-capability chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpConnCapability(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-conn-capability"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpConnCapability API operation for FortiManager deletes the specified Hotspot20H2Qp Conn Capability.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-conn-capability chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpConnCapability(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-conn-capability"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpConnCapability API operation for FortiManager gets the Hotspot20H2Qp Conn Capability
// with the specified index value.
// Returns the requested Hotspot20H2Qp Conn Capability value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-conn-capability chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpConnCapability(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-conn-capability"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOperatorName API operation for FortiManager creates a new Hotspot20H2Qp Operator Name.
// Returns the index value of the Hotspot20H2Qp Operator Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOperatorName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOperatorName API operation for FortiManager updates the specified Hotspot20H2Qp Operator Name.
// Returns the index value of the Hotspot20H2Qp Operator Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOperatorName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOperatorName API operation for FortiManager deletes the specified Hotspot20H2Qp Operator Name.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOperatorName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOperatorName API operation for FortiManager gets the Hotspot20H2Qp Operator Name
// with the specified index value.
// Returns the requested Hotspot20H2Qp Operator Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOperatorName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOperatorNameValueList API operation for FortiManager creates a new Hotspot20H2Qp Operator NameValue List.
// Returns the index value of the Hotspot20H2Qp Operator NameValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOperatorNameValueList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name/{h2qp-operator-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOperatorNameValueList API operation for FortiManager updates the specified Hotspot20H2Qp Operator NameValue List.
// Returns the index value of the Hotspot20H2Qp Operator NameValue List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOperatorNameValueList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name/{h2qp-operator-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOperatorNameValueList API operation for FortiManager deletes the specified Hotspot20H2Qp Operator NameValue List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOperatorNameValueList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name/{h2qp-operator-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOperatorNameValueList API operation for FortiManager gets the Hotspot20H2Qp Operator NameValue List
// with the specified index value.
// Returns the requested Hotspot20H2Qp Operator NameValue List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-operator-name value-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOperatorNameValueList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-operator-name/{h2qp-operator-name}/value-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOsuProvider API operation for FortiManager creates a new Hotspot20H2Qp Osu Provider.
// Returns the index value of the Hotspot20H2Qp Osu Provider and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOsuProvider(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOsuProvider API operation for FortiManager updates the specified Hotspot20H2Qp Osu Provider.
// Returns the index value of the Hotspot20H2Qp Osu Provider and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOsuProvider(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOsuProvider API operation for FortiManager deletes the specified Hotspot20H2Qp Osu Provider.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOsuProvider(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOsuProvider API operation for FortiManager gets the Hotspot20H2Qp Osu Provider
// with the specified index value.
// Returns the requested Hotspot20H2Qp Osu Provider value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOsuProvider(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOsuProviderNai API operation for FortiManager creates a new Hotspot20H2Qp Osu Provider Nai.
// Returns the index value of the Hotspot20H2Qp Osu Provider Nai and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOsuProviderNai(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOsuProviderNai API operation for FortiManager updates the specified Hotspot20H2Qp Osu Provider Nai.
// Returns the index value of the Hotspot20H2Qp Osu Provider Nai and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOsuProviderNai(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOsuProviderNai API operation for FortiManager deletes the specified Hotspot20H2Qp Osu Provider Nai.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOsuProviderNai(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOsuProviderNai API operation for FortiManager gets the Hotspot20H2Qp Osu Provider Nai
// with the specified index value.
// Returns the requested Hotspot20H2Qp Osu Provider Nai value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOsuProviderNai(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList API operation for FortiManager creates a new Hotspot20H2Qp Osu Provider NaiNai List.
// Returns the index value of the Hotspot20H2Qp Osu Provider NaiNai List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai/{h2qp-osu-provider-nai}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList API operation for FortiManager updates the specified Hotspot20H2Qp Osu Provider NaiNai List.
// Returns the index value of the Hotspot20H2Qp Osu Provider NaiNai List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai/{h2qp-osu-provider-nai}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList API operation for FortiManager deletes the specified Hotspot20H2Qp Osu Provider NaiNai List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai/{h2qp-osu-provider-nai}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList API operation for FortiManager gets the Hotspot20H2Qp Osu Provider NaiNai List
// with the specified index value.
// Returns the requested Hotspot20H2Qp Osu Provider NaiNai List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider-nai nai-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOsuProviderNaiNaiList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider-nai/{h2qp-osu-provider-nai}/nai-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName API operation for FortiManager creates a new Hotspot20H2Qp Osu ProviderFriendly Name.
// Returns the index value of the Hotspot20H2Qp Osu ProviderFriendly Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider friendly-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/friendly-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName API operation for FortiManager updates the specified Hotspot20H2Qp Osu ProviderFriendly Name.
// Returns the index value of the Hotspot20H2Qp Osu ProviderFriendly Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider friendly-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/friendly-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName API operation for FortiManager deletes the specified Hotspot20H2Qp Osu ProviderFriendly Name.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider friendly-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/friendly-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName API operation for FortiManager gets the Hotspot20H2Qp Osu ProviderFriendly Name
// with the specified index value.
// Returns the requested Hotspot20H2Qp Osu ProviderFriendly Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider friendly-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOsuProviderFriendlyName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/friendly-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription API operation for FortiManager creates a new Hotspot20H2Qp Osu ProviderService Description.
// Returns the index value of the Hotspot20H2Qp Osu ProviderService Description and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider service-description chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/service-description"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription API operation for FortiManager updates the specified Hotspot20H2Qp Osu ProviderService Description.
// Returns the index value of the Hotspot20H2Qp Osu ProviderService Description and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider service-description chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/service-description"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription API operation for FortiManager deletes the specified Hotspot20H2Qp Osu ProviderService Description.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider service-description chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/service-description"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription API operation for FortiManager gets the Hotspot20H2Qp Osu ProviderService Description
// with the specified index value.
// Returns the requested Hotspot20H2Qp Osu ProviderService Description value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-osu-provider service-description chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpOsuProviderServiceDescription(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-osu-provider/{h2qp-osu-provider}/service-description"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpTermsAndConditions API operation for FortiManager creates a new Hotspot20H2Qp Terms And Conditions.
// Returns the index value of the Hotspot20H2Qp Terms And Conditions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-terms-and-conditions chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpTermsAndConditions(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-terms-and-conditions"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpTermsAndConditions API operation for FortiManager updates the specified Hotspot20H2Qp Terms And Conditions.
// Returns the index value of the Hotspot20H2Qp Terms And Conditions and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-terms-and-conditions chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpTermsAndConditions(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-terms-and-conditions"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpTermsAndConditions API operation for FortiManager deletes the specified Hotspot20H2Qp Terms And Conditions.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-terms-and-conditions chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpTermsAndConditions(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-terms-and-conditions"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpTermsAndConditions API operation for FortiManager gets the Hotspot20H2Qp Terms And Conditions
// with the specified index value.
// Returns the requested Hotspot20H2Qp Terms And Conditions value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-terms-and-conditions chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpTermsAndConditions(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-terms-and-conditions"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20H2QpWanMetric API operation for FortiManager creates a new Hotspot20H2Qp Wan Metric.
// Returns the index value of the Hotspot20H2Qp Wan Metric and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-wan-metric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20H2QpWanMetric(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-wan-metric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20H2QpWanMetric API operation for FortiManager updates the specified Hotspot20H2Qp Wan Metric.
// Returns the index value of the Hotspot20H2Qp Wan Metric and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-wan-metric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20H2QpWanMetric(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-wan-metric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20H2QpWanMetric API operation for FortiManager deletes the specified Hotspot20H2Qp Wan Metric.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-wan-metric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20H2QpWanMetric(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-wan-metric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20H2QpWanMetric API operation for FortiManager gets the Hotspot20H2Qp Wan Metric
// with the specified index value.
// Returns the requested Hotspot20H2Qp Wan Metric value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 h2qp-wan-metric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20H2QpWanMetric(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/h2qp-wan-metric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20HsProfile API operation for FortiManager creates a new Hotspot20Hs Profile.
// Returns the index value of the Hotspot20Hs Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 hs-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20HsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/hs-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20HsProfile API operation for FortiManager updates the specified Hotspot20Hs Profile.
// Returns the index value of the Hotspot20Hs Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 hs-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20HsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/hs-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20HsProfile API operation for FortiManager deletes the specified Hotspot20Hs Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 hs-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20HsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/hs-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20HsProfile API operation for FortiManager gets the Hotspot20Hs Profile
// with the specified index value.
// Returns the requested Hotspot20Hs Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 hs-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20HsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/hs-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20Icon API operation for FortiManager creates a new Hotspot20Icon.
// Returns the index value of the Hotspot20Icon and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20Icon(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20Icon API operation for FortiManager updates the specified Hotspot20Icon.
// Returns the index value of the Hotspot20Icon and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20Icon(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20Icon API operation for FortiManager deletes the specified Hotspot20Icon.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20Icon(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20Icon API operation for FortiManager gets the Hotspot20Icon
// with the specified index value.
// Returns the requested Hotspot20Icon value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20Icon(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20IconIconList API operation for FortiManager creates a new Hotspot20IconIcon List.
// Returns the index value of the Hotspot20IconIcon List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon icon-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20IconIconList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon/{icon}/icon-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20IconIconList API operation for FortiManager updates the specified Hotspot20IconIcon List.
// Returns the index value of the Hotspot20IconIcon List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon icon-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20IconIconList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon/{icon}/icon-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20IconIconList API operation for FortiManager deletes the specified Hotspot20IconIcon List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon icon-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20IconIconList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon/{icon}/icon-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20IconIconList API operation for FortiManager gets the Hotspot20IconIcon List
// with the specified index value.
// Returns the requested Hotspot20IconIcon List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 icon icon-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20IconIconList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/icon/{icon}/icon-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20QosMap API operation for FortiManager creates a new Hotspot20Qos Map.
// Returns the index value of the Hotspot20Qos Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20QosMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20QosMap API operation for FortiManager updates the specified Hotspot20Qos Map.
// Returns the index value of the Hotspot20Qos Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20QosMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20QosMap API operation for FortiManager deletes the specified Hotspot20Qos Map.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20QosMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20QosMap API operation for FortiManager gets the Hotspot20Qos Map
// with the specified index value.
// Returns the requested Hotspot20Qos Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20QosMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20QosMapDscpExcept API operation for FortiManager creates a new Hotspot20Qos MapDscp Except.
// Returns the index value of the Hotspot20Qos MapDscp Except and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-except chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20QosMapDscpExcept(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-except"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20QosMapDscpExcept API operation for FortiManager updates the specified Hotspot20Qos MapDscp Except.
// Returns the index value of the Hotspot20Qos MapDscp Except and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-except chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20QosMapDscpExcept(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-except"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20QosMapDscpExcept API operation for FortiManager deletes the specified Hotspot20Qos MapDscp Except.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-except chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20QosMapDscpExcept(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-except"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20QosMapDscpExcept API operation for FortiManager gets the Hotspot20Qos MapDscp Except
// with the specified index value.
// Returns the requested Hotspot20Qos MapDscp Except value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-except chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20QosMapDscpExcept(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-except"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerHotspot20QosMapDscpRange API operation for FortiManager creates a new Hotspot20Qos MapDscp Range.
// Returns the index value of the Hotspot20Qos MapDscp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerHotspot20QosMapDscpRange(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerHotspot20QosMapDscpRange API operation for FortiManager updates the specified Hotspot20Qos MapDscp Range.
// Returns the index value of the Hotspot20Qos MapDscp Range and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerHotspot20QosMapDscpRange(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerHotspot20QosMapDscpRange API operation for FortiManager deletes the specified Hotspot20Qos MapDscp Range.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerHotspot20QosMapDscpRange(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerHotspot20QosMapDscpRange API operation for FortiManager gets the Hotspot20Qos MapDscp Range
// with the specified index value.
// Returns the requested Hotspot20Qos MapDscp Range value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - hotspot20 qos-map dscp-range chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerHotspot20QosMapDscpRange(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/hotspot20/qos-map/{qos-map}/dscp-range"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerMpskProfile API operation for FortiManager creates a new Mpsk Profile.
// Returns the index value of the Mpsk Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerMpskProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerMpskProfile API operation for FortiManager updates the specified Mpsk Profile.
// Returns the index value of the Mpsk Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerMpskProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerMpskProfile API operation for FortiManager deletes the specified Mpsk Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerMpskProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerMpskProfile API operation for FortiManager gets the Mpsk Profile
// with the specified index value.
// Returns the requested Mpsk Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerMpskProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerMpskProfileMpskGroup API operation for FortiManager creates a new Mpsk ProfileMpsk Group.
// Returns the index value of the Mpsk ProfileMpsk Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerMpskProfileMpskGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerMpskProfileMpskGroup API operation for FortiManager updates the specified Mpsk ProfileMpsk Group.
// Returns the index value of the Mpsk ProfileMpsk Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerMpskProfileMpskGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerMpskProfileMpskGroup API operation for FortiManager deletes the specified Mpsk ProfileMpsk Group.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerMpskProfileMpskGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerMpskProfileMpskGroup API operation for FortiManager gets the Mpsk ProfileMpsk Group
// with the specified index value.
// Returns the requested Mpsk ProfileMpsk Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerMpskProfileMpskGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerMpskProfileMpskGroupMove API operation for FortiManager updates the specified Mpsk ProfileMpsk GroupMove.
// Returns the index value of the Mpsk ProfileMpsk GroupMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerMpskProfileMpskGroupMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerMpskProfileMpskGroupMove API operation for FortiManager gets the Mpsk ProfileMpsk GroupMove
// with the specified index value.
// Returns the requested Mpsk ProfileMpsk GroupMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerMpskProfileMpskGroupMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerMpskProfileMpskGroupMpskKey API operation for FortiManager creates a new Mpsk ProfileMpsk GroupMpsk Key.
// Returns the index value of the Mpsk ProfileMpsk GroupMpsk Key and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerMpskProfileMpskGroupMpskKey(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerMpskProfileMpskGroupMpskKey API operation for FortiManager updates the specified Mpsk ProfileMpsk GroupMpsk Key.
// Returns the index value of the Mpsk ProfileMpsk GroupMpsk Key and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerMpskProfileMpskGroupMpskKey(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerMpskProfileMpskGroupMpskKey API operation for FortiManager deletes the specified Mpsk ProfileMpsk GroupMpsk Key.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerMpskProfileMpskGroupMpskKey(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerMpskProfileMpskGroupMpskKey API operation for FortiManager gets the Mpsk ProfileMpsk GroupMpsk Key
// with the specified index value.
// Returns the requested Mpsk ProfileMpsk GroupMpsk Key value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerMpskProfileMpskGroupMpskKey(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerMpskProfileMpskGroupMpskKeyMove API operation for FortiManager updates the specified Mpsk ProfileMpsk GroupMpsk KeyMove.
// Returns the index value of the Mpsk ProfileMpsk GroupMpsk KeyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerMpskProfileMpskGroupMpskKeyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key/{mpsk-key}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerMpskProfileMpskGroupMpskKeyMove API operation for FortiManager gets the Mpsk ProfileMpsk GroupMpsk KeyMove
// with the specified index value.
// Returns the requested Mpsk ProfileMpsk GroupMpsk KeyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - mpsk-profile mpsk-group mpsk-key move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerMpskProfileMpskGroupMpskKeyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/mpsk-profile/{mpsk-profile}/mpsk-group/{mpsk-group}/mpsk-key"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerNacProfile API operation for FortiManager creates a new Nac Profile.
// Returns the index value of the Nac Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - nac-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerNacProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/nac-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerNacProfile API operation for FortiManager updates the specified Nac Profile.
// Returns the index value of the Nac Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - nac-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerNacProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/nac-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerNacProfile API operation for FortiManager deletes the specified Nac Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - nac-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerNacProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/nac-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerNacProfile API operation for FortiManager gets the Nac Profile
// with the specified index value.
// Returns the requested Nac Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - nac-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerNacProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/nac-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerQosProfile API operation for FortiManager creates a new Qos Profile.
// Returns the index value of the Qos Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - qos-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerQosProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/qos-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerQosProfile API operation for FortiManager updates the specified Qos Profile.
// Returns the index value of the Qos Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - qos-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerQosProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/qos-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerQosProfile API operation for FortiManager deletes the specified Qos Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - qos-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerQosProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/qos-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerQosProfile API operation for FortiManager gets the Qos Profile
// with the specified index value.
// Returns the requested Qos Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - qos-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerQosProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/qos-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerSsidPolicy API operation for FortiManager creates a new Ssid Policy.
// Returns the index value of the Ssid Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ssid-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerSsidPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ssid-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerSsidPolicy API operation for FortiManager updates the specified Ssid Policy.
// Returns the index value of the Ssid Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ssid-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerSsidPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ssid-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerSsidPolicy API operation for FortiManager deletes the specified Ssid Policy.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ssid-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerSsidPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ssid-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerSsidPolicy API operation for FortiManager gets the Ssid Policy
// with the specified index value.
// Returns the requested Ssid Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - ssid-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerSsidPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/ssid-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerSyslogProfile API operation for FortiManager creates a new Syslog Profile.
// Returns the index value of the Syslog Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - syslog-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerSyslogProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/syslog-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerSyslogProfile API operation for FortiManager updates the specified Syslog Profile.
// Returns the index value of the Syslog Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - syslog-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerSyslogProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/syslog-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerSyslogProfile API operation for FortiManager deletes the specified Syslog Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - syslog-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerSyslogProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/syslog-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerSyslogProfile API operation for FortiManager gets the Syslog Profile
// with the specified index value.
// Returns the requested Syslog Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - syslog-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerSyslogProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/syslog-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerUtmProfile API operation for FortiManager creates a new Utm Profile.
// Returns the index value of the Utm Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - utm-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerUtmProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/utm-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerUtmProfile API operation for FortiManager updates the specified Utm Profile.
// Returns the index value of the Utm Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - utm-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerUtmProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/utm-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerUtmProfile API operation for FortiManager deletes the specified Utm Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - utm-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerUtmProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/utm-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerUtmProfile API operation for FortiManager gets the Utm Profile
// with the specified index value.
// Returns the requested Utm Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - utm-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerUtmProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/utm-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerVap API operation for FortiManager creates a new Vap.
// Returns the index value of the Vap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVap API operation for FortiManager updates the specified Vap.
// Returns the index value of the Vap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVap API operation for FortiManager deletes the specified Vap.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVap API operation for FortiManager gets the Vap
// with the specified index value.
// Returns the requested Vap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerVapGroup API operation for FortiManager creates a new Vap Group.
// Returns the index value of the Vap Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVapGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVapGroup API operation for FortiManager updates the specified Vap Group.
// Returns the index value of the Vap Group and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapGroup API operation for FortiManager deletes the specified Vap Group.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapGroup(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVapGroup API operation for FortiManager gets the Vap Group
// with the specified index value.
// Returns the requested Vap Group value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap-group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap-group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerVapDynamicMapping API operation for FortiManager creates a new VapDynamicMapping.
// Returns the index value of the VapDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVapDynamicMapping(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVapDynamicMapping API operation for FortiManager updates the specified VapDynamicMapping.
// Returns the index value of the VapDynamicMapping and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapDynamicMapping(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapDynamicMapping API operation for FortiManager deletes the specified VapDynamicMapping.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapDynamicMapping(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVapDynamicMapping API operation for FortiManager gets the VapDynamicMapping
// with the specified index value.
// Returns the requested VapDynamicMapping value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap dynamic mapping chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapDynamicMapping(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/dynamic_mapping"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLStringDMScope(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerVapMacFilterList API operation for FortiManager creates a new VapMac Filter List.
// Returns the index value of the VapMac Filter List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap mac-filter-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVapMacFilterList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/mac-filter-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVapMacFilterList API operation for FortiManager updates the specified VapMac Filter List.
// Returns the index value of the VapMac Filter List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap mac-filter-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapMacFilterList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/mac-filter-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapMacFilterList API operation for FortiManager deletes the specified VapMac Filter List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap mac-filter-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapMacFilterList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/mac-filter-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVapMacFilterList API operation for FortiManager gets the VapMac Filter List
// with the specified index value.
// Returns the requested VapMac Filter List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap mac-filter-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapMacFilterList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/mac-filter-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerVapPortalMessageOverrides API operation for FortiManager updates the specified VapPortal Message Overrides.
// Returns the index value of the VapPortal Message Overrides and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap portal-message-overrides chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapPortalMessageOverrides(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/portal-message-overrides"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapPortalMessageOverrides API operation for FortiManager deletes the specified VapPortal Message Overrides.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap portal-message-overrides chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapPortalMessageOverrides(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - vap portal-message-overrides
	return
}

// ReadObjectWirelessControllerVapPortalMessageOverrides API operation for FortiManager gets the VapPortal Message Overrides
// with the specified index value.
// Returns the requested VapPortal Message Overrides value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap portal-message-overrides chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapPortalMessageOverrides(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/portal-message-overrides"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerVapVlanName API operation for FortiManager creates a new VapVlan Name.
// Returns the index value of the VapVlan Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVapVlanName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVapVlanName API operation for FortiManager updates the specified VapVlan Name.
// Returns the index value of the VapVlan Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapVlanName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapVlanName API operation for FortiManager deletes the specified VapVlan Name.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapVlanName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVapVlanName API operation for FortiManager gets the VapVlan Name
// with the specified index value.
// Returns the requested VapVlan Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapVlanName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerVapVlanNameMove API operation for FortiManager updates the specified VapVlan NameMove.
// Returns the index value of the VapVlan NameMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapVlanNameMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name/{vlan-name}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadObjectWirelessControllerVapVlanNameMove API operation for FortiManager gets the VapVlan NameMove
// with the specified index value.
// Returns the requested VapVlan NameMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-name move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapVlanNameMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateObjectWirelessControllerVapVlanPool API operation for FortiManager creates a new VapVlan Pool.
// Returns the index value of the VapVlan Pool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-pool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerVapVlanPool(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-pool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerVapVlanPool API operation for FortiManager updates the specified VapVlan Pool.
// Returns the index value of the VapVlan Pool and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-pool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerVapVlanPool(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-pool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerVapVlanPool API operation for FortiManager deletes the specified VapVlan Pool.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-pool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerVapVlanPool(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-pool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerVapVlanPool API operation for FortiManager gets the VapVlan Pool
// with the specified index value.
// Returns the requested VapVlan Pool value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - vap vlan-pool chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerVapVlanPool(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/vap/{vap}/vlan-pool"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerWagProfile API operation for FortiManager creates a new Wag Profile.
// Returns the index value of the Wag Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wag-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerWagProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wag-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerWagProfile API operation for FortiManager updates the specified Wag Profile.
// Returns the index value of the Wag Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wag-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWagProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wag-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWagProfile API operation for FortiManager deletes the specified Wag Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wag-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWagProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wag-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerWagProfile API operation for FortiManager gets the Wag Profile
// with the specified index value.
// Returns the requested Wag Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wag-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWagProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wag-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerWidsProfile API operation for FortiManager creates a new Wids Profile.
// Returns the index value of the Wids Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wids-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerWidsProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wids-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerWidsProfile API operation for FortiManager updates the specified Wids Profile.
// Returns the index value of the Wids Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wids-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWidsProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wids-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWidsProfile API operation for FortiManager deletes the specified Wids Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wids-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWidsProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wids-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerWidsProfile API operation for FortiManager gets the Wids Profile
// with the specified index value.
// Returns the requested Wids Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wids-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWidsProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wids-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerWtpProfile API operation for FortiManager creates a new Wtp Profile.
// Returns the index value of the Wtp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerWtpProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerWtpProfile API operation for FortiManager updates the specified Wtp Profile.
// Returns the index value of the Wtp Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfile API operation for FortiManager deletes the specified Wtp Profile.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfile(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerWtpProfile API operation for FortiManager gets the Wtp Profile
// with the specified index value.
// Returns the requested Wtp Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerWtpProfileDenyMacList API operation for FortiManager creates a new Wtp ProfileDeny Mac List.
// Returns the index value of the Wtp ProfileDeny Mac List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile deny-mac-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerWtpProfileDenyMacList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/deny-mac-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerWtpProfileDenyMacList API operation for FortiManager updates the specified Wtp ProfileDeny Mac List.
// Returns the index value of the Wtp ProfileDeny Mac List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile deny-mac-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileDenyMacList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/deny-mac-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileDenyMacList API operation for FortiManager deletes the specified Wtp ProfileDeny Mac List.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile deny-mac-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileDenyMacList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/deny-mac-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerWtpProfileDenyMacList API operation for FortiManager gets the Wtp ProfileDeny Mac List
// with the specified index value.
// Returns the requested Wtp ProfileDeny Mac List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile deny-mac-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileDenyMacList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/deny-mac-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileEslSesDongle API operation for FortiManager updates the specified Wtp ProfileEsl Ses Dongle.
// Returns the index value of the Wtp ProfileEsl Ses Dongle and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile esl-ses-dongle chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileEslSesDongle(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/esl-ses-dongle"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileEslSesDongle API operation for FortiManager deletes the specified Wtp ProfileEsl Ses Dongle.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile esl-ses-dongle chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileEslSesDongle(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile esl-ses-dongle
	return
}

// ReadObjectWirelessControllerWtpProfileEslSesDongle API operation for FortiManager gets the Wtp ProfileEsl Ses Dongle
// with the specified index value.
// Returns the requested Wtp ProfileEsl Ses Dongle value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile esl-ses-dongle chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileEslSesDongle(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/esl-ses-dongle"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileLan API operation for FortiManager updates the specified Wtp ProfileLan.
// Returns the index value of the Wtp ProfileLan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileLan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/lan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileLan API operation for FortiManager deletes the specified Wtp ProfileLan.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileLan(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile lan
	return
}

// ReadObjectWirelessControllerWtpProfileLan API operation for FortiManager gets the Wtp ProfileLan
// with the specified index value.
// Returns the requested Wtp ProfileLan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileLan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/lan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileLbs API operation for FortiManager updates the specified Wtp ProfileLbs.
// Returns the index value of the Wtp ProfileLbs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lbs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileLbs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/lbs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileLbs API operation for FortiManager deletes the specified Wtp ProfileLbs.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lbs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileLbs(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile lbs
	return
}

// ReadObjectWirelessControllerWtpProfileLbs API operation for FortiManager gets the Wtp ProfileLbs
// with the specified index value.
// Returns the requested Wtp ProfileLbs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile lbs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileLbs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/lbs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfilePlatform API operation for FortiManager updates the specified Wtp ProfilePlatform.
// Returns the index value of the Wtp ProfilePlatform and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile platform chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfilePlatform(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/platform"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfilePlatform API operation for FortiManager deletes the specified Wtp ProfilePlatform.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile platform chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfilePlatform(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile platform
	return
}

// ReadObjectWirelessControllerWtpProfilePlatform API operation for FortiManager gets the Wtp ProfilePlatform
// with the specified index value.
// Returns the requested Wtp ProfilePlatform value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile platform chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfilePlatform(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/platform"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileRadio1 API operation for FortiManager updates the specified Wtp ProfileRadio 1.
// Returns the index value of the Wtp ProfileRadio 1 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileRadio1(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileRadio1 API operation for FortiManager deletes the specified Wtp ProfileRadio 1.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileRadio1(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile radio-1
	return
}

// ReadObjectWirelessControllerWtpProfileRadio1 API operation for FortiManager gets the Wtp ProfileRadio 1
// with the specified index value.
// Returns the requested Wtp ProfileRadio 1 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-1 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileRadio1(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-1"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileRadio2 API operation for FortiManager updates the specified Wtp ProfileRadio 2.
// Returns the index value of the Wtp ProfileRadio 2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileRadio2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileRadio2 API operation for FortiManager deletes the specified Wtp ProfileRadio 2.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileRadio2(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile radio-2
	return
}

// ReadObjectWirelessControllerWtpProfileRadio2 API operation for FortiManager gets the Wtp ProfileRadio 2
// with the specified index value.
// Returns the requested Wtp ProfileRadio 2 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileRadio2(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileRadio3 API operation for FortiManager updates the specified Wtp ProfileRadio 3.
// Returns the index value of the Wtp ProfileRadio 3 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileRadio3(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileRadio3 API operation for FortiManager deletes the specified Wtp ProfileRadio 3.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileRadio3(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile radio-3
	return
}

// ReadObjectWirelessControllerWtpProfileRadio3 API operation for FortiManager gets the Wtp ProfileRadio 3
// with the specified index value.
// Returns the requested Wtp ProfileRadio 3 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-3 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileRadio3(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-3"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateObjectWirelessControllerWtpProfileRadio4 API operation for FortiManager updates the specified Wtp ProfileRadio 4.
// Returns the index value of the Wtp ProfileRadio 4 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-4 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileRadio4(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-4"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileRadio4 API operation for FortiManager deletes the specified Wtp ProfileRadio 4.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-4 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileRadio4(mkey string, paradict map[string]string) (err error) {

	//No unset API for object wireless-controller - wtp-profile radio-4
	return
}

// ReadObjectWirelessControllerWtpProfileRadio4 API operation for FortiManager gets the Wtp ProfileRadio 4
// with the specified index value.
// Returns the requested Wtp ProfileRadio 4 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile radio-4 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileRadio4(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/radio-4"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateObjectWirelessControllerWtpProfileSplitTunnelingAcl API operation for FortiManager creates a new Wtp ProfileSplit Tunneling Acl.
// Returns the index value of the Wtp ProfileSplit Tunneling Acl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile split-tunneling-acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateObjectWirelessControllerWtpProfileSplitTunnelingAcl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/split-tunneling-acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateObjectWirelessControllerWtpProfileSplitTunnelingAcl API operation for FortiManager updates the specified Wtp ProfileSplit Tunneling Acl.
// Returns the index value of the Wtp ProfileSplit Tunneling Acl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile split-tunneling-acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateObjectWirelessControllerWtpProfileSplitTunnelingAcl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/split-tunneling-acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteObjectWirelessControllerWtpProfileSplitTunnelingAcl API operation for FortiManager deletes the specified Wtp ProfileSplit Tunneling Acl.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile split-tunneling-acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteObjectWirelessControllerWtpProfileSplitTunnelingAcl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/split-tunneling-acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadObjectWirelessControllerWtpProfileSplitTunnelingAcl API operation for FortiManager gets the Wtp ProfileSplit Tunneling Acl
// with the specified index value.
// Returns the requested Wtp ProfileSplit Tunneling Acl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the object wireless-controller - wtp-profile split-tunneling-acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadObjectWirelessControllerWtpProfileSplitTunnelingAcl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/obj/wireless-controller/wtp-profile/{wtp-profile}/split-tunneling-acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesAuthenticationRule API operation for FortiManager creates a new AuthenticationRule.
// Returns the index value of the AuthenticationRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - authentication rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesAuthenticationRule(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesAuthenticationRule API operation for FortiManager updates the specified AuthenticationRule.
// Returns the index value of the AuthenticationRule and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - authentication rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesAuthenticationRule(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesAuthenticationRule API operation for FortiManager deletes the specified AuthenticationRule.
// Returns error for service API and SDK errors.
// See the packages - authentication rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesAuthenticationRule(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesAuthenticationRule API operation for FortiManager gets the AuthenticationRule
// with the specified index value.
// Returns the requested AuthenticationRule value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - authentication rule chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesAuthenticationRule(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/rule"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesAuthenticationSetting API operation for FortiManager updates the specified AuthenticationSetting.
// Returns the index value of the AuthenticationSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - authentication setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesAuthenticationSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesAuthenticationSetting API operation for FortiManager deletes the specified AuthenticationSetting.
// Returns error for service API and SDK errors.
// See the packages - authentication setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesAuthenticationSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for packages - authentication setting
	return
}

// ReadPackagesAuthenticationSetting API operation for FortiManager gets the AuthenticationSetting
// with the specified index value.
// Returns the requested AuthenticationSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - authentication setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesAuthenticationSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/authentication/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesCentralDnat API operation for FortiManager creates a new CentralDnat.
// Returns the index value of the CentralDnat and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesCentralDnat(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesCentralDnat API operation for FortiManager updates the specified CentralDnat.
// Returns the index value of the CentralDnat and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesCentralDnat(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesCentralDnat API operation for FortiManager deletes the specified CentralDnat.
// Returns error for service API and SDK errors.
// See the packages - central dnat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesCentralDnat(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesCentralDnat API operation for FortiManager gets the CentralDnat
// with the specified index value.
// Returns the requested CentralDnat value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesCentralDnat(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesCentralDnat6 API operation for FortiManager creates a new CentralDnat6.
// Returns the index value of the CentralDnat6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesCentralDnat6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesCentralDnat6 API operation for FortiManager updates the specified CentralDnat6.
// Returns the index value of the CentralDnat6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesCentralDnat6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesCentralDnat6 API operation for FortiManager deletes the specified CentralDnat6.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesCentralDnat6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesCentralDnat6 API operation for FortiManager gets the CentralDnat6
// with the specified index value.
// Returns the requested CentralDnat6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesCentralDnat6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesCentralDnat6Move API operation for FortiManager updates the specified CentralDnat6Move.
// Returns the index value of the CentralDnat6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesCentralDnat6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6/{dnat6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesCentralDnat6Move API operation for FortiManager gets the CentralDnat6Move
// with the specified index value.
// Returns the requested CentralDnat6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesCentralDnat6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesCentralDnatMove API operation for FortiManager updates the specified CentralDnatMove.
// Returns the index value of the CentralDnatMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesCentralDnatMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat/{dnat}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesCentralDnatMove API operation for FortiManager gets the CentralDnatMove
// with the specified index value.
// Returns the requested CentralDnatMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - central dnat move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesCentralDnatMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/central/dnat"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallDosPolicy API operation for FortiManager creates a new FirewallDos Policy.
// Returns the index value of the FirewallDos Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallDosPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallDosPolicy API operation for FortiManager updates the specified FirewallDos Policy.
// Returns the index value of the FirewallDos Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallDosPolicy API operation for FortiManager deletes the specified FirewallDos Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallDosPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallDosPolicy API operation for FortiManager gets the FirewallDos Policy
// with the specified index value.
// Returns the requested FirewallDos Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallDosPolicy6 API operation for FortiManager creates a new FirewallDos Policy6.
// Returns the index value of the FirewallDos Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallDosPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallDosPolicy6 API operation for FortiManager updates the specified FirewallDos Policy6.
// Returns the index value of the FirewallDos Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallDosPolicy6 API operation for FortiManager deletes the specified FirewallDos Policy6.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallDosPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallDosPolicy6 API operation for FortiManager gets the FirewallDos Policy6
// with the specified index value.
// Returns the requested FirewallDos Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallDosPolicy6Anomaly API operation for FortiManager creates a new FirewallDos Policy6Anomaly.
// Returns the index value of the FirewallDos Policy6Anomaly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallDosPolicy6Anomaly(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6/{DoS-policy6}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallDosPolicy6Anomaly API operation for FortiManager updates the specified FirewallDos Policy6Anomaly.
// Returns the index value of the FirewallDos Policy6Anomaly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicy6Anomaly(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6/{DoS-policy6}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallDosPolicy6Anomaly API operation for FortiManager deletes the specified FirewallDos Policy6Anomaly.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallDosPolicy6Anomaly(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6/{DoS-policy6}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallDosPolicy6Anomaly API operation for FortiManager gets the FirewallDos Policy6Anomaly
// with the specified index value.
// Returns the requested FirewallDos Policy6Anomaly value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicy6Anomaly(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6/{DoS-policy6}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallDosPolicy6Move API operation for FortiManager updates the specified FirewallDos Policy6Move.
// Returns the index value of the FirewallDos Policy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6/{DoS-policy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallDosPolicy6Move API operation for FortiManager gets the FirewallDos Policy6Move
// with the specified index value.
// Returns the requested FirewallDos Policy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallDosPolicyAnomaly API operation for FortiManager creates a new FirewallDos PolicyAnomaly.
// Returns the index value of the FirewallDos PolicyAnomaly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallDosPolicyAnomaly(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy/{DoS-policy}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallDosPolicyAnomaly API operation for FortiManager updates the specified FirewallDos PolicyAnomaly.
// Returns the index value of the FirewallDos PolicyAnomaly and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicyAnomaly(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy/{DoS-policy}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallDosPolicyAnomaly API operation for FortiManager deletes the specified FirewallDos PolicyAnomaly.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallDosPolicyAnomaly(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy/{DoS-policy}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallDosPolicyAnomaly API operation for FortiManager gets the FirewallDos PolicyAnomaly
// with the specified index value.
// Returns the requested FirewallDos PolicyAnomaly value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy anomaly chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicyAnomaly(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy/{DoS-policy}/anomaly"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallDosPolicyMove API operation for FortiManager updates the specified FirewallDos PolicyMove.
// Returns the index value of the FirewallDos PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallDosPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy/{DoS-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallDosPolicyMove API operation for FortiManager gets the FirewallDos PolicyMove
// with the specified index value.
// Returns the requested FirewallDos PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall DoS-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallDosPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/DoS-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallAcl API operation for FortiManager creates a new FirewallAcl.
// Returns the index value of the FirewallAcl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallAcl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallAcl API operation for FortiManager updates the specified FirewallAcl.
// Returns the index value of the FirewallAcl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallAcl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallAcl API operation for FortiManager deletes the specified FirewallAcl.
// Returns error for service API and SDK errors.
// See the packages - firewall acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallAcl(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallAcl API operation for FortiManager gets the FirewallAcl
// with the specified index value.
// Returns the requested FirewallAcl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallAcl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallAcl6 API operation for FortiManager creates a new FirewallAcl6.
// Returns the index value of the FirewallAcl6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallAcl6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallAcl6 API operation for FortiManager updates the specified FirewallAcl6.
// Returns the index value of the FirewallAcl6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallAcl6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallAcl6 API operation for FortiManager deletes the specified FirewallAcl6.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallAcl6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallAcl6 API operation for FortiManager gets the FirewallAcl6
// with the specified index value.
// Returns the requested FirewallAcl6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallAcl6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallAcl6Move API operation for FortiManager updates the specified FirewallAcl6Move.
// Returns the index value of the FirewallAcl6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallAcl6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6/{acl6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallAcl6Move API operation for FortiManager gets the FirewallAcl6Move
// with the specified index value.
// Returns the requested FirewallAcl6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallAcl6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallAclMove API operation for FortiManager updates the specified FirewallAclMove.
// Returns the index value of the FirewallAclMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallAclMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl/{acl}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallAclMove API operation for FortiManager gets the FirewallAclMove
// with the specified index value.
// Returns the requested FirewallAclMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall acl move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallAclMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/acl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallCentralSnatMap API operation for FortiManager creates a new FirewallCentral Snat Map.
// Returns the index value of the FirewallCentral Snat Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallCentralSnatMap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallCentralSnatMap API operation for FortiManager updates the specified FirewallCentral Snat Map.
// Returns the index value of the FirewallCentral Snat Map and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallCentralSnatMap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallCentralSnatMap API operation for FortiManager deletes the specified FirewallCentral Snat Map.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallCentralSnatMap(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallCentralSnatMap API operation for FortiManager gets the FirewallCentral Snat Map
// with the specified index value.
// Returns the requested FirewallCentral Snat Map value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallCentralSnatMap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallCentralSnatMapMove API operation for FortiManager updates the specified FirewallCentral Snat MapMove.
// Returns the index value of the FirewallCentral Snat MapMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallCentralSnatMapMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map/{central-snat-map}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallCentralSnatMapMove API operation for FortiManager gets the FirewallCentral Snat MapMove
// with the specified index value.
// Returns the requested FirewallCentral Snat MapMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall central-snat-map move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallCentralSnatMapMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/central-snat-map"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallConsolidatedPolicy API operation for FortiManager creates a new FirewallConsolidatedPolicy.
// Returns the index value of the FirewallConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallConsolidatedPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallConsolidatedPolicy API operation for FortiManager updates the specified FirewallConsolidatedPolicy.
// Returns the index value of the FirewallConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallConsolidatedPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallConsolidatedPolicy API operation for FortiManager deletes the specified FirewallConsolidatedPolicy.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallConsolidatedPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallConsolidatedPolicy API operation for FortiManager gets the FirewallConsolidatedPolicy
// with the specified index value.
// Returns the requested FirewallConsolidatedPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallConsolidatedPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallConsolidatedPolicyMove API operation for FortiManager updates the specified FirewallConsolidatedPolicyMove.
// Returns the index value of the FirewallConsolidatedPolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallConsolidatedPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy/{policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallConsolidatedPolicyMove API operation for FortiManager gets the FirewallConsolidatedPolicyMove
// with the specified index value.
// Returns the requested FirewallConsolidatedPolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall consolidated policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallConsolidatedPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallHyperscalePolicy API operation for FortiManager creates a new FirewallHyperscale Policy.
// Returns the index value of the FirewallHyperscale Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallHyperscalePolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallHyperscalePolicy API operation for FortiManager updates the specified FirewallHyperscale Policy.
// Returns the index value of the FirewallHyperscale Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallHyperscalePolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallHyperscalePolicy API operation for FortiManager deletes the specified FirewallHyperscale Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallHyperscalePolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallHyperscalePolicy API operation for FortiManager gets the FirewallHyperscale Policy
// with the specified index value.
// Returns the requested FirewallHyperscale Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallHyperscalePolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallHyperscalePolicy46 API operation for FortiManager creates a new FirewallHyperscale Policy46.
// Returns the index value of the FirewallHyperscale Policy46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallHyperscalePolicy46(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallHyperscalePolicy46 API operation for FortiManager updates the specified FirewallHyperscale Policy46.
// Returns the index value of the FirewallHyperscale Policy46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallHyperscalePolicy46(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallHyperscalePolicy46 API operation for FortiManager deletes the specified FirewallHyperscale Policy46.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallHyperscalePolicy46(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallHyperscalePolicy46 API operation for FortiManager gets the FirewallHyperscale Policy46
// with the specified index value.
// Returns the requested FirewallHyperscale Policy46 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallHyperscalePolicy46(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallHyperscalePolicy6 API operation for FortiManager creates a new FirewallHyperscale Policy6.
// Returns the index value of the FirewallHyperscale Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallHyperscalePolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallHyperscalePolicy6 API operation for FortiManager updates the specified FirewallHyperscale Policy6.
// Returns the index value of the FirewallHyperscale Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallHyperscalePolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallHyperscalePolicy6 API operation for FortiManager deletes the specified FirewallHyperscale Policy6.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallHyperscalePolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallHyperscalePolicy6 API operation for FortiManager gets the FirewallHyperscale Policy6
// with the specified index value.
// Returns the requested FirewallHyperscale Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallHyperscalePolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallHyperscalePolicy64 API operation for FortiManager creates a new FirewallHyperscale Policy64.
// Returns the index value of the FirewallHyperscale Policy64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallHyperscalePolicy64(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallHyperscalePolicy64 API operation for FortiManager updates the specified FirewallHyperscale Policy64.
// Returns the index value of the FirewallHyperscale Policy64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallHyperscalePolicy64(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallHyperscalePolicy64 API operation for FortiManager deletes the specified FirewallHyperscale Policy64.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallHyperscalePolicy64(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallHyperscalePolicy64 API operation for FortiManager gets the FirewallHyperscale Policy64
// with the specified index value.
// Returns the requested FirewallHyperscale Policy64 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall hyperscale-policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallHyperscalePolicy64(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/hyperscale-policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallInterfacePolicy API operation for FortiManager creates a new FirewallInterface Policy.
// Returns the index value of the FirewallInterface Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallInterfacePolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallInterfacePolicy API operation for FortiManager updates the specified FirewallInterface Policy.
// Returns the index value of the FirewallInterface Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallInterfacePolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallInterfacePolicy API operation for FortiManager deletes the specified FirewallInterface Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallInterfacePolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallInterfacePolicy API operation for FortiManager gets the FirewallInterface Policy
// with the specified index value.
// Returns the requested FirewallInterface Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallInterfacePolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallInterfacePolicy6 API operation for FortiManager creates a new FirewallInterface Policy6.
// Returns the index value of the FirewallInterface Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallInterfacePolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallInterfacePolicy6 API operation for FortiManager updates the specified FirewallInterface Policy6.
// Returns the index value of the FirewallInterface Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallInterfacePolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallInterfacePolicy6 API operation for FortiManager deletes the specified FirewallInterface Policy6.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallInterfacePolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallInterfacePolicy6 API operation for FortiManager gets the FirewallInterface Policy6
// with the specified index value.
// Returns the requested FirewallInterface Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallInterfacePolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallInterfacePolicy6Move API operation for FortiManager updates the specified FirewallInterface Policy6Move.
// Returns the index value of the FirewallInterface Policy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallInterfacePolicy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6/{interface-policy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallInterfacePolicy6Move API operation for FortiManager gets the FirewallInterface Policy6Move
// with the specified index value.
// Returns the requested FirewallInterface Policy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallInterfacePolicy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallInterfacePolicyMove API operation for FortiManager updates the specified FirewallInterface PolicyMove.
// Returns the index value of the FirewallInterface PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallInterfacePolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy/{interface-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallInterfacePolicyMove API operation for FortiManager gets the FirewallInterface PolicyMove
// with the specified index value.
// Returns the requested FirewallInterface PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall interface-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallInterfacePolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/interface-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallLocalInPolicy API operation for FortiManager creates a new FirewallLocal In Policy.
// Returns the index value of the FirewallLocal In Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallLocalInPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallLocalInPolicy API operation for FortiManager updates the specified FirewallLocal In Policy.
// Returns the index value of the FirewallLocal In Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallLocalInPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallLocalInPolicy API operation for FortiManager deletes the specified FirewallLocal In Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallLocalInPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallLocalInPolicy API operation for FortiManager gets the FirewallLocal In Policy
// with the specified index value.
// Returns the requested FirewallLocal In Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallLocalInPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallLocalInPolicy6 API operation for FortiManager creates a new FirewallLocal In Policy6.
// Returns the index value of the FirewallLocal In Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallLocalInPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallLocalInPolicy6 API operation for FortiManager updates the specified FirewallLocal In Policy6.
// Returns the index value of the FirewallLocal In Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallLocalInPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallLocalInPolicy6 API operation for FortiManager deletes the specified FirewallLocal In Policy6.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallLocalInPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallLocalInPolicy6 API operation for FortiManager gets the FirewallLocal In Policy6
// with the specified index value.
// Returns the requested FirewallLocal In Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallLocalInPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallLocalInPolicy6Move API operation for FortiManager updates the specified FirewallLocal In Policy6Move.
// Returns the index value of the FirewallLocal In Policy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallLocalInPolicy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6/{local-in-policy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallLocalInPolicy6Move API operation for FortiManager gets the FirewallLocal In Policy6Move
// with the specified index value.
// Returns the requested FirewallLocal In Policy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallLocalInPolicy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallLocalInPolicyMove API operation for FortiManager updates the specified FirewallLocal In PolicyMove.
// Returns the index value of the FirewallLocal In PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallLocalInPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy/{local-in-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallLocalInPolicyMove API operation for FortiManager gets the FirewallLocal In PolicyMove
// with the specified index value.
// Returns the requested FirewallLocal In PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall local-in-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallLocalInPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallMulticastPolicy API operation for FortiManager creates a new FirewallMulticast Policy.
// Returns the index value of the FirewallMulticast Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallMulticastPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallMulticastPolicy API operation for FortiManager updates the specified FirewallMulticast Policy.
// Returns the index value of the FirewallMulticast Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallMulticastPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallMulticastPolicy API operation for FortiManager deletes the specified FirewallMulticast Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallMulticastPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallMulticastPolicy API operation for FortiManager gets the FirewallMulticast Policy
// with the specified index value.
// Returns the requested FirewallMulticast Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallMulticastPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallMulticastPolicy6 API operation for FortiManager creates a new FirewallMulticast Policy6.
// Returns the index value of the FirewallMulticast Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallMulticastPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallMulticastPolicy6 API operation for FortiManager updates the specified FirewallMulticast Policy6.
// Returns the index value of the FirewallMulticast Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallMulticastPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallMulticastPolicy6 API operation for FortiManager deletes the specified FirewallMulticast Policy6.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallMulticastPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallMulticastPolicy6 API operation for FortiManager gets the FirewallMulticast Policy6
// with the specified index value.
// Returns the requested FirewallMulticast Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallMulticastPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallMulticastPolicy6Move API operation for FortiManager updates the specified FirewallMulticast Policy6Move.
// Returns the index value of the FirewallMulticast Policy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallMulticastPolicy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6/{multicast-policy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallMulticastPolicy6Move API operation for FortiManager gets the FirewallMulticast Policy6Move
// with the specified index value.
// Returns the requested FirewallMulticast Policy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallMulticastPolicy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallMulticastPolicyMove API operation for FortiManager updates the specified FirewallMulticast PolicyMove.
// Returns the index value of the FirewallMulticast PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallMulticastPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy/{multicast-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallMulticastPolicyMove API operation for FortiManager gets the FirewallMulticast PolicyMove
// with the specified index value.
// Returns the requested FirewallMulticast PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall multicast-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallMulticastPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/multicast-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallPolicy API operation for FortiManager creates a new FirewallPolicy.
// Returns the index value of the FirewallPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallPolicy API operation for FortiManager updates the specified FirewallPolicy.
// Returns the index value of the FirewallPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallPolicy API operation for FortiManager deletes the specified FirewallPolicy.
// Returns error for service API and SDK errors.
// See the packages - firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallPolicy API operation for FortiManager gets the FirewallPolicy
// with the specified index value.
// Returns the requested FirewallPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallPolicy46 API operation for FortiManager creates a new FirewallPolicy46.
// Returns the index value of the FirewallPolicy46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallPolicy46(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallPolicy46 API operation for FortiManager updates the specified FirewallPolicy46.
// Returns the index value of the FirewallPolicy46 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy46(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallPolicy46 API operation for FortiManager deletes the specified FirewallPolicy46.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallPolicy46(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallPolicy46 API operation for FortiManager gets the FirewallPolicy46
// with the specified index value.
// Returns the requested FirewallPolicy46 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy46(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallPolicy46Move API operation for FortiManager updates the specified FirewallPolicy46Move.
// Returns the index value of the FirewallPolicy46Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy46Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46/{policy46}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallPolicy46Move API operation for FortiManager gets the FirewallPolicy46Move
// with the specified index value.
// Returns the requested FirewallPolicy46Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy46 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy46Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy46"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallPolicy6 API operation for FortiManager creates a new FirewallPolicy6.
// Returns the index value of the FirewallPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallPolicy6 API operation for FortiManager updates the specified FirewallPolicy6.
// Returns the index value of the FirewallPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallPolicy6 API operation for FortiManager deletes the specified FirewallPolicy6.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallPolicy6 API operation for FortiManager gets the FirewallPolicy6
// with the specified index value.
// Returns the requested FirewallPolicy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesFirewallPolicy64 API operation for FortiManager creates a new FirewallPolicy64.
// Returns the index value of the FirewallPolicy64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallPolicy64(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallPolicy64 API operation for FortiManager updates the specified FirewallPolicy64.
// Returns the index value of the FirewallPolicy64 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy64(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallPolicy64 API operation for FortiManager deletes the specified FirewallPolicy64.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallPolicy64(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallPolicy64 API operation for FortiManager gets the FirewallPolicy64
// with the specified index value.
// Returns the requested FirewallPolicy64 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy64(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallPolicy64Move API operation for FortiManager updates the specified FirewallPolicy64Move.
// Returns the index value of the FirewallPolicy64Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy64Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64/{policy64}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallPolicy64Move API operation for FortiManager gets the FirewallPolicy64Move
// with the specified index value.
// Returns the requested FirewallPolicy64Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy64 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy64Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy64"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallPolicy6Move API operation for FortiManager updates the specified FirewallPolicy6Move.
// Returns the index value of the FirewallPolicy6Move and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicy6Move(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6/{policy6}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallPolicy6Move API operation for FortiManager gets the FirewallPolicy6Move
// with the specified index value.
// Returns the requested FirewallPolicy6Move value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy6 move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicy6Move(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdatePackagesFirewallPolicyMove API operation for FortiManager updates the specified FirewallPolicyMove.
// Returns the index value of the FirewallPolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy/{policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallPolicyMove API operation for FortiManager gets the FirewallPolicyMove
// with the specified index value.
// Returns the requested FirewallPolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallProxyPolicy API operation for FortiManager creates a new FirewallProxy Policy.
// Returns the index value of the FirewallProxy Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallProxyPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallProxyPolicy API operation for FortiManager updates the specified FirewallProxy Policy.
// Returns the index value of the FirewallProxy Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallProxyPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallProxyPolicy API operation for FortiManager deletes the specified FirewallProxy Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallProxyPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallProxyPolicy API operation for FortiManager gets the FirewallProxy Policy
// with the specified index value.
// Returns the requested FirewallProxy Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallProxyPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallProxyPolicyMove API operation for FortiManager updates the specified FirewallProxy PolicyMove.
// Returns the index value of the FirewallProxy PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallProxyPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy/{proxy-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallProxyPolicyMove API operation for FortiManager gets the FirewallProxy PolicyMove
// with the specified index value.
// Returns the requested FirewallProxy PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall proxy-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallProxyPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/proxy-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallSecurityPolicy API operation for FortiManager creates a new FirewallSecurity Policy.
// Returns the index value of the FirewallSecurity Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallSecurityPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallSecurityPolicy API operation for FortiManager updates the specified FirewallSecurity Policy.
// Returns the index value of the FirewallSecurity Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallSecurityPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallSecurityPolicy API operation for FortiManager deletes the specified FirewallSecurity Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallSecurityPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallSecurityPolicy API operation for FortiManager gets the FirewallSecurity Policy
// with the specified index value.
// Returns the requested FirewallSecurity Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallSecurityPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallSecurityPolicyMove API operation for FortiManager updates the specified FirewallSecurity PolicyMove.
// Returns the index value of the FirewallSecurity PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallSecurityPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy/{security-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallSecurityPolicyMove API operation for FortiManager gets the FirewallSecurity PolicyMove
// with the specified index value.
// Returns the requested FirewallSecurity PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall security-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallSecurityPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesFirewallShapingPolicy API operation for FortiManager creates a new FirewallShaping Policy.
// Returns the index value of the FirewallShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesFirewallShapingPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesFirewallShapingPolicy API operation for FortiManager updates the specified FirewallShaping Policy.
// Returns the index value of the FirewallShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallShapingPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesFirewallShapingPolicy API operation for FortiManager deletes the specified FirewallShaping Policy.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesFirewallShapingPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesFirewallShapingPolicy API operation for FortiManager gets the FirewallShaping Policy
// with the specified index value.
// Returns the requested FirewallShaping Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallShapingPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesFirewallShapingPolicyMove API operation for FortiManager updates the specified FirewallShaping PolicyMove.
// Returns the index value of the FirewallShaping PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesFirewallShapingPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy/{shaping-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesFirewallShapingPolicyMove API operation for FortiManager gets the FirewallShaping PolicyMove
// with the specified index value.
// Returns the requested FirewallShaping PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - firewall shaping-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesFirewallShapingPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/firewall/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesGlobalFooterConsolidatedPolicy API operation for FortiManager creates a new GlobalFooterConsolidatedPolicy.
// Returns the index value of the GlobalFooterConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalFooterConsolidatedPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalFooterConsolidatedPolicy API operation for FortiManager updates the specified GlobalFooterConsolidatedPolicy.
// Returns the index value of the GlobalFooterConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalFooterConsolidatedPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalFooterConsolidatedPolicy API operation for FortiManager deletes the specified GlobalFooterConsolidatedPolicy.
// Returns error for service API and SDK errors.
// See the packages - global footer consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalFooterConsolidatedPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalFooterConsolidatedPolicy API operation for FortiManager gets the GlobalFooterConsolidatedPolicy
// with the specified index value.
// Returns the requested GlobalFooterConsolidatedPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalFooterConsolidatedPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalFooterPolicy API operation for FortiManager creates a new GlobalFooterPolicy.
// Returns the index value of the GlobalFooterPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalFooterPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalFooterPolicy API operation for FortiManager updates the specified GlobalFooterPolicy.
// Returns the index value of the GlobalFooterPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalFooterPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalFooterPolicy API operation for FortiManager deletes the specified GlobalFooterPolicy.
// Returns error for service API and SDK errors.
// See the packages - global footer policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalFooterPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalFooterPolicy API operation for FortiManager gets the GlobalFooterPolicy
// with the specified index value.
// Returns the requested GlobalFooterPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalFooterPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalFooterPolicy6 API operation for FortiManager creates a new GlobalFooterPolicy6.
// Returns the index value of the GlobalFooterPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalFooterPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalFooterPolicy6 API operation for FortiManager updates the specified GlobalFooterPolicy6.
// Returns the index value of the GlobalFooterPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalFooterPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalFooterPolicy6 API operation for FortiManager deletes the specified GlobalFooterPolicy6.
// Returns error for service API and SDK errors.
// See the packages - global footer policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalFooterPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalFooterPolicy6 API operation for FortiManager gets the GlobalFooterPolicy6
// with the specified index value.
// Returns the requested GlobalFooterPolicy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalFooterPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalFooterShapingPolicy API operation for FortiManager creates a new GlobalFooterShaping Policy.
// Returns the index value of the GlobalFooterShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalFooterShapingPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalFooterShapingPolicy API operation for FortiManager updates the specified GlobalFooterShaping Policy.
// Returns the index value of the GlobalFooterShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalFooterShapingPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalFooterShapingPolicy API operation for FortiManager deletes the specified GlobalFooterShaping Policy.
// Returns error for service API and SDK errors.
// See the packages - global footer shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalFooterShapingPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalFooterShapingPolicy API operation for FortiManager gets the GlobalFooterShaping Policy
// with the specified index value.
// Returns the requested GlobalFooterShaping Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global footer shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalFooterShapingPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/footer/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalHeaderConsolidatedPolicy API operation for FortiManager creates a new GlobalHeaderConsolidatedPolicy.
// Returns the index value of the GlobalHeaderConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalHeaderConsolidatedPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalHeaderConsolidatedPolicy API operation for FortiManager updates the specified GlobalHeaderConsolidatedPolicy.
// Returns the index value of the GlobalHeaderConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalHeaderConsolidatedPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalHeaderConsolidatedPolicy API operation for FortiManager deletes the specified GlobalHeaderConsolidatedPolicy.
// Returns error for service API and SDK errors.
// See the packages - global header consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalHeaderConsolidatedPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalHeaderConsolidatedPolicy API operation for FortiManager gets the GlobalHeaderConsolidatedPolicy
// with the specified index value.
// Returns the requested GlobalHeaderConsolidatedPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalHeaderConsolidatedPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalHeaderPolicy API operation for FortiManager creates a new GlobalHeaderPolicy.
// Returns the index value of the GlobalHeaderPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalHeaderPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalHeaderPolicy API operation for FortiManager updates the specified GlobalHeaderPolicy.
// Returns the index value of the GlobalHeaderPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalHeaderPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalHeaderPolicy API operation for FortiManager deletes the specified GlobalHeaderPolicy.
// Returns error for service API and SDK errors.
// See the packages - global header policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalHeaderPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalHeaderPolicy API operation for FortiManager gets the GlobalHeaderPolicy
// with the specified index value.
// Returns the requested GlobalHeaderPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalHeaderPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalHeaderPolicy6 API operation for FortiManager creates a new GlobalHeaderPolicy6.
// Returns the index value of the GlobalHeaderPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalHeaderPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalHeaderPolicy6 API operation for FortiManager updates the specified GlobalHeaderPolicy6.
// Returns the index value of the GlobalHeaderPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalHeaderPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalHeaderPolicy6 API operation for FortiManager deletes the specified GlobalHeaderPolicy6.
// Returns error for service API and SDK errors.
// See the packages - global header policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalHeaderPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalHeaderPolicy6 API operation for FortiManager gets the GlobalHeaderPolicy6
// with the specified index value.
// Returns the requested GlobalHeaderPolicy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalHeaderPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesGlobalHeaderShapingPolicy API operation for FortiManager creates a new GlobalHeaderShaping Policy.
// Returns the index value of the GlobalHeaderShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesGlobalHeaderShapingPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesGlobalHeaderShapingPolicy API operation for FortiManager updates the specified GlobalHeaderShaping Policy.
// Returns the index value of the GlobalHeaderShaping Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesGlobalHeaderShapingPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesGlobalHeaderShapingPolicy API operation for FortiManager deletes the specified GlobalHeaderShaping Policy.
// Returns error for service API and SDK errors.
// See the packages - global header shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesGlobalHeaderShapingPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesGlobalHeaderShapingPolicy API operation for FortiManager gets the GlobalHeaderShaping Policy
// with the specified index value.
// Returns the requested GlobalHeaderShaping Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - global header shaping-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesGlobalHeaderShapingPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/global/header/shaping-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesPblock API operation for FortiManager creates a new Pblock.
// Returns the index value of the Pblock and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPblock(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/pblock/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPblock API operation for FortiManager updates the specified Pblock.
// Returns the index value of the Pblock and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblock(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/pblock/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPblock API operation for FortiManager deletes the specified Pblock.
// Returns error for service API and SDK errors.
// See the packages - pblock chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPblock(mkey string, paradict map[string]string) (err error) {
	path := "/pm/pblock/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPblock API operation for FortiManager gets the Pblock
// with the specified index value.
// Returns the requested Pblock value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblock(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/pblock/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesPblockFirewallConsolidatedPolicy API operation for FortiManager creates a new PblockFirewallConsolidatedPolicy.
// Returns the index value of the PblockFirewallConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPblockFirewallConsolidatedPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPblockFirewallConsolidatedPolicy API operation for FortiManager updates the specified PblockFirewallConsolidatedPolicy.
// Returns the index value of the PblockFirewallConsolidatedPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblockFirewallConsolidatedPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPblockFirewallConsolidatedPolicy API operation for FortiManager deletes the specified PblockFirewallConsolidatedPolicy.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPblockFirewallConsolidatedPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPblockFirewallConsolidatedPolicy API operation for FortiManager gets the PblockFirewallConsolidatedPolicy
// with the specified index value.
// Returns the requested PblockFirewallConsolidatedPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall consolidated policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblockFirewallConsolidatedPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/consolidated/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesPblockFirewallPolicy API operation for FortiManager creates a new PblockFirewallPolicy.
// Returns the index value of the PblockFirewallPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPblockFirewallPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPblockFirewallPolicy API operation for FortiManager updates the specified PblockFirewallPolicy.
// Returns the index value of the PblockFirewallPolicy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblockFirewallPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPblockFirewallPolicy API operation for FortiManager deletes the specified PblockFirewallPolicy.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPblockFirewallPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPblockFirewallPolicy API operation for FortiManager gets the PblockFirewallPolicy
// with the specified index value.
// Returns the requested PblockFirewallPolicy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblockFirewallPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesPblockFirewallPolicy6 API operation for FortiManager creates a new PblockFirewallPolicy6.
// Returns the index value of the PblockFirewallPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPblockFirewallPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPblockFirewallPolicy6 API operation for FortiManager updates the specified PblockFirewallPolicy6.
// Returns the index value of the PblockFirewallPolicy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblockFirewallPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPblockFirewallPolicy6 API operation for FortiManager deletes the specified PblockFirewallPolicy6.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPblockFirewallPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPblockFirewallPolicy6 API operation for FortiManager gets the PblockFirewallPolicy6
// with the specified index value.
// Returns the requested PblockFirewallPolicy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblockFirewallPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesPblockFirewallPolicyMove API operation for FortiManager updates the specified PblockFirewallPolicyMove.
// Returns the index value of the PblockFirewallPolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblockFirewallPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy/{policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesPblockFirewallPolicyMove API operation for FortiManager gets the PblockFirewallPolicyMove
// with the specified index value.
// Returns the requested PblockFirewallPolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblockFirewallPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"policyid"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreatePackagesPblockFirewallSecurityPolicy API operation for FortiManager creates a new PblockFirewallSecurity Policy.
// Returns the index value of the PblockFirewallSecurity Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPblockFirewallSecurityPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPblockFirewallSecurityPolicy API operation for FortiManager updates the specified PblockFirewallSecurity Policy.
// Returns the index value of the PblockFirewallSecurity Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPblockFirewallSecurityPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPblockFirewallSecurityPolicy API operation for FortiManager deletes the specified PblockFirewallSecurity Policy.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPblockFirewallSecurityPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPblockFirewallSecurityPolicy API operation for FortiManager gets the PblockFirewallSecurity Policy
// with the specified index value.
// Returns the requested PblockFirewallSecurity Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pblock firewall security-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPblockFirewallSecurityPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pblock/{pblock}/firewall/security-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesPkg API operation for FortiManager creates a new Pkg.
// Returns the index value of the Pkg and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pkg chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesPkg(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/pkg/[*]/{pkg_folder_path}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesPkg API operation for FortiManager updates the specified Pkg.
// Returns the index value of the Pkg and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pkg chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesPkg(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/pkg/[*]/{pkg_folder_path}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesPkg API operation for FortiManager deletes the specified Pkg.
// Returns error for service API and SDK errors.
// See the packages - pkg chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesPkg(mkey string, paradict map[string]string) (err error) {
	path := "/pm/pkg/[*]/{pkg_folder_path}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesPkg API operation for FortiManager gets the Pkg
// with the specified index value.
// Returns the requested Pkg value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - pkg chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesPkg(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/pkg/[*]/{pkg_folder_path}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreatePackagesUserNacPolicy API operation for FortiManager creates a new UserNac Policy.
// Returns the index value of the UserNac Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreatePackagesUserNacPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdatePackagesUserNacPolicy API operation for FortiManager updates the specified UserNac Policy.
// Returns the index value of the UserNac Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesUserNacPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeletePackagesUserNacPolicy API operation for FortiManager deletes the specified UserNac Policy.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeletePackagesUserNacPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadPackagesUserNacPolicy API operation for FortiManager gets the UserNac Policy
// with the specified index value.
// Returns the requested UserNac Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesUserNacPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdatePackagesUserNacPolicyMove API operation for FortiManager updates the specified UserNac PolicyMove.
// Returns the index value of the UserNac PolicyMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdatePackagesUserNacPolicyMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy/{nac-policy}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadPackagesUserNacPolicyMove API operation for FortiManager gets the UserNac PolicyMove
// with the specified index value.
// Returns the requested UserNac PolicyMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the packages - user nac-policy move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadPackagesUserNacPolicyMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/pkg/{pkg_folder_path}/{pkg}/user/nac-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateSecurityconsoleAbort API operation for FortiManager updates the specified Abort.
// Returns the index value of the Abort and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - abort chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleAbort(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/abort"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleAssignPackage API operation for FortiManager updates the specified AssignPackage.
// Returns the index value of the AssignPackage and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - assign package chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleAssignPackage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/assign/package"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleInstallDevice API operation for FortiManager updates the specified InstallDevice.
// Returns the index value of the InstallDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - install device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleInstallDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/install/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleInstallObjectsV2 API operation for FortiManager updates the specified InstallObjectsV2.
// Returns the index value of the InstallObjectsV2 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - install objects v2 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleInstallObjectsV2(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/install/objects/v2"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleInstallPackage API operation for FortiManager updates the specified InstallPackage.
// Returns the index value of the InstallPackage and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - install package chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleInstallPackage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/install/package"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleInstallPreview API operation for FortiManager updates the specified InstallPreview.
// Returns the index value of the InstallPreview and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - install preview chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleInstallPreview(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/install/preview"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsolePackageCancelInstall API operation for FortiManager updates the specified PackageCancelInstall.
// Returns the index value of the PackageCancelInstall and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - package cancel install chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsolePackageCancelInstall(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/package/cancel/install"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsolePackageClone API operation for FortiManager updates the specified PackageClone.
// Returns the index value of the PackageClone and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - package clone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsolePackageClone(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/package/clone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsolePackageCommit API operation for FortiManager updates the specified PackageCommit.
// Returns the index value of the PackageCommit and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - package commit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsolePackageCommit(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/package/commit"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsolePackageMove API operation for FortiManager updates the specified PackageMove.
// Returns the index value of the PackageMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - package move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsolePackageMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/package/move"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsolePblockClone API operation for FortiManager updates the specified PblockClone.
// Returns the index value of the PblockClone and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - pblock clone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsolePblockClone(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/pblock/clone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleReinstallPackage API operation for FortiManager updates the specified ReinstallPackage.
// Returns the index value of the ReinstallPackage and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - reinstall package chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleReinstallPackage(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/reinstall/package"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleSignCertificateTemplate API operation for FortiManager updates the specified SignCertificateTemplate.
// Returns the index value of the SignCertificateTemplate and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - sign certificate template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleSignCertificateTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/sign/certificate/template"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// UpdateSecurityconsoleTemplateCliPreview API operation for FortiManager updates the specified TemplateCliPreview.
// Returns the index value of the TemplateCliPreview and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the securityconsole - template cli preview chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSecurityconsoleTemplateCliPreview(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/securityconsole/template/cli/preview"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "exec", params, false)
	return
}

// CreateSystemAdminGroup API operation for FortiManager creates a new AdminGroup.
// Returns the index value of the AdminGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminGroup(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminGroup API operation for FortiManager updates the specified AdminGroup.
// Returns the index value of the AdminGroup and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminGroup(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminGroup API operation for FortiManager deletes the specified AdminGroup.
// Returns error for service API and SDK errors.
// See the system - admin group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminGroup(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminGroup API operation for FortiManager gets the AdminGroup
// with the specified index value.
// Returns the requested AdminGroup value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminGroup(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminGroupMember API operation for FortiManager creates a new AdminGroupMember.
// Returns the index value of the AdminGroupMember and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminGroupMember(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group/{group}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminGroupMember API operation for FortiManager updates the specified AdminGroupMember.
// Returns the index value of the AdminGroupMember and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminGroupMember(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group/{group}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminGroupMember API operation for FortiManager deletes the specified AdminGroupMember.
// Returns error for service API and SDK errors.
// See the system - admin group member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminGroupMember(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/group/{group}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminGroupMember API operation for FortiManager gets the AdminGroupMember
// with the specified index value.
// Returns the requested AdminGroupMember value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin group member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminGroupMember(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/group/{group}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminLdap API operation for FortiManager creates a new AdminLdap.
// Returns the index value of the AdminLdap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminLdap(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminLdap API operation for FortiManager updates the specified AdminLdap.
// Returns the index value of the AdminLdap and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminLdap(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminLdap API operation for FortiManager deletes the specified AdminLdap.
// Returns error for service API and SDK errors.
// See the system - admin ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminLdap(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminLdap API operation for FortiManager gets the AdminLdap
// with the specified index value.
// Returns the requested AdminLdap value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin ldap chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminLdap(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/ldap"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminProfile API operation for FortiManager creates a new AdminProfile.
// Returns the index value of the AdminProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminProfile API operation for FortiManager updates the specified AdminProfile.
// Returns the index value of the AdminProfile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminProfile API operation for FortiManager deletes the specified AdminProfile.
// Returns error for service API and SDK errors.
// See the system - admin profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminProfile(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminProfile API operation for FortiManager gets the AdminProfile
// with the specified index value.
// Returns the requested AdminProfile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminProfileDatamaskCustomFields API operation for FortiManager creates a new AdminProfileDatamask Custom Fields.
// Returns the index value of the AdminProfileDatamask Custom Fields and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile datamask-custom-fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminProfileDatamaskCustomFields(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/datamask-custom-fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminProfileDatamaskCustomFields API operation for FortiManager updates the specified AdminProfileDatamask Custom Fields.
// Returns the index value of the AdminProfileDatamask Custom Fields and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile datamask-custom-fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminProfileDatamaskCustomFields(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/datamask-custom-fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminProfileDatamaskCustomFields API operation for FortiManager deletes the specified AdminProfileDatamask Custom Fields.
// Returns error for service API and SDK errors.
// See the system - admin profile datamask-custom-fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminProfileDatamaskCustomFields(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/datamask-custom-fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminProfileDatamaskCustomFields API operation for FortiManager gets the AdminProfileDatamask Custom Fields
// with the specified index value.
// Returns the requested AdminProfileDatamask Custom Fields value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile datamask-custom-fields chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminProfileDatamaskCustomFields(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/datamask-custom-fields"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminProfileWritePasswdProfiles API operation for FortiManager creates a new AdminProfileWrite Passwd Profiles.
// Returns the index value of the AdminProfileWrite Passwd Profiles and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-profiles chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminProfileWritePasswdProfiles(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-profiles"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminProfileWritePasswdProfiles API operation for FortiManager updates the specified AdminProfileWrite Passwd Profiles.
// Returns the index value of the AdminProfileWrite Passwd Profiles and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-profiles chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminProfileWritePasswdProfiles(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-profiles"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminProfileWritePasswdProfiles API operation for FortiManager deletes the specified AdminProfileWrite Passwd Profiles.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-profiles chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminProfileWritePasswdProfiles(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-profiles"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminProfileWritePasswdProfiles API operation for FortiManager gets the AdminProfileWrite Passwd Profiles
// with the specified index value.
// Returns the requested AdminProfileWrite Passwd Profiles value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-profiles chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminProfileWritePasswdProfiles(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-profiles"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminProfileWritePasswdUserList API operation for FortiManager creates a new AdminProfileWrite Passwd User List.
// Returns the index value of the AdminProfileWrite Passwd User List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-user-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminProfileWritePasswdUserList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-user-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminProfileWritePasswdUserList API operation for FortiManager updates the specified AdminProfileWrite Passwd User List.
// Returns the index value of the AdminProfileWrite Passwd User List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-user-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminProfileWritePasswdUserList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-user-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminProfileWritePasswdUserList API operation for FortiManager deletes the specified AdminProfileWrite Passwd User List.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-user-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminProfileWritePasswdUserList(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-user-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminProfileWritePasswdUserList API operation for FortiManager gets the AdminProfileWrite Passwd User List
// with the specified index value.
// Returns the requested AdminProfileWrite Passwd User List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin profile write-passwd-user-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminProfileWritePasswdUserList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/profile/{profile}/write-passwd-user-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminRadius API operation for FortiManager creates a new AdminRadius.
// Returns the index value of the AdminRadius and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminRadius(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminRadius API operation for FortiManager updates the specified AdminRadius.
// Returns the index value of the AdminRadius and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminRadius(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminRadius API operation for FortiManager deletes the specified AdminRadius.
// Returns error for service API and SDK errors.
// See the system - admin radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminRadius(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminRadius API operation for FortiManager gets the AdminRadius
// with the specified index value.
// Returns the requested AdminRadius value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin radius chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminRadius(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/radius"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAdminSetting API operation for FortiManager updates the specified AdminSetting.
// Returns the index value of the AdminSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminSetting API operation for FortiManager deletes the specified AdminSetting.
// Returns error for service API and SDK errors.
// See the system - admin setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - admin setting
	return
}

// ReadSystemAdminSetting API operation for FortiManager gets the AdminSetting
// with the specified index value.
// Returns the requested AdminSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminTacacs API operation for FortiManager creates a new AdminTacacs.
// Returns the index value of the AdminTacacs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin tacacs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminTacacs(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/tacacs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminTacacs API operation for FortiManager updates the specified AdminTacacs.
// Returns the index value of the AdminTacacs and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin tacacs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminTacacs(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/tacacs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminTacacs API operation for FortiManager deletes the specified AdminTacacs.
// Returns error for service API and SDK errors.
// See the system - admin tacacs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminTacacs(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/tacacs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminTacacs API operation for FortiManager gets the AdminTacacs
// with the specified index value.
// Returns the requested AdminTacacs value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin tacacs chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminTacacs(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/tacacs"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminUser API operation for FortiManager creates a new AdminUser.
// Returns the index value of the AdminUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminUser(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminUser API operation for FortiManager updates the specified AdminUser.
// Returns the index value of the AdminUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminUser(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminUser API operation for FortiManager deletes the specified AdminUser.
// Returns error for service API and SDK errors.
// See the system - admin user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminUser(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminUser API operation for FortiManager gets the AdminUser
// with the specified index value.
// Returns the requested AdminUser value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminUser(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminUserAdom API operation for FortiManager creates a new AdminUserAdom.
// Returns the index value of the AdminUserAdom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminUserAdom(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminUserAdom API operation for FortiManager updates the specified AdminUserAdom.
// Returns the index value of the AdminUserAdom and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminUserAdom(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminUserAdom API operation for FortiManager deletes the specified AdminUserAdom.
// Returns error for service API and SDK errors.
// See the system - admin user adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminUserAdom(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/user/{user}/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminUserAdom API operation for FortiManager gets the AdminUserAdom
// with the specified index value.
// Returns the requested AdminUserAdom value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user adom chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminUserAdom(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/adom"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminUserIpsFilter API operation for FortiManager creates a new AdminUserIps Filter.
// Returns the index value of the AdminUserIps Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user ips-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminUserIpsFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/ips-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminUserIpsFilter API operation for FortiManager updates the specified AdminUserIps Filter.
// Returns the index value of the AdminUserIps Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user ips-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminUserIpsFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/ips-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminUserIpsFilter API operation for FortiManager deletes the specified AdminUserIps Filter.
// Returns error for service API and SDK errors.
// See the system - admin user ips-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminUserIpsFilter(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/user/{user}/ips-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminUserIpsFilter API operation for FortiManager gets the AdminUserIps Filter
// with the specified index value.
// Returns the requested AdminUserIps Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user ips-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminUserIpsFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/ips-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAdminUserPolicyBlock API operation for FortiManager creates a new AdminUserPolicy Block.
// Returns the index value of the AdminUserPolicy Block and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user policy-block chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAdminUserPolicyBlock(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/policy-block"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAdminUserPolicyBlock API operation for FortiManager updates the specified AdminUserPolicy Block.
// Returns the index value of the AdminUserPolicy Block and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user policy-block chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAdminUserPolicyBlock(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/policy-block"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAdminUserPolicyBlock API operation for FortiManager deletes the specified AdminUserPolicy Block.
// Returns error for service API and SDK errors.
// See the system - admin user policy-block chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAdminUserPolicyBlock(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/admin/user/{user}/policy-block"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAdminUserPolicyBlock API operation for FortiManager gets the AdminUserPolicy Block
// with the specified index value.
// Returns the requested AdminUserPolicy Block value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - admin user policy-block chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAdminUserPolicyBlock(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/admin/user/{user}/policy-block"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAlertConsole API operation for FortiManager updates the specified Alert Console.
// Returns the index value of the Alert Console and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alert-console chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAlertConsole(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/alert-console"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAlertConsole API operation for FortiManager deletes the specified Alert Console.
// Returns error for service API and SDK errors.
// See the system - alert-console chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAlertConsole(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - alert-console
	return
}

// ReadSystemAlertConsole API operation for FortiManager gets the Alert Console
// with the specified index value.
// Returns the requested Alert Console value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alert-console chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAlertConsole(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/alert-console"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemAlertEvent API operation for FortiManager creates a new Alert Event.
// Returns the index value of the Alert Event and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alert-event chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemAlertEvent(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/alert-event"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemAlertEvent API operation for FortiManager updates the specified Alert Event.
// Returns the index value of the Alert Event and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alert-event chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAlertEvent(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/alert-event"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAlertEvent API operation for FortiManager deletes the specified Alert Event.
// Returns error for service API and SDK errors.
// See the system - alert-event chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAlertEvent(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/alert-event"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemAlertEvent API operation for FortiManager gets the Alert Event
// with the specified index value.
// Returns the requested Alert Event value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alert-event chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAlertEvent(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/alert-event"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAlertemail API operation for FortiManager updates the specified Alertemail.
// Returns the index value of the Alertemail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alertemail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAlertemail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/alertemail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAlertemail API operation for FortiManager deletes the specified Alertemail.
// Returns error for service API and SDK errors.
// See the system - alertemail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAlertemail(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - alertemail
	return
}

// ReadSystemAlertemail API operation for FortiManager gets the Alertemail
// with the specified index value.
// Returns the requested Alertemail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - alertemail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAlertemail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/alertemail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAutoDelete API operation for FortiManager updates the specified Auto Delete.
// Returns the index value of the Auto Delete and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAutoDelete(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAutoDelete API operation for FortiManager deletes the specified Auto Delete.
// Returns error for service API and SDK errors.
// See the system - auto-delete chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAutoDelete(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - auto-delete
	return
}

// ReadSystemAutoDelete API operation for FortiManager gets the Auto Delete
// with the specified index value.
// Returns the requested Auto Delete value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAutoDelete(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAutoDeleteDlpFilesAutoDeletion API operation for FortiManager updates the specified Auto DeleteDlp Files Auto Deletion.
// Returns the index value of the Auto DeleteDlp Files Auto Deletion and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete dlp-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAutoDeleteDlpFilesAutoDeletion(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/dlp-files-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAutoDeleteDlpFilesAutoDeletion API operation for FortiManager deletes the specified Auto DeleteDlp Files Auto Deletion.
// Returns error for service API and SDK errors.
// See the system - auto-delete dlp-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAutoDeleteDlpFilesAutoDeletion(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - auto-delete dlp-files-auto-deletion
	return
}

// ReadSystemAutoDeleteDlpFilesAutoDeletion API operation for FortiManager gets the Auto DeleteDlp Files Auto Deletion
// with the specified index value.
// Returns the requested Auto DeleteDlp Files Auto Deletion value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete dlp-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAutoDeleteDlpFilesAutoDeletion(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/dlp-files-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAutoDeleteLogAutoDeletion API operation for FortiManager updates the specified Auto DeleteLog Auto Deletion.
// Returns the index value of the Auto DeleteLog Auto Deletion and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete log-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAutoDeleteLogAutoDeletion(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/log-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAutoDeleteLogAutoDeletion API operation for FortiManager deletes the specified Auto DeleteLog Auto Deletion.
// Returns error for service API and SDK errors.
// See the system - auto-delete log-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAutoDeleteLogAutoDeletion(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - auto-delete log-auto-deletion
	return
}

// ReadSystemAutoDeleteLogAutoDeletion API operation for FortiManager gets the Auto DeleteLog Auto Deletion
// with the specified index value.
// Returns the requested Auto DeleteLog Auto Deletion value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete log-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAutoDeleteLogAutoDeletion(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/log-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAutoDeleteQuarantineFilesAutoDeletion API operation for FortiManager updates the specified Auto DeleteQuarantine Files Auto Deletion.
// Returns the index value of the Auto DeleteQuarantine Files Auto Deletion and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete quarantine-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAutoDeleteQuarantineFilesAutoDeletion(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/quarantine-files-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAutoDeleteQuarantineFilesAutoDeletion API operation for FortiManager deletes the specified Auto DeleteQuarantine Files Auto Deletion.
// Returns error for service API and SDK errors.
// See the system - auto-delete quarantine-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAutoDeleteQuarantineFilesAutoDeletion(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - auto-delete quarantine-files-auto-deletion
	return
}

// ReadSystemAutoDeleteQuarantineFilesAutoDeletion API operation for FortiManager gets the Auto DeleteQuarantine Files Auto Deletion
// with the specified index value.
// Returns the requested Auto DeleteQuarantine Files Auto Deletion value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete quarantine-files-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAutoDeleteQuarantineFilesAutoDeletion(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/quarantine-files-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemAutoDeleteReportAutoDeletion API operation for FortiManager updates the specified Auto DeleteReport Auto Deletion.
// Returns the index value of the Auto DeleteReport Auto Deletion and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete report-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemAutoDeleteReportAutoDeletion(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/report-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemAutoDeleteReportAutoDeletion API operation for FortiManager deletes the specified Auto DeleteReport Auto Deletion.
// Returns error for service API and SDK errors.
// See the system - auto-delete report-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemAutoDeleteReportAutoDeletion(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - auto-delete report-auto-deletion
	return
}

// ReadSystemAutoDeleteReportAutoDeletion API operation for FortiManager gets the Auto DeleteReport Auto Deletion
// with the specified index value.
// Returns the requested Auto DeleteReport Auto Deletion value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - auto-delete report-auto-deletion chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemAutoDeleteReportAutoDeletion(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/auto-delete/report-auto-deletion"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemBackupAllSettings API operation for FortiManager updates the specified BackupAll Settings.
// Returns the index value of the BackupAll Settings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - backup all-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemBackupAllSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/backup/all-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemBackupAllSettings API operation for FortiManager deletes the specified BackupAll Settings.
// Returns error for service API and SDK errors.
// See the system - backup all-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemBackupAllSettings(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - backup all-settings
	return
}

// ReadSystemBackupAllSettings API operation for FortiManager gets the BackupAll Settings
// with the specified index value.
// Returns the requested BackupAll Settings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - backup all-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemBackupAllSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/backup/all-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCertificateCa API operation for FortiManager creates a new CertificateCa.
// Returns the index value of the CertificateCa and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCertificateCa(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCertificateCa API operation for FortiManager updates the specified CertificateCa.
// Returns the index value of the CertificateCa and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateCa(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateCa API operation for FortiManager deletes the specified CertificateCa.
// Returns error for service API and SDK errors.
// See the system - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateCa(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCertificateCa API operation for FortiManager gets the CertificateCa
// with the specified index value.
// Returns the requested CertificateCa value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ca chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateCa(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ca"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCertificateCrl API operation for FortiManager creates a new CertificateCrl.
// Returns the index value of the CertificateCrl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate crl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCertificateCrl(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/crl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCertificateCrl API operation for FortiManager updates the specified CertificateCrl.
// Returns the index value of the CertificateCrl and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate crl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateCrl(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/crl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateCrl API operation for FortiManager deletes the specified CertificateCrl.
// Returns error for service API and SDK errors.
// See the system - certificate crl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateCrl(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/certificate/crl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCertificateCrl API operation for FortiManager gets the CertificateCrl
// with the specified index value.
// Returns the requested CertificateCrl value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate crl chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateCrl(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/crl"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCertificateLocal API operation for FortiManager creates a new CertificateLocal.
// Returns the index value of the CertificateLocal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCertificateLocal(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCertificateLocal API operation for FortiManager updates the specified CertificateLocal.
// Returns the index value of the CertificateLocal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateLocal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateLocal API operation for FortiManager deletes the specified CertificateLocal.
// Returns error for service API and SDK errors.
// See the system - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateLocal(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCertificateLocal API operation for FortiManager gets the CertificateLocal
// with the specified index value.
// Returns the requested CertificateLocal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateLocal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemCertificateOftp API operation for FortiManager updates the specified CertificateOftp.
// Returns the index value of the CertificateOftp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate oftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateOftp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/oftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateOftp API operation for FortiManager deletes the specified CertificateOftp.
// Returns error for service API and SDK errors.
// See the system - certificate oftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateOftp(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - certificate oftp
	return
}

// ReadSystemCertificateOftp API operation for FortiManager gets the CertificateOftp
// with the specified index value.
// Returns the requested CertificateOftp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate oftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateOftp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/oftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCertificateRemote API operation for FortiManager creates a new CertificateRemote.
// Returns the index value of the CertificateRemote and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCertificateRemote(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCertificateRemote API operation for FortiManager updates the specified CertificateRemote.
// Returns the index value of the CertificateRemote and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateRemote(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateRemote API operation for FortiManager deletes the specified CertificateRemote.
// Returns error for service API and SDK errors.
// See the system - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateRemote(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCertificateRemote API operation for FortiManager gets the CertificateRemote
// with the specified index value.
// Returns the requested CertificateRemote value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate remote chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateRemote(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/remote"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCertificateSsh API operation for FortiManager creates a new CertificateSsh.
// Returns the index value of the CertificateSsh and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCertificateSsh(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCertificateSsh API operation for FortiManager updates the specified CertificateSsh.
// Returns the index value of the CertificateSsh and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCertificateSsh(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCertificateSsh API operation for FortiManager deletes the specified CertificateSsh.
// Returns error for service API and SDK errors.
// See the system - certificate ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCertificateSsh(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/certificate/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCertificateSsh API operation for FortiManager gets the CertificateSsh
// with the specified index value.
// Returns the requested CertificateSsh value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - certificate ssh chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCertificateSsh(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/certificate/ssh"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemConnector API operation for FortiManager updates the specified Connector.
// Returns the index value of the Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemConnector(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemConnector API operation for FortiManager deletes the specified Connector.
// Returns error for service API and SDK errors.
// See the system - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemConnector(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - connector
	return
}

// ReadSystemConnector API operation for FortiManager gets the Connector
// with the specified index value.
// Returns the requested Connector value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemConnector(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemCsf API operation for FortiManager updates the specified Csf.
// Returns the index value of the Csf and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCsf(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCsf API operation for FortiManager deletes the specified Csf.
// Returns error for service API and SDK errors.
// See the system - csf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCsf(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - csf
	return
}

// ReadSystemCsf API operation for FortiManager gets the Csf
// with the specified index value.
// Returns the requested Csf value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCsf(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCsfFabricConnector API operation for FortiManager creates a new CsfFabric Connector.
// Returns the index value of the CsfFabric Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf fabric-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCsfFabricConnector(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/fabric-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCsfFabricConnector API operation for FortiManager updates the specified CsfFabric Connector.
// Returns the index value of the CsfFabric Connector and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf fabric-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCsfFabricConnector(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/fabric-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCsfFabricConnector API operation for FortiManager deletes the specified CsfFabric Connector.
// Returns error for service API and SDK errors.
// See the system - csf fabric-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCsfFabricConnector(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/csf/fabric-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCsfFabricConnector API operation for FortiManager gets the CsfFabric Connector
// with the specified index value.
// Returns the requested CsfFabric Connector value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf fabric-connector chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCsfFabricConnector(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/fabric-connector"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemCsfTrustedList API operation for FortiManager creates a new CsfTrusted List.
// Returns the index value of the CsfTrusted List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemCsfTrustedList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemCsfTrustedList API operation for FortiManager updates the specified CsfTrusted List.
// Returns the index value of the CsfTrusted List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemCsfTrustedList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemCsfTrustedList API operation for FortiManager deletes the specified CsfTrusted List.
// Returns error for service API and SDK errors.
// See the system - csf trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemCsfTrustedList(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/csf/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemCsfTrustedList API operation for FortiManager gets the CsfTrusted List
// with the specified index value.
// Returns the requested CsfTrusted List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - csf trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemCsfTrustedList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/csf/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemDm API operation for FortiManager updates the specified Dm.
// Returns the index value of the Dm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - dm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemDm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/dm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemDm API operation for FortiManager deletes the specified Dm.
// Returns error for service API and SDK errors.
// See the system - dm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemDm(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - dm
	return
}

// ReadSystemDm API operation for FortiManager gets the Dm
// with the specified index value.
// Returns the requested Dm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - dm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemDm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/dm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemDns API operation for FortiManager updates the specified Dns.
// Returns the index value of the Dns and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemDns(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemDns API operation for FortiManager deletes the specified Dns.
// Returns error for service API and SDK errors.
// See the system - dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemDns(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - dns
	return
}

// ReadSystemDns API operation for FortiManager gets the Dns
// with the specified index value.
// Returns the requested Dns value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - dns chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemDns(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/dns"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemDocker API operation for FortiManager updates the specified Docker.
// Returns the index value of the Docker and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - docker chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemDocker(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/docker"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemDocker API operation for FortiManager deletes the specified Docker.
// Returns error for service API and SDK errors.
// See the system - docker chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemDocker(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - docker
	return
}

// ReadSystemDocker API operation for FortiManager gets the Docker
// with the specified index value.
// Returns the requested Docker value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - docker chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemDocker(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/docker"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemFips API operation for FortiManager updates the specified Fips.
// Returns the index value of the Fips and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemFips(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemFips API operation for FortiManager deletes the specified Fips.
// Returns error for service API and SDK errors.
// See the system - fips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemFips(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - fips
	return
}

// ReadSystemFips API operation for FortiManager gets the Fips
// with the specified index value.
// Returns the requested Fips value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemFips(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/fips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemFmgCluster API operation for FortiManager updates the specified Fmg Cluster.
// Returns the index value of the Fmg Cluster and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemFmgCluster(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fmg-cluster"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemFmgCluster API operation for FortiManager deletes the specified Fmg Cluster.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemFmgCluster(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - fmg-cluster
	return
}

// ReadSystemFmgCluster API operation for FortiManager gets the Fmg Cluster
// with the specified index value.
// Returns the requested Fmg Cluster value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemFmgCluster(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/fmg-cluster"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemFmgClusterPeer API operation for FortiManager creates a new Fmg ClusterPeer.
// Returns the index value of the Fmg ClusterPeer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemFmgClusterPeer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fmg-cluster/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemFmgClusterPeer API operation for FortiManager updates the specified Fmg ClusterPeer.
// Returns the index value of the Fmg ClusterPeer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemFmgClusterPeer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fmg-cluster/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemFmgClusterPeer API operation for FortiManager deletes the specified Fmg ClusterPeer.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemFmgClusterPeer(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/fmg-cluster/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemFmgClusterPeer API operation for FortiManager gets the Fmg ClusterPeer
// with the specified index value.
// Returns the requested Fmg ClusterPeer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fmg-cluster peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemFmgClusterPeer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/fmg-cluster/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemFortiviewAutoCache API operation for FortiManager updates the specified FortiviewAuto Cache.
// Returns the index value of the FortiviewAuto Cache and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fortiview auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemFortiviewAutoCache(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fortiview/auto-cache"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemFortiviewAutoCache API operation for FortiManager deletes the specified FortiviewAuto Cache.
// Returns error for service API and SDK errors.
// See the system - fortiview auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemFortiviewAutoCache(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - fortiview auto-cache
	return
}

// ReadSystemFortiviewAutoCache API operation for FortiManager gets the FortiviewAuto Cache
// with the specified index value.
// Returns the requested FortiviewAuto Cache value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fortiview auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemFortiviewAutoCache(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/fortiview/auto-cache"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemFortiviewSetting API operation for FortiManager updates the specified FortiviewSetting.
// Returns the index value of the FortiviewSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fortiview setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemFortiviewSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/fortiview/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemFortiviewSetting API operation for FortiManager deletes the specified FortiviewSetting.
// Returns error for service API and SDK errors.
// See the system - fortiview setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemFortiviewSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - fortiview setting
	return
}

// ReadSystemFortiviewSetting API operation for FortiManager gets the FortiviewSetting
// with the specified index value.
// Returns the requested FortiviewSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - fortiview setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemFortiviewSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/fortiview/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemGlobal API operation for FortiManager updates the specified Global.
// Returns the index value of the Global and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemGlobal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/global"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemGlobal API operation for FortiManager deletes the specified Global.
// Returns error for service API and SDK errors.
// See the system - global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemGlobal(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - global
	return
}

// ReadSystemGlobal API operation for FortiManager gets the Global
// with the specified index value.
// Returns the requested Global value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemGlobal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/global"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemGlobalSslCipherSuites API operation for FortiManager creates a new GlobalSsl Cipher Suites.
// Returns the index value of the GlobalSsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - global ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemGlobalSslCipherSuites(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/global/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemGlobalSslCipherSuites API operation for FortiManager updates the specified GlobalSsl Cipher Suites.
// Returns the index value of the GlobalSsl Cipher Suites and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - global ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemGlobalSslCipherSuites(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/global/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemGlobalSslCipherSuites API operation for FortiManager deletes the specified GlobalSsl Cipher Suites.
// Returns error for service API and SDK errors.
// See the system - global ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemGlobalSslCipherSuites(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/global/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemGlobalSslCipherSuites API operation for FortiManager gets the GlobalSsl Cipher Suites
// with the specified index value.
// Returns the requested GlobalSsl Cipher Suites value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - global ssl-cipher-suites chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemGlobalSslCipherSuites(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/global/ssl-cipher-suites"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemGuiact API operation for FortiManager updates the specified Guiact.
// Returns the index value of the Guiact and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - guiact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemGuiact(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/guiact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemGuiact API operation for FortiManager deletes the specified Guiact.
// Returns error for service API and SDK errors.
// See the system - guiact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemGuiact(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - guiact
	return
}

// ReadSystemGuiact API operation for FortiManager gets the Guiact
// with the specified index value.
// Returns the requested Guiact value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - guiact chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemGuiact(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/guiact"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemHa API operation for FortiManager updates the specified Ha.
// Returns the index value of the Ha and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemHa(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemHa API operation for FortiManager deletes the specified Ha.
// Returns error for service API and SDK errors.
// See the system - ha chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemHa(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - ha
	return
}

// ReadSystemHa API operation for FortiManager gets the Ha
// with the specified index value.
// Returns the requested Ha value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemHa(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemHaScheduledCheck API operation for FortiManager updates the specified Ha Scheduled Check.
// Returns the index value of the Ha Scheduled Check and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha-scheduled-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemHaScheduledCheck(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha-scheduled-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemHaScheduledCheck API operation for FortiManager deletes the specified Ha Scheduled Check.
// Returns error for service API and SDK errors.
// See the system - ha-scheduled-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemHaScheduledCheck(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - ha-scheduled-check
	return
}

// ReadSystemHaScheduledCheck API operation for FortiManager gets the Ha Scheduled Check
// with the specified index value.
// Returns the requested Ha Scheduled Check value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha-scheduled-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemHaScheduledCheck(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha-scheduled-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemHaMonitoredIps API operation for FortiManager creates a new HaMonitored Ips.
// Returns the index value of the HaMonitored Ips and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha monitored-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemHaMonitoredIps(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/monitored-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemHaMonitoredIps API operation for FortiManager updates the specified HaMonitored Ips.
// Returns the index value of the HaMonitored Ips and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha monitored-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemHaMonitoredIps(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/monitored-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemHaMonitoredIps API operation for FortiManager deletes the specified HaMonitored Ips.
// Returns error for service API and SDK errors.
// See the system - ha monitored-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemHaMonitoredIps(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/ha/monitored-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemHaMonitoredIps API operation for FortiManager gets the HaMonitored Ips
// with the specified index value.
// Returns the requested HaMonitored Ips value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha monitored-ips chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemHaMonitoredIps(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/monitored-ips"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemHaPeer API operation for FortiManager creates a new HaPeer.
// Returns the index value of the HaPeer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemHaPeer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemHaPeer API operation for FortiManager updates the specified HaPeer.
// Returns the index value of the HaPeer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemHaPeer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemHaPeer API operation for FortiManager deletes the specified HaPeer.
// Returns error for service API and SDK errors.
// See the system - ha peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemHaPeer(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/ha/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemHaPeer API operation for FortiManager gets the HaPeer
// with the specified index value.
// Returns the requested HaPeer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ha peer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemHaPeer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ha/peer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemInterface API operation for FortiManager creates a new Interface.
// Returns the index value of the Interface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemInterface(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemInterface API operation for FortiManager updates the specified Interface.
// Returns the index value of the Interface and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemInterface(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemInterface API operation for FortiManager deletes the specified Interface.
// Returns error for service API and SDK errors.
// See the system - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemInterface(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemInterface API operation for FortiManager gets the Interface
// with the specified index value.
// Returns the requested Interface value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemInterface(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemInterfaceIpv6 API operation for FortiManager updates the specified InterfaceIpv6.
// Returns the index value of the InterfaceIpv6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemInterfaceIpv6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface/{interface}/ipv6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemInterfaceIpv6 API operation for FortiManager deletes the specified InterfaceIpv6.
// Returns error for service API and SDK errors.
// See the system - interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemInterfaceIpv6(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - interface ipv6
	return
}

// ReadSystemInterfaceIpv6 API operation for FortiManager gets the InterfaceIpv6
// with the specified index value.
// Returns the requested InterfaceIpv6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface ipv6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemInterfaceIpv6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface/{interface}/ipv6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemInterfaceMember API operation for FortiManager creates a new InterfaceMember.
// Returns the index value of the InterfaceMember and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemInterfaceMember(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface/{interface}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemInterfaceMember API operation for FortiManager updates the specified InterfaceMember.
// Returns the index value of the InterfaceMember and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemInterfaceMember(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface/{interface}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemInterfaceMember API operation for FortiManager deletes the specified InterfaceMember.
// Returns error for service API and SDK errors.
// See the system - interface member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemInterfaceMember(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/interface/{interface}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemInterfaceMember API operation for FortiManager gets the InterfaceMember
// with the specified index value.
// Returns the requested InterfaceMember value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - interface member chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemInterfaceMember(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/interface/{interface}/member"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLocalInPolicy API operation for FortiManager creates a new Local In Policy.
// Returns the index value of the Local In Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLocalInPolicy(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLocalInPolicy API operation for FortiManager updates the specified Local In Policy.
// Returns the index value of the Local In Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocalInPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocalInPolicy API operation for FortiManager deletes the specified Local In Policy.
// Returns error for service API and SDK errors.
// See the system - local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocalInPolicy(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLocalInPolicy API operation for FortiManager gets the Local In Policy
// with the specified index value.
// Returns the requested Local In Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocalInPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLocalInPolicy6 API operation for FortiManager creates a new Local In Policy6.
// Returns the index value of the Local In Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLocalInPolicy6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLocalInPolicy6 API operation for FortiManager updates the specified Local In Policy6.
// Returns the index value of the Local In Policy6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocalInPolicy6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocalInPolicy6 API operation for FortiManager deletes the specified Local In Policy6.
// Returns error for service API and SDK errors.
// See the system - local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocalInPolicy6(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLocalInPolicy6 API operation for FortiManager gets the Local In Policy6
// with the specified index value.
// Returns the requested Local In Policy6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - local-in-policy6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocalInPolicy6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/local-in-policy6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogDiskFilter API operation for FortiManager updates the specified LocallogDiskFilter.
// Returns the index value of the LocallogDiskFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog disk filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogDiskFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/disk/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogDiskFilter API operation for FortiManager deletes the specified LocallogDiskFilter.
// Returns error for service API and SDK errors.
// See the system - locallog disk filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogDiskFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog disk filter
	return
}

// ReadSystemLocallogDiskFilter API operation for FortiManager gets the LocallogDiskFilter
// with the specified index value.
// Returns the requested LocallogDiskFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog disk filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogDiskFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/disk/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogDiskSetting API operation for FortiManager updates the specified LocallogDiskSetting.
// Returns the index value of the LocallogDiskSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog disk setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogDiskSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/disk/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogDiskSetting API operation for FortiManager deletes the specified LocallogDiskSetting.
// Returns error for service API and SDK errors.
// See the system - locallog disk setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogDiskSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog disk setting
	return
}

// ReadSystemLocallogDiskSetting API operation for FortiManager gets the LocallogDiskSetting
// with the specified index value.
// Returns the requested LocallogDiskSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog disk setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogDiskSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/disk/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzer2Filter API operation for FortiManager updates the specified LocallogFortianalyzer2Filter.
// Returns the index value of the LocallogFortianalyzer2Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzer2Filter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer2/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzer2Filter API operation for FortiManager deletes the specified LocallogFortianalyzer2Filter.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzer2Filter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer2 filter
	return
}

// ReadSystemLocallogFortianalyzer2Filter API operation for FortiManager gets the LocallogFortianalyzer2Filter
// with the specified index value.
// Returns the requested LocallogFortianalyzer2Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzer2Filter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer2/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzer2Setting API operation for FortiManager updates the specified LocallogFortianalyzer2Setting.
// Returns the index value of the LocallogFortianalyzer2Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzer2Setting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer2/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzer2Setting API operation for FortiManager deletes the specified LocallogFortianalyzer2Setting.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzer2Setting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer2 setting
	return
}

// ReadSystemLocallogFortianalyzer2Setting API operation for FortiManager gets the LocallogFortianalyzer2Setting
// with the specified index value.
// Returns the requested LocallogFortianalyzer2Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzer2Setting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer2/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzer3Filter API operation for FortiManager updates the specified LocallogFortianalyzer3Filter.
// Returns the index value of the LocallogFortianalyzer3Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzer3Filter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer3/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzer3Filter API operation for FortiManager deletes the specified LocallogFortianalyzer3Filter.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzer3Filter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer3 filter
	return
}

// ReadSystemLocallogFortianalyzer3Filter API operation for FortiManager gets the LocallogFortianalyzer3Filter
// with the specified index value.
// Returns the requested LocallogFortianalyzer3Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzer3Filter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer3/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzer3Setting API operation for FortiManager updates the specified LocallogFortianalyzer3Setting.
// Returns the index value of the LocallogFortianalyzer3Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzer3Setting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer3/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzer3Setting API operation for FortiManager deletes the specified LocallogFortianalyzer3Setting.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzer3Setting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer3 setting
	return
}

// ReadSystemLocallogFortianalyzer3Setting API operation for FortiManager gets the LocallogFortianalyzer3Setting
// with the specified index value.
// Returns the requested LocallogFortianalyzer3Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzer3Setting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer3/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzerFilter API operation for FortiManager updates the specified LocallogFortianalyzerFilter.
// Returns the index value of the LocallogFortianalyzerFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzerFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzerFilter API operation for FortiManager deletes the specified LocallogFortianalyzerFilter.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzerFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer filter
	return
}

// ReadSystemLocallogFortianalyzerFilter API operation for FortiManager gets the LocallogFortianalyzerFilter
// with the specified index value.
// Returns the requested LocallogFortianalyzerFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzerFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogFortianalyzerSetting API operation for FortiManager updates the specified LocallogFortianalyzerSetting.
// Returns the index value of the LocallogFortianalyzerSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogFortianalyzerSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogFortianalyzerSetting API operation for FortiManager deletes the specified LocallogFortianalyzerSetting.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogFortianalyzerSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog fortianalyzer setting
	return
}

// ReadSystemLocallogFortianalyzerSetting API operation for FortiManager gets the LocallogFortianalyzerSetting
// with the specified index value.
// Returns the requested LocallogFortianalyzerSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogFortianalyzerSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/fortianalyzer/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogMemoryFilter API operation for FortiManager updates the specified LocallogMemoryFilter.
// Returns the index value of the LocallogMemoryFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog memory filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogMemoryFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/memory/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogMemoryFilter API operation for FortiManager deletes the specified LocallogMemoryFilter.
// Returns error for service API and SDK errors.
// See the system - locallog memory filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogMemoryFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog memory filter
	return
}

// ReadSystemLocallogMemoryFilter API operation for FortiManager gets the LocallogMemoryFilter
// with the specified index value.
// Returns the requested LocallogMemoryFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog memory filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogMemoryFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/memory/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogMemorySetting API operation for FortiManager updates the specified LocallogMemorySetting.
// Returns the index value of the LocallogMemorySetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog memory setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogMemorySetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/memory/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogMemorySetting API operation for FortiManager deletes the specified LocallogMemorySetting.
// Returns error for service API and SDK errors.
// See the system - locallog memory setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogMemorySetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog memory setting
	return
}

// ReadSystemLocallogMemorySetting API operation for FortiManager gets the LocallogMemorySetting
// with the specified index value.
// Returns the requested LocallogMemorySetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog memory setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogMemorySetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/memory/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSetting API operation for FortiManager updates the specified LocallogSetting.
// Returns the index value of the LocallogSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSetting API operation for FortiManager deletes the specified LocallogSetting.
// Returns error for service API and SDK errors.
// See the system - locallog setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog setting
	return
}

// ReadSystemLocallogSetting API operation for FortiManager gets the LocallogSetting
// with the specified index value.
// Returns the requested LocallogSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogd2Filter API operation for FortiManager updates the specified LocallogSyslogd2Filter.
// Returns the index value of the LocallogSyslogd2Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogd2Filter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd2/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogd2Filter API operation for FortiManager deletes the specified LocallogSyslogd2Filter.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogd2Filter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd2 filter
	return
}

// ReadSystemLocallogSyslogd2Filter API operation for FortiManager gets the LocallogSyslogd2Filter
// with the specified index value.
// Returns the requested LocallogSyslogd2Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogd2Filter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd2/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogd2Setting API operation for FortiManager updates the specified LocallogSyslogd2Setting.
// Returns the index value of the LocallogSyslogd2Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogd2Setting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd2/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogd2Setting API operation for FortiManager deletes the specified LocallogSyslogd2Setting.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogd2Setting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd2 setting
	return
}

// ReadSystemLocallogSyslogd2Setting API operation for FortiManager gets the LocallogSyslogd2Setting
// with the specified index value.
// Returns the requested LocallogSyslogd2Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd2 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogd2Setting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd2/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogd3Filter API operation for FortiManager updates the specified LocallogSyslogd3Filter.
// Returns the index value of the LocallogSyslogd3Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogd3Filter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd3/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogd3Filter API operation for FortiManager deletes the specified LocallogSyslogd3Filter.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogd3Filter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd3 filter
	return
}

// ReadSystemLocallogSyslogd3Filter API operation for FortiManager gets the LocallogSyslogd3Filter
// with the specified index value.
// Returns the requested LocallogSyslogd3Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogd3Filter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd3/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogd3Setting API operation for FortiManager updates the specified LocallogSyslogd3Setting.
// Returns the index value of the LocallogSyslogd3Setting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogd3Setting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd3/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogd3Setting API operation for FortiManager deletes the specified LocallogSyslogd3Setting.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogd3Setting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd3 setting
	return
}

// ReadSystemLocallogSyslogd3Setting API operation for FortiManager gets the LocallogSyslogd3Setting
// with the specified index value.
// Returns the requested LocallogSyslogd3Setting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd3 setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogd3Setting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd3/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogdFilter API operation for FortiManager updates the specified LocallogSyslogdFilter.
// Returns the index value of the LocallogSyslogdFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogdFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogdFilter API operation for FortiManager deletes the specified LocallogSyslogdFilter.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogdFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd filter
	return
}

// ReadSystemLocallogSyslogdFilter API operation for FortiManager gets the LocallogSyslogdFilter
// with the specified index value.
// Returns the requested LocallogSyslogdFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogdFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLocallogSyslogdSetting API operation for FortiManager updates the specified LocallogSyslogdSetting.
// Returns the index value of the LocallogSyslogdSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLocallogSyslogdSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLocallogSyslogdSetting API operation for FortiManager deletes the specified LocallogSyslogdSetting.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLocallogSyslogdSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - locallog syslogd setting
	return
}

// ReadSystemLocallogSyslogdSetting API operation for FortiManager gets the LocallogSyslogdSetting
// with the specified index value.
// Returns the requested LocallogSyslogdSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - locallog syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLocallogSyslogdSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/locallog/syslogd/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogFetchClientProfile API operation for FortiManager creates a new Log FetchClient Profile.
// Returns the index value of the Log FetchClient Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogFetchClientProfile(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogFetchClientProfile API operation for FortiManager updates the specified Log FetchClient Profile.
// Returns the index value of the Log FetchClient Profile and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogFetchClientProfile(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogFetchClientProfile API operation for FortiManager deletes the specified Log FetchClient Profile.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogFetchClientProfile(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log-fetch/client-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogFetchClientProfile API operation for FortiManager gets the Log FetchClient Profile
// with the specified index value.
// Returns the requested Log FetchClient Profile value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogFetchClientProfile(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogFetchClientProfileDeviceFilter API operation for FortiManager creates a new Log FetchClient ProfileDevice Filter.
// Returns the index value of the Log FetchClient ProfileDevice Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile device-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogFetchClientProfileDeviceFilter(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile/{client-profile}/device-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogFetchClientProfileDeviceFilter API operation for FortiManager updates the specified Log FetchClient ProfileDevice Filter.
// Returns the index value of the Log FetchClient ProfileDevice Filter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile device-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogFetchClientProfileDeviceFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile/{client-profile}/device-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogFetchClientProfileDeviceFilter API operation for FortiManager deletes the specified Log FetchClient ProfileDevice Filter.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile device-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogFetchClientProfileDeviceFilter(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log-fetch/client-profile/{client-profile}/device-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogFetchClientProfileDeviceFilter API operation for FortiManager gets the Log FetchClient ProfileDevice Filter
// with the specified index value.
// Returns the requested Log FetchClient ProfileDevice Filter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch client-profile device-filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogFetchClientProfileDeviceFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/client-profile/{client-profile}/device-filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogFetchServerSettings API operation for FortiManager updates the specified Log FetchServer Settings.
// Returns the index value of the Log FetchServer Settings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch server-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogFetchServerSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/server-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogFetchServerSettings API operation for FortiManager deletes the specified Log FetchServer Settings.
// Returns error for service API and SDK errors.
// See the system - log-fetch server-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogFetchServerSettings(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log-fetch server-settings
	return
}

// ReadSystemLogFetchServerSettings API operation for FortiManager gets the Log FetchServer Settings
// with the specified index value.
// Returns the requested Log FetchServer Settings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log-fetch server-settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogFetchServerSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log-fetch/server-settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogAlert API operation for FortiManager updates the specified LogAlert.
// Returns the index value of the LogAlert and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogAlert(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogAlert API operation for FortiManager deletes the specified LogAlert.
// Returns error for service API and SDK errors.
// See the system - log alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogAlert(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log alert
	return
}

// ReadSystemLogAlert API operation for FortiManager gets the LogAlert
// with the specified index value.
// Returns the requested LogAlert value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log alert chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogAlert(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/alert"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogDeviceDisable API operation for FortiManager creates a new LogDevice Disable.
// Returns the index value of the LogDevice Disable and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log device-disable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogDeviceDisable(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/device-disable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogDeviceDisable API operation for FortiManager updates the specified LogDevice Disable.
// Returns the index value of the LogDevice Disable and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log device-disable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogDeviceDisable(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/device-disable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogDeviceDisable API operation for FortiManager deletes the specified LogDevice Disable.
// Returns error for service API and SDK errors.
// See the system - log device-disable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogDeviceDisable(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log/device-disable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogDeviceDisable API operation for FortiManager gets the LogDevice Disable
// with the specified index value.
// Returns the requested LogDevice Disable value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log device-disable chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogDeviceDisable(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/device-disable"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogFosPolicyStats API operation for FortiManager updates the specified LogFos Policy Stats.
// Returns the index value of the LogFos Policy Stats and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log fos-policy-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogFosPolicyStats(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/fos-policy-stats"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogFosPolicyStats API operation for FortiManager deletes the specified LogFos Policy Stats.
// Returns error for service API and SDK errors.
// See the system - log fos-policy-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogFosPolicyStats(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log fos-policy-stats
	return
}

// ReadSystemLogFosPolicyStats API operation for FortiManager gets the LogFos Policy Stats
// with the specified index value.
// Returns the requested LogFos Policy Stats value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log fos-policy-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogFosPolicyStats(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/fos-policy-stats"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogInterfaceStats API operation for FortiManager updates the specified LogInterface Stats.
// Returns the index value of the LogInterface Stats and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log interface-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogInterfaceStats(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/interface-stats"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogInterfaceStats API operation for FortiManager deletes the specified LogInterface Stats.
// Returns error for service API and SDK errors.
// See the system - log interface-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogInterfaceStats(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log interface-stats
	return
}

// ReadSystemLogInterfaceStats API operation for FortiManager gets the LogInterface Stats
// with the specified index value.
// Returns the requested LogInterface Stats value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log interface-stats chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogInterfaceStats(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/interface-stats"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogIoc API operation for FortiManager updates the specified LogIoc.
// Returns the index value of the LogIoc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ioc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogIoc(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ioc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogIoc API operation for FortiManager deletes the specified LogIoc.
// Returns error for service API and SDK errors.
// See the system - log ioc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogIoc(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log ioc
	return
}

// ReadSystemLogIoc API operation for FortiManager gets the LogIoc
// with the specified index value.
// Returns the requested LogIoc value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ioc chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogIoc(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ioc"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogMailDomain API operation for FortiManager creates a new LogMail Domain.
// Returns the index value of the LogMail Domain and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log mail-domain chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogMailDomain(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/mail-domain"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogMailDomain API operation for FortiManager updates the specified LogMail Domain.
// Returns the index value of the LogMail Domain and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log mail-domain chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogMailDomain(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/mail-domain"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogMailDomain API operation for FortiManager deletes the specified LogMail Domain.
// Returns error for service API and SDK errors.
// See the system - log mail-domain chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogMailDomain(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log/mail-domain"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogMailDomain API operation for FortiManager gets the LogMail Domain
// with the specified index value.
// Returns the requested LogMail Domain value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log mail-domain chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogMailDomain(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/mail-domain"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogRatelimit API operation for FortiManager updates the specified LogRatelimit.
// Returns the index value of the LogRatelimit and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogRatelimit(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogRatelimit API operation for FortiManager deletes the specified LogRatelimit.
// Returns error for service API and SDK errors.
// See the system - log ratelimit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogRatelimit(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log ratelimit
	return
}

// ReadSystemLogRatelimit API operation for FortiManager gets the LogRatelimit
// with the specified index value.
// Returns the requested LogRatelimit value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogRatelimit(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogRatelimitDevice API operation for FortiManager creates a new LogRatelimitDevice.
// Returns the index value of the LogRatelimitDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogRatelimitDevice(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogRatelimitDevice API operation for FortiManager updates the specified LogRatelimitDevice.
// Returns the index value of the LogRatelimitDevice and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogRatelimitDevice(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogRatelimitDevice API operation for FortiManager deletes the specified LogRatelimitDevice.
// Returns error for service API and SDK errors.
// See the system - log ratelimit device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogRatelimitDevice(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log/ratelimit/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogRatelimitDevice API operation for FortiManager gets the LogRatelimitDevice
// with the specified index value.
// Returns the requested LogRatelimitDevice value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit device chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogRatelimitDevice(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/device"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemLogRatelimitRatelimits API operation for FortiManager creates a new LogRatelimitRatelimits.
// Returns the index value of the LogRatelimitRatelimits and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit ratelimits chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemLogRatelimitRatelimits(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/ratelimits"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemLogRatelimitRatelimits API operation for FortiManager updates the specified LogRatelimitRatelimits.
// Returns the index value of the LogRatelimitRatelimits and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit ratelimits chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogRatelimitRatelimits(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/ratelimits"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogRatelimitRatelimits API operation for FortiManager deletes the specified LogRatelimitRatelimits.
// Returns error for service API and SDK errors.
// See the system - log ratelimit ratelimits chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogRatelimitRatelimits(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/log/ratelimit/ratelimits"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemLogRatelimitRatelimits API operation for FortiManager gets the LogRatelimitRatelimits
// with the specified index value.
// Returns the requested LogRatelimitRatelimits value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ratelimit ratelimits chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogRatelimitRatelimits(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ratelimit/ratelimits"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogSettings API operation for FortiManager updates the specified LogSettings.
// Returns the index value of the LogSettings and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogSettings(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogSettings API operation for FortiManager deletes the specified LogSettings.
// Returns error for service API and SDK errors.
// See the system - log settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogSettings(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log settings
	return
}

// ReadSystemLogSettings API operation for FortiManager gets the LogSettings
// with the specified index value.
// Returns the requested LogSettings value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogSettings(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogSettingsRollingAnalyzer API operation for FortiManager updates the specified LogSettingsRolling Analyzer.
// Returns the index value of the LogSettingsRolling Analyzer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-analyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogSettingsRollingAnalyzer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-analyzer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogSettingsRollingAnalyzer API operation for FortiManager deletes the specified LogSettingsRolling Analyzer.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-analyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogSettingsRollingAnalyzer(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log settings rolling-analyzer
	return
}

// ReadSystemLogSettingsRollingAnalyzer API operation for FortiManager gets the LogSettingsRolling Analyzer
// with the specified index value.
// Returns the requested LogSettingsRolling Analyzer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-analyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogSettingsRollingAnalyzer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-analyzer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogSettingsRollingLocal API operation for FortiManager updates the specified LogSettingsRolling Local.
// Returns the index value of the LogSettingsRolling Local and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogSettingsRollingLocal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogSettingsRollingLocal API operation for FortiManager deletes the specified LogSettingsRolling Local.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogSettingsRollingLocal(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log settings rolling-local
	return
}

// ReadSystemLogSettingsRollingLocal API operation for FortiManager gets the LogSettingsRolling Local
// with the specified index value.
// Returns the requested LogSettingsRolling Local value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-local chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogSettingsRollingLocal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-local"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogSettingsRollingRegular API operation for FortiManager updates the specified LogSettingsRolling Regular.
// Returns the index value of the LogSettingsRolling Regular and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-regular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogSettingsRollingRegular(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-regular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogSettingsRollingRegular API operation for FortiManager deletes the specified LogSettingsRolling Regular.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-regular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogSettingsRollingRegular(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log settings rolling-regular
	return
}

// ReadSystemLogSettingsRollingRegular API operation for FortiManager gets the LogSettingsRolling Regular
// with the specified index value.
// Returns the requested LogSettingsRolling Regular value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log settings rolling-regular chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogSettingsRollingRegular(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/settings/rolling-regular"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogTopology API operation for FortiManager updates the specified LogTopology.
// Returns the index value of the LogTopology and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log topology chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogTopology(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/topology"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogTopology API operation for FortiManager deletes the specified LogTopology.
// Returns error for service API and SDK errors.
// See the system - log topology chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogTopology(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log topology
	return
}

// ReadSystemLogTopology API operation for FortiManager gets the LogTopology
// with the specified index value.
// Returns the requested LogTopology value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log topology chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogTopology(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/topology"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemLogUeba API operation for FortiManager updates the specified LogUeba.
// Returns the index value of the LogUeba and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ueba chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemLogUeba(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ueba"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemLogUeba API operation for FortiManager deletes the specified LogUeba.
// Returns error for service API and SDK errors.
// See the system - log ueba chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemLogUeba(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - log ueba
	return
}

// ReadSystemLogUeba API operation for FortiManager gets the LogUeba
// with the specified index value.
// Returns the requested LogUeba value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - log ueba chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemLogUeba(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/log/ueba"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemMail API operation for FortiManager creates a new Mail.
// Returns the index value of the Mail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemMail(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemMail API operation for FortiManager updates the specified Mail.
// Returns the index value of the Mail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemMail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemMail API operation for FortiManager deletes the specified Mail.
// Returns error for service API and SDK errors.
// See the system - mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemMail(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemMail API operation for FortiManager gets the Mail
// with the specified index value.
// Returns the requested Mail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemMail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemMetadataAdmins API operation for FortiManager creates a new MetadataAdmins.
// Returns the index value of the MetadataAdmins and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - metadata admins chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemMetadataAdmins(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/metadata/admins"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemMetadataAdmins API operation for FortiManager updates the specified MetadataAdmins.
// Returns the index value of the MetadataAdmins and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - metadata admins chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemMetadataAdmins(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/metadata/admins"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + mkey

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemMetadataAdmins API operation for FortiManager deletes the specified MetadataAdmins.
// Returns error for service API and SDK errors.
// See the system - metadata admins chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemMetadataAdmins(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/metadata/admins"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + mkey

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemMetadataAdmins API operation for FortiManager gets the MetadataAdmins
// with the specified index value.
// Returns the requested MetadataAdmins value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - metadata admins chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemMetadataAdmins(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/metadata/admins"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + mkey

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemNtp API operation for FortiManager updates the specified Ntp.
// Returns the index value of the Ntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemNtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemNtp API operation for FortiManager deletes the specified Ntp.
// Returns error for service API and SDK errors.
// See the system - ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemNtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - ntp
	return
}

// ReadSystemNtp API operation for FortiManager gets the Ntp
// with the specified index value.
// Returns the requested Ntp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemNtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemNtpNtpserver API operation for FortiManager creates a new NtpNtpserver.
// Returns the index value of the NtpNtpserver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemNtpNtpserver(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemNtpNtpserver API operation for FortiManager updates the specified NtpNtpserver.
// Returns the index value of the NtpNtpserver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemNtpNtpserver(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemNtpNtpserver API operation for FortiManager deletes the specified NtpNtpserver.
// Returns error for service API and SDK errors.
// See the system - ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemNtpNtpserver(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemNtpNtpserver API operation for FortiManager gets the NtpNtpserver
// with the specified index value.
// Returns the requested NtpNtpserver value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemNtpNtpserver(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemPasswordPolicy API operation for FortiManager updates the specified Password Policy.
// Returns the index value of the Password Policy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemPasswordPolicy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemPasswordPolicy API operation for FortiManager deletes the specified Password Policy.
// Returns error for service API and SDK errors.
// See the system - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemPasswordPolicy(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - password-policy
	return
}

// ReadSystemPasswordPolicy API operation for FortiManager gets the Password Policy
// with the specified index value.
// Returns the requested Password Policy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - password-policy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemPasswordPolicy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/password-policy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemReportAutoCache API operation for FortiManager updates the specified ReportAuto Cache.
// Returns the index value of the ReportAuto Cache and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemReportAutoCache(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/auto-cache"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemReportAutoCache API operation for FortiManager deletes the specified ReportAuto Cache.
// Returns error for service API and SDK errors.
// See the system - report auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemReportAutoCache(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - report auto-cache
	return
}

// ReadSystemReportAutoCache API operation for FortiManager gets the ReportAuto Cache
// with the specified index value.
// Returns the requested ReportAuto Cache value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report auto-cache chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemReportAutoCache(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/auto-cache"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemReportEstBrowseTime API operation for FortiManager updates the specified ReportEst Browse Time.
// Returns the index value of the ReportEst Browse Time and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report est-browse-time chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemReportEstBrowseTime(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/est-browse-time"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemReportEstBrowseTime API operation for FortiManager deletes the specified ReportEst Browse Time.
// Returns error for service API and SDK errors.
// See the system - report est-browse-time chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemReportEstBrowseTime(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - report est-browse-time
	return
}

// ReadSystemReportEstBrowseTime API operation for FortiManager gets the ReportEst Browse Time
// with the specified index value.
// Returns the requested ReportEst Browse Time value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report est-browse-time chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemReportEstBrowseTime(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/est-browse-time"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemReportSetting API operation for FortiManager updates the specified ReportSetting.
// Returns the index value of the ReportSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemReportSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemReportSetting API operation for FortiManager deletes the specified ReportSetting.
// Returns error for service API and SDK errors.
// See the system - report setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemReportSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - report setting
	return
}

// ReadSystemReportSetting API operation for FortiManager gets the ReportSetting
// with the specified index value.
// Returns the requested ReportSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - report setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemReportSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/report/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemRoute API operation for FortiManager creates a new Route.
// Returns the index value of the Route and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemRoute(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemRoute API operation for FortiManager updates the specified Route.
// Returns the index value of the Route and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemRoute(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemRoute API operation for FortiManager deletes the specified Route.
// Returns error for service API and SDK errors.
// See the system - route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemRoute(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemRoute API operation for FortiManager gets the Route
// with the specified index value.
// Returns the requested Route value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemRoute(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/route"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemRoute6 API operation for FortiManager creates a new Route6.
// Returns the index value of the Route6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemRoute6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/route6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemRoute6 API operation for FortiManager updates the specified Route6.
// Returns the index value of the Route6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemRoute6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/route6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemRoute6 API operation for FortiManager deletes the specified Route6.
// Returns error for service API and SDK errors.
// See the system - route6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemRoute6(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/route6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemRoute6 API operation for FortiManager gets the Route6
// with the specified index value.
// Returns the requested Route6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - route6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemRoute6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/route6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemSaml API operation for FortiManager updates the specified Saml.
// Returns the index value of the Saml and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSaml(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSaml API operation for FortiManager deletes the specified Saml.
// Returns error for service API and SDK errors.
// See the system - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSaml(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - saml
	return
}

// ReadSystemSaml API operation for FortiManager gets the Saml
// with the specified index value.
// Returns the requested Saml value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSaml(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSamlFabricIdp API operation for FortiManager creates a new SamlFabric Idp.
// Returns the index value of the SamlFabric Idp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml fabric-idp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSamlFabricIdp(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/fabric-idp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSamlFabricIdp API operation for FortiManager updates the specified SamlFabric Idp.
// Returns the index value of the SamlFabric Idp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml fabric-idp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSamlFabricIdp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/fabric-idp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSamlFabricIdp API operation for FortiManager deletes the specified SamlFabric Idp.
// Returns error for service API and SDK errors.
// See the system - saml fabric-idp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSamlFabricIdp(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/saml/fabric-idp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSamlFabricIdp API operation for FortiManager gets the SamlFabric Idp
// with the specified index value.
// Returns the requested SamlFabric Idp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml fabric-idp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSamlFabricIdp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/fabric-idp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSamlServiceProviders API operation for FortiManager creates a new SamlService Providers.
// Returns the index value of the SamlService Providers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml service-providers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSamlServiceProviders(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/service-providers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSamlServiceProviders API operation for FortiManager updates the specified SamlService Providers.
// Returns the index value of the SamlService Providers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml service-providers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSamlServiceProviders(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/service-providers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSamlServiceProviders API operation for FortiManager deletes the specified SamlService Providers.
// Returns error for service API and SDK errors.
// See the system - saml service-providers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSamlServiceProviders(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/saml/service-providers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSamlServiceProviders API operation for FortiManager gets the SamlService Providers
// with the specified index value.
// Returns the requested SamlService Providers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - saml service-providers chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSamlServiceProviders(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/saml/service-providers"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSniffer API operation for FortiManager creates a new Sniffer.
// Returns the index value of the Sniffer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sniffer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSniffer(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sniffer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSniffer API operation for FortiManager updates the specified Sniffer.
// Returns the index value of the Sniffer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sniffer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSniffer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sniffer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSniffer API operation for FortiManager deletes the specified Sniffer.
// Returns error for service API and SDK errors.
// See the system - sniffer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSniffer(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/sniffer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSniffer API operation for FortiManager gets the Sniffer
// with the specified index value.
// Returns the requested Sniffer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sniffer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSniffer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/sniffer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSnmpCommunity API operation for FortiManager creates a new SnmpCommunity.
// Returns the index value of the SnmpCommunity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSnmpCommunity(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSnmpCommunity API operation for FortiManager updates the specified SnmpCommunity.
// Returns the index value of the SnmpCommunity and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSnmpCommunity(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSnmpCommunity API operation for FortiManager deletes the specified SnmpCommunity.
// Returns error for service API and SDK errors.
// See the system - snmp community chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSnmpCommunity(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/snmp/community"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSnmpCommunity API operation for FortiManager gets the SnmpCommunity
// with the specified index value.
// Returns the requested SnmpCommunity value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSnmpCommunity(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSnmpCommunityHosts API operation for FortiManager creates a new SnmpCommunityHosts.
// Returns the index value of the SnmpCommunityHosts and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSnmpCommunityHosts(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSnmpCommunityHosts API operation for FortiManager updates the specified SnmpCommunityHosts.
// Returns the index value of the SnmpCommunityHosts and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSnmpCommunityHosts(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSnmpCommunityHosts API operation for FortiManager deletes the specified SnmpCommunityHosts.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSnmpCommunityHosts(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSnmpCommunityHosts API operation for FortiManager gets the SnmpCommunityHosts
// with the specified index value.
// Returns the requested SnmpCommunityHosts value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSnmpCommunityHosts(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSnmpCommunityHosts6 API operation for FortiManager creates a new SnmpCommunityHosts6.
// Returns the index value of the SnmpCommunityHosts6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSnmpCommunityHosts6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSnmpCommunityHosts6 API operation for FortiManager updates the specified SnmpCommunityHosts6.
// Returns the index value of the SnmpCommunityHosts6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSnmpCommunityHosts6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSnmpCommunityHosts6 API operation for FortiManager deletes the specified SnmpCommunityHosts6.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSnmpCommunityHosts6(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSnmpCommunityHosts6 API operation for FortiManager gets the SnmpCommunityHosts6
// with the specified index value.
// Returns the requested SnmpCommunityHosts6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSnmpCommunityHosts6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemSnmpSysinfo API operation for FortiManager updates the specified SnmpSysinfo.
// Returns the index value of the SnmpSysinfo and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSnmpSysinfo(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/sysinfo"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSnmpSysinfo API operation for FortiManager deletes the specified SnmpSysinfo.
// Returns error for service API and SDK errors.
// See the system - snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSnmpSysinfo(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - snmp sysinfo
	return
}

// ReadSystemSnmpSysinfo API operation for FortiManager gets the SnmpSysinfo
// with the specified index value.
// Returns the requested SnmpSysinfo value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSnmpSysinfo(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/sysinfo"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSnmpUser API operation for FortiManager creates a new SnmpUser.
// Returns the index value of the SnmpUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSnmpUser(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSnmpUser API operation for FortiManager updates the specified SnmpUser.
// Returns the index value of the SnmpUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSnmpUser(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSnmpUser API operation for FortiManager deletes the specified SnmpUser.
// Returns error for service API and SDK errors.
// See the system - snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSnmpUser(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSnmpUser API operation for FortiManager gets the SnmpUser
// with the specified index value.
// Returns the requested SnmpUser value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSnmpUser(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemSocFabric API operation for FortiManager updates the specified Soc Fabric.
// Returns the index value of the Soc Fabric and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - soc-fabric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSocFabric(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/soc-fabric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSocFabric API operation for FortiManager deletes the specified Soc Fabric.
// Returns error for service API and SDK errors.
// See the system - soc-fabric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSocFabric(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - soc-fabric
	return
}

// ReadSystemSocFabric API operation for FortiManager gets the Soc Fabric
// with the specified index value.
// Returns the requested Soc Fabric value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - soc-fabric chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSocFabric(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/soc-fabric"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSocFabricTrustedList API operation for FortiManager creates a new Soc FabricTrusted List.
// Returns the index value of the Soc FabricTrusted List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - soc-fabric trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSocFabricTrustedList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/soc-fabric/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSocFabricTrustedList API operation for FortiManager updates the specified Soc FabricTrusted List.
// Returns the index value of the Soc FabricTrusted List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - soc-fabric trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSocFabricTrustedList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/soc-fabric/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSocFabricTrustedList API operation for FortiManager deletes the specified Soc FabricTrusted List.
// Returns error for service API and SDK errors.
// See the system - soc-fabric trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSocFabricTrustedList(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/soc-fabric/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSocFabricTrustedList API operation for FortiManager gets the Soc FabricTrusted List
// with the specified index value.
// Returns the requested Soc FabricTrusted List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - soc-fabric trusted-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSocFabricTrustedList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/soc-fabric/trusted-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemSql API operation for FortiManager updates the specified Sql.
// Returns the index value of the Sql and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSql(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSql API operation for FortiManager deletes the specified Sql.
// Returns error for service API and SDK errors.
// See the system - sql chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSql(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - sql
	return
}

// ReadSystemSql API operation for FortiManager gets the Sql
// with the specified index value.
// Returns the requested Sql value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSql(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSqlCustomIndex API operation for FortiManager creates a new SqlCustom Index.
// Returns the index value of the SqlCustom Index and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-index chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSqlCustomIndex(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-index"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSqlCustomIndex API operation for FortiManager updates the specified SqlCustom Index.
// Returns the index value of the SqlCustom Index and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-index chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSqlCustomIndex(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-index"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSqlCustomIndex API operation for FortiManager deletes the specified SqlCustom Index.
// Returns error for service API and SDK errors.
// See the system - sql custom-index chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSqlCustomIndex(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/sql/custom-index"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSqlCustomIndex API operation for FortiManager gets the SqlCustom Index
// with the specified index value.
// Returns the requested SqlCustom Index value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-index chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSqlCustomIndex(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-index"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSqlCustomSkipidx API operation for FortiManager creates a new SqlCustom Skipidx.
// Returns the index value of the SqlCustom Skipidx and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-skipidx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSqlCustomSkipidx(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-skipidx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSqlCustomSkipidx API operation for FortiManager updates the specified SqlCustom Skipidx.
// Returns the index value of the SqlCustom Skipidx and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-skipidx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSqlCustomSkipidx(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-skipidx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSqlCustomSkipidx API operation for FortiManager deletes the specified SqlCustom Skipidx.
// Returns error for service API and SDK errors.
// See the system - sql custom-skipidx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSqlCustomSkipidx(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/sql/custom-skipidx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSqlCustomSkipidx API operation for FortiManager gets the SqlCustom Skipidx
// with the specified index value.
// Returns the requested SqlCustom Skipidx value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql custom-skipidx chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSqlCustomSkipidx(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/custom-skipidx"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSqlTsIndexField API operation for FortiManager creates a new SqlTs Index Field.
// Returns the index value of the SqlTs Index Field and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql ts-index-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSqlTsIndexField(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/ts-index-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSqlTsIndexField API operation for FortiManager updates the specified SqlTs Index Field.
// Returns the index value of the SqlTs Index Field and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql ts-index-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSqlTsIndexField(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/ts-index-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSqlTsIndexField API operation for FortiManager deletes the specified SqlTs Index Field.
// Returns error for service API and SDK errors.
// See the system - sql ts-index-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSqlTsIndexField(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/sql/ts-index-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSqlTsIndexField API operation for FortiManager gets the SqlTs Index Field
// with the specified index value.
// Returns the requested SqlTs Index Field value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - sql ts-index-field chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSqlTsIndexField(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/sql/ts-index-field"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemSyslog API operation for FortiManager creates a new Syslog.
// Returns the index value of the Syslog and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - syslog chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemSyslog(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/syslog"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemSyslog API operation for FortiManager updates the specified Syslog.
// Returns the index value of the Syslog and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - syslog chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemSyslog(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/syslog"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemSyslog API operation for FortiManager deletes the specified Syslog.
// Returns error for service API and SDK errors.
// See the system - syslog chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemSyslog(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/syslog"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemSyslog API operation for FortiManager gets the Syslog
// with the specified index value.
// Returns the requested Syslog value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - syslog chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemSyslog(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/syslog"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemTemplate API operation for FortiManager creates a new Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/devprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemTemplate API operation for FortiManager updates the specified Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/devprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemTemplate API operation for FortiManager deletes the specified Template.
// Returns error for service API and SDK errors.
// See the system - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/devprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemTemplate API operation for FortiManager gets the Template
// with the specified index value.
// Returns the requested Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/devprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystemWebProxy API operation for FortiManager updates the specified Web Proxy.
// Returns the index value of the Web Proxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemWebProxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemWebProxy API operation for FortiManager deletes the specified Web Proxy.
// Returns error for service API and SDK errors.
// See the system - web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemWebProxy(mkey string, paradict map[string]string) (err error) {

	//No unset API for system - web-proxy
	return
}

// ReadSystemWebProxy API operation for FortiManager gets the Web Proxy
// with the specified index value.
// Returns the requested Web Proxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - web-proxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemWebProxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/web-proxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemWorkflowApprovalMatrix API operation for FortiManager creates a new WorkflowApproval Matrix.
// Returns the index value of the WorkflowApproval Matrix and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemWorkflowApprovalMatrix(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemWorkflowApprovalMatrix API operation for FortiManager updates the specified WorkflowApproval Matrix.
// Returns the index value of the WorkflowApproval Matrix and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemWorkflowApprovalMatrix(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemWorkflowApprovalMatrix API operation for FortiManager deletes the specified WorkflowApproval Matrix.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemWorkflowApprovalMatrix(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/workflow/approval-matrix"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemWorkflowApprovalMatrix API operation for FortiManager gets the WorkflowApproval Matrix
// with the specified index value.
// Returns the requested WorkflowApproval Matrix value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemWorkflowApprovalMatrix(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystemWorkflowApprovalMatrixApprover API operation for FortiManager creates a new WorkflowApproval MatrixApprover.
// Returns the index value of the WorkflowApproval MatrixApprover and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix approver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystemWorkflowApprovalMatrixApprover(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix/{approval-matrix}/approver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystemWorkflowApprovalMatrixApprover API operation for FortiManager updates the specified WorkflowApproval MatrixApprover.
// Returns the index value of the WorkflowApproval MatrixApprover and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix approver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystemWorkflowApprovalMatrixApprover(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix/{approval-matrix}/approver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystemWorkflowApprovalMatrixApprover API operation for FortiManager deletes the specified WorkflowApproval MatrixApprover.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix approver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystemWorkflowApprovalMatrixApprover(mkey string, paradict map[string]string) (err error) {
	path := "/cli/[*]/system/workflow/approval-matrix/{approval-matrix}/approver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystemWorkflowApprovalMatrixApprover API operation for FortiManager gets the WorkflowApproval MatrixApprover
// with the specified index value.
// Returns the requested WorkflowApproval MatrixApprover value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the system - workflow approval-matrix approver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystemWorkflowApprovalMatrixApprover(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/cli/[*]/system/workflow/approval-matrix/{approval-matrix}/approver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempDeviceProfileFortianalyzer API operation for FortiManager updates the specified DeviceProfileFortianalyzer.
// Returns the index value of the DeviceProfileFortianalyzer and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortianalyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempDeviceProfileFortianalyzer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/device/profile/fortianalyzer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempDeviceProfileFortianalyzer API operation for FortiManager deletes the specified DeviceProfileFortianalyzer.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortianalyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempDeviceProfileFortianalyzer(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - device profile fortianalyzer
	return
}

// ReadSystempDeviceProfileFortianalyzer API operation for FortiManager gets the DeviceProfileFortianalyzer
// with the specified index value.
// Returns the requested DeviceProfileFortianalyzer value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortianalyzer chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempDeviceProfileFortianalyzer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/device/profile/fortianalyzer"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempDeviceProfileFortiguard API operation for FortiManager updates the specified DeviceProfileFortiguard.
// Returns the index value of the DeviceProfileFortiguard and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempDeviceProfileFortiguard(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/device/profile/fortiguard"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempDeviceProfileFortiguard API operation for FortiManager deletes the specified DeviceProfileFortiguard.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempDeviceProfileFortiguard(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - device profile fortiguard
	return
}

// ReadSystempDeviceProfileFortiguard API operation for FortiManager gets the DeviceProfileFortiguard
// with the specified index value.
// Returns the requested DeviceProfileFortiguard value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - device profile fortiguard chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempDeviceProfileFortiguard(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/device/profile/fortiguard"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempLogFortianalyzerCloudSetting API operation for FortiManager updates the specified LogFortianalyzer CloudSetting.
// Returns the index value of the LogFortianalyzer CloudSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer-cloud setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogFortianalyzerCloudSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/fortianalyzer-cloud/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogFortianalyzerCloudSetting API operation for FortiManager deletes the specified LogFortianalyzer CloudSetting.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer-cloud setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogFortianalyzerCloudSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - log fortianalyzer-cloud setting
	return
}

// ReadSystempLogFortianalyzerCloudSetting API operation for FortiManager gets the LogFortianalyzer CloudSetting
// with the specified index value.
// Returns the requested LogFortianalyzer CloudSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer-cloud setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogFortianalyzerCloudSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/fortianalyzer-cloud/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempLogFortianalyzerSetting API operation for FortiManager updates the specified LogFortianalyzerSetting.
// Returns the index value of the LogFortianalyzerSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogFortianalyzerSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/fortianalyzer/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogFortianalyzerSetting API operation for FortiManager deletes the specified LogFortianalyzerSetting.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogFortianalyzerSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - log fortianalyzer setting
	return
}

// ReadSystempLogFortianalyzerSetting API operation for FortiManager gets the LogFortianalyzerSetting
// with the specified index value.
// Returns the requested LogFortianalyzerSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log fortianalyzer setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogFortianalyzerSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/fortianalyzer/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempLogSyslogdFilter API operation for FortiManager updates the specified LogSyslogdFilter.
// Returns the index value of the LogSyslogdFilter and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogSyslogdFilter(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogSyslogdFilter API operation for FortiManager deletes the specified LogSyslogdFilter.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogSyslogdFilter(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - log syslogd filter
	return
}

// ReadSystempLogSyslogdFilter API operation for FortiManager gets the LogSyslogdFilter
// with the specified index value.
// Returns the requested LogSyslogdFilter value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogSyslogdFilter(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempLogSyslogdFilterFreeStyle API operation for FortiManager creates a new LogSyslogdFilterFree Style.
// Returns the index value of the LogSyslogdFilterFree Style and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter free-style chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempLogSyslogdFilterFreeStyle(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter/free-style"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempLogSyslogdFilterFreeStyle API operation for FortiManager updates the specified LogSyslogdFilterFree Style.
// Returns the index value of the LogSyslogdFilterFree Style and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter free-style chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogSyslogdFilterFreeStyle(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter/free-style"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogSyslogdFilterFreeStyle API operation for FortiManager deletes the specified LogSyslogdFilterFree Style.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter free-style chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogSyslogdFilterFreeStyle(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter/free-style"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempLogSyslogdFilterFreeStyle API operation for FortiManager gets the LogSyslogdFilterFree Style
// with the specified index value.
// Returns the requested LogSyslogdFilterFree Style value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd filter free-style chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogSyslogdFilterFreeStyle(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/filter/free-style"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempLogSyslogdSetting API operation for FortiManager updates the specified LogSyslogdSetting.
// Returns the index value of the LogSyslogdSetting and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogSyslogdSetting(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogSyslogdSetting API operation for FortiManager deletes the specified LogSyslogdSetting.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogSyslogdSetting(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - log syslogd setting
	return
}

// ReadSystempLogSyslogdSetting API operation for FortiManager gets the LogSyslogdSetting
// with the specified index value.
// Returns the requested LogSyslogdSetting value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogSyslogdSetting(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempLogSyslogdSettingCustomFieldName API operation for FortiManager creates a new LogSyslogdSettingCustom Field Name.
// Returns the index value of the LogSyslogdSettingCustom Field Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting custom-field-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempLogSyslogdSettingCustomFieldName(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting/custom-field-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempLogSyslogdSettingCustomFieldName API operation for FortiManager updates the specified LogSyslogdSettingCustom Field Name.
// Returns the index value of the LogSyslogdSettingCustom Field Name and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting custom-field-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempLogSyslogdSettingCustomFieldName(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting/custom-field-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempLogSyslogdSettingCustomFieldName API operation for FortiManager deletes the specified LogSyslogdSettingCustom Field Name.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting custom-field-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempLogSyslogdSettingCustomFieldName(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting/custom-field-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempLogSyslogdSettingCustomFieldName API operation for FortiManager gets the LogSyslogdSettingCustom Field Name
// with the specified index value.
// Returns the requested LogSyslogdSettingCustom Field Name value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - log syslogd setting custom-field-name chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempLogSyslogdSettingCustomFieldName(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/log/syslogd/setting/custom-field-name"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemCentralManagement API operation for FortiManager updates the specified SystemCentral Management.
// Returns the index value of the SystemCentral Management and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system central-management chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemCentralManagement(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemCentralManagement API operation for FortiManager deletes the specified SystemCentral Management.
// Returns error for service API and SDK errors.
// See the systemp - system central-management chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemCentralManagement(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system central-management
	return
}

// ReadSystempSystemCentralManagement API operation for FortiManager gets the SystemCentral Management
// with the specified index value.
// Returns the requested SystemCentral Management value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system central-management chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemCentralManagement(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempSystemCentralManagementServerList API operation for FortiManager creates a new SystemCentral ManagementServer List.
// Returns the index value of the SystemCentral ManagementServer List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system central-management server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempSystemCentralManagementServerList(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempSystemCentralManagementServerList API operation for FortiManager updates the specified SystemCentral ManagementServer List.
// Returns the index value of the SystemCentral ManagementServer List and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system central-management server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemCentralManagementServerList(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemCentralManagementServerList API operation for FortiManager deletes the specified SystemCentral ManagementServer List.
// Returns error for service API and SDK errors.
// See the systemp - system central-management server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemCentralManagementServerList(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempSystemCentralManagementServerList API operation for FortiManager gets the SystemCentral ManagementServer List
// with the specified index value.
// Returns the requested SystemCentral ManagementServer List value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system central-management server-list chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemCentralManagementServerList(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/central-management/server-list"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemEmailServer API operation for FortiManager updates the specified SystemEmail Server.
// Returns the index value of the SystemEmail Server and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system email-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemEmailServer(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/email-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemEmailServer API operation for FortiManager deletes the specified SystemEmail Server.
// Returns error for service API and SDK errors.
// See the systemp - system email-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemEmailServer(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system email-server
	return
}

// ReadSystempSystemEmailServer API operation for FortiManager gets the SystemEmail Server
// with the specified index value.
// Returns the requested SystemEmail Server value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system email-server chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemEmailServer(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/email-server"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemGlobal API operation for FortiManager updates the specified SystemGlobal.
// Returns the index value of the SystemGlobal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemGlobal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/global"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemGlobal API operation for FortiManager deletes the specified SystemGlobal.
// Returns error for service API and SDK errors.
// See the systemp - system global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemGlobal(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system global
	return
}

// ReadSystempSystemGlobal API operation for FortiManager gets the SystemGlobal
// with the specified index value.
// Returns the requested SystemGlobal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system global chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemGlobal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/global"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemNtp API operation for FortiManager updates the specified SystemNtp.
// Returns the index value of the SystemNtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemNtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemNtp API operation for FortiManager deletes the specified SystemNtp.
// Returns error for service API and SDK errors.
// See the systemp - system ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemNtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system ntp
	return
}

// ReadSystempSystemNtp API operation for FortiManager gets the SystemNtp
// with the specified index value.
// Returns the requested SystemNtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system ntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemNtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempSystemNtpNtpserver API operation for FortiManager creates a new SystemNtpNtpserver.
// Returns the index value of the SystemNtpNtpserver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempSystemNtpNtpserver(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempSystemNtpNtpserver API operation for FortiManager updates the specified SystemNtpNtpserver.
// Returns the index value of the SystemNtpNtpserver and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemNtpNtpserver(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemNtpNtpserver API operation for FortiManager deletes the specified SystemNtpNtpserver.
// Returns error for service API and SDK errors.
// See the systemp - system ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemNtpNtpserver(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempSystemNtpNtpserver API operation for FortiManager gets the SystemNtpNtpserver
// with the specified index value.
// Returns the requested SystemNtpNtpserver value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system ntp ntpserver chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemNtpNtpserver(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/ntp/ntpserver"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgAdmin API operation for FortiManager updates the specified SystemReplacemsgAdmin.
// Returns the index value of the SystemReplacemsgAdmin and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgAdmin(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgAdmin API operation for FortiManager deletes the specified SystemReplacemsgAdmin.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgAdmin(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg admin
	return
}

// ReadSystempSystemReplacemsgAdmin API operation for FortiManager gets the SystemReplacemsgAdmin
// with the specified index value.
// Returns the requested SystemReplacemsgAdmin value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg admin chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgAdmin(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/admin"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgAlertmail API operation for FortiManager updates the specified SystemReplacemsgAlertmail.
// Returns the index value of the SystemReplacemsgAlertmail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgAlertmail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgAlertmail API operation for FortiManager deletes the specified SystemReplacemsgAlertmail.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgAlertmail(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg alertmail
	return
}

// ReadSystempSystemReplacemsgAlertmail API operation for FortiManager gets the SystemReplacemsgAlertmail
// with the specified index value.
// Returns the requested SystemReplacemsgAlertmail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg alertmail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgAlertmail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/alertmail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgAuth API operation for FortiManager updates the specified SystemReplacemsgAuth.
// Returns the index value of the SystemReplacemsgAuth and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgAuth(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgAuth API operation for FortiManager deletes the specified SystemReplacemsgAuth.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgAuth(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg auth
	return
}

// ReadSystempSystemReplacemsgAuth API operation for FortiManager gets the SystemReplacemsgAuth
// with the specified index value.
// Returns the requested SystemReplacemsgAuth value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg auth chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgAuth(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/auth"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgDeviceDetectionPortal API operation for FortiManager updates the specified SystemReplacemsgDevice Detection Portal.
// Returns the index value of the SystemReplacemsgDevice Detection Portal and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgDeviceDetectionPortal(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgDeviceDetectionPortal API operation for FortiManager deletes the specified SystemReplacemsgDevice Detection Portal.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgDeviceDetectionPortal(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg device-detection-portal
	return
}

// ReadSystempSystemReplacemsgDeviceDetectionPortal API operation for FortiManager gets the SystemReplacemsgDevice Detection Portal
// with the specified index value.
// Returns the requested SystemReplacemsgDevice Detection Portal value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg device-detection-portal chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgDeviceDetectionPortal(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/device-detection-portal"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgEc API operation for FortiManager updates the specified SystemReplacemsgEc.
// Returns the index value of the SystemReplacemsgEc and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgEc(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/ec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgEc API operation for FortiManager deletes the specified SystemReplacemsgEc.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgEc(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg ec
	return
}

// ReadSystempSystemReplacemsgEc API operation for FortiManager gets the SystemReplacemsgEc
// with the specified index value.
// Returns the requested SystemReplacemsgEc value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ec chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgEc(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/ec"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgFortiguardWf API operation for FortiManager updates the specified SystemReplacemsgFortiguard Wf.
// Returns the index value of the SystemReplacemsgFortiguard Wf and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgFortiguardWf(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgFortiguardWf API operation for FortiManager deletes the specified SystemReplacemsgFortiguard Wf.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgFortiguardWf(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg fortiguard-wf
	return
}

// ReadSystempSystemReplacemsgFortiguardWf API operation for FortiManager gets the SystemReplacemsgFortiguard Wf
// with the specified index value.
// Returns the requested SystemReplacemsgFortiguard Wf value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg fortiguard-wf chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgFortiguardWf(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/fortiguard-wf"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgFtp API operation for FortiManager updates the specified SystemReplacemsgFtp.
// Returns the index value of the SystemReplacemsgFtp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgFtp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgFtp API operation for FortiManager deletes the specified SystemReplacemsgFtp.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgFtp(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg ftp
	return
}

// ReadSystempSystemReplacemsgFtp API operation for FortiManager gets the SystemReplacemsgFtp
// with the specified index value.
// Returns the requested SystemReplacemsgFtp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg ftp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgFtp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/ftp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgHttp API operation for FortiManager updates the specified SystemReplacemsgHttp.
// Returns the index value of the SystemReplacemsgHttp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgHttp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgHttp API operation for FortiManager deletes the specified SystemReplacemsgHttp.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgHttp(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg http
	return
}

// ReadSystempSystemReplacemsgHttp API operation for FortiManager gets the SystemReplacemsgHttp
// with the specified index value.
// Returns the requested SystemReplacemsgHttp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg http chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgHttp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/http"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgMail API operation for FortiManager updates the specified SystemReplacemsgMail.
// Returns the index value of the SystemReplacemsgMail and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgMail(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgMail API operation for FortiManager deletes the specified SystemReplacemsgMail.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgMail(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg mail
	return
}

// ReadSystempSystemReplacemsgMail API operation for FortiManager gets the SystemReplacemsgMail
// with the specified index value.
// Returns the requested SystemReplacemsgMail value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mail chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgMail(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/mail"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgMms API operation for FortiManager updates the specified SystemReplacemsgMms.
// Returns the index value of the SystemReplacemsgMms and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgMms(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/mms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgMms API operation for FortiManager deletes the specified SystemReplacemsgMms.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgMms(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg mms
	return
}

// ReadSystempSystemReplacemsgMms API operation for FortiManager gets the SystemReplacemsgMms
// with the specified index value.
// Returns the requested SystemReplacemsgMms value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg mms chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgMms(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/mms"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgNacQuar API operation for FortiManager updates the specified SystemReplacemsgNac Quar.
// Returns the index value of the SystemReplacemsgNac Quar and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgNacQuar(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgNacQuar API operation for FortiManager deletes the specified SystemReplacemsgNac Quar.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgNacQuar(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg nac-quar
	return
}

// ReadSystempSystemReplacemsgNacQuar API operation for FortiManager gets the SystemReplacemsgNac Quar
// with the specified index value.
// Returns the requested SystemReplacemsgNac Quar value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nac-quar chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgNacQuar(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/nac-quar"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgNntp API operation for FortiManager updates the specified SystemReplacemsgNntp.
// Returns the index value of the SystemReplacemsgNntp and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgNntp(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgNntp API operation for FortiManager deletes the specified SystemReplacemsgNntp.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgNntp(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg nntp
	return
}

// ReadSystempSystemReplacemsgNntp API operation for FortiManager gets the SystemReplacemsgNntp
// with the specified index value.
// Returns the requested SystemReplacemsgNntp value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg nntp chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgNntp(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/nntp"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgSpam API operation for FortiManager updates the specified SystemReplacemsgSpam.
// Returns the index value of the SystemReplacemsgSpam and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgSpam(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgSpam API operation for FortiManager deletes the specified SystemReplacemsgSpam.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgSpam(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg spam
	return
}

// ReadSystempSystemReplacemsgSpam API operation for FortiManager gets the SystemReplacemsgSpam
// with the specified index value.
// Returns the requested SystemReplacemsgSpam value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg spam chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgSpam(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/spam"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgSslvpn API operation for FortiManager updates the specified SystemReplacemsgSslvpn.
// Returns the index value of the SystemReplacemsgSslvpn and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgSslvpn(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgSslvpn API operation for FortiManager deletes the specified SystemReplacemsgSslvpn.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgSslvpn(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg sslvpn
	return
}

// ReadSystempSystemReplacemsgSslvpn API operation for FortiManager gets the SystemReplacemsgSslvpn
// with the specified index value.
// Returns the requested SystemReplacemsgSslvpn value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg sslvpn chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgSslvpn(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/sslvpn"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgTrafficQuota API operation for FortiManager updates the specified SystemReplacemsgTraffic Quota.
// Returns the index value of the SystemReplacemsgTraffic Quota and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgTrafficQuota(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgTrafficQuota API operation for FortiManager deletes the specified SystemReplacemsgTraffic Quota.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgTrafficQuota(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg traffic-quota
	return
}

// ReadSystempSystemReplacemsgTrafficQuota API operation for FortiManager gets the SystemReplacemsgTraffic Quota
// with the specified index value.
// Returns the requested SystemReplacemsgTraffic Quota value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg traffic-quota chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgTrafficQuota(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/traffic-quota"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgUtm API operation for FortiManager updates the specified SystemReplacemsgUtm.
// Returns the index value of the SystemReplacemsgUtm and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgUtm(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgUtm API operation for FortiManager deletes the specified SystemReplacemsgUtm.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgUtm(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg utm
	return
}

// ReadSystempSystemReplacemsgUtm API operation for FortiManager gets the SystemReplacemsgUtm
// with the specified index value.
// Returns the requested SystemReplacemsgUtm value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg utm chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgUtm(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/utm"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemReplacemsgWebproxy API operation for FortiManager updates the specified SystemReplacemsgWebproxy.
// Returns the index value of the SystemReplacemsgWebproxy and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemReplacemsgWebproxy(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemReplacemsgWebproxy API operation for FortiManager deletes the specified SystemReplacemsgWebproxy.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemReplacemsgWebproxy(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system replacemsg webproxy
	return
}

// ReadSystempSystemReplacemsgWebproxy API operation for FortiManager gets the SystemReplacemsgWebproxy
// with the specified index value.
// Returns the requested SystemReplacemsgWebproxy value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system replacemsg webproxy chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemReplacemsgWebproxy(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/replacemsg/webproxy"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempSystemSnmpCommunityHosts6 API operation for FortiManager creates a new SystemSnmpCommunityHosts6.
// Returns the index value of the SystemSnmpCommunityHosts6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempSystemSnmpCommunityHosts6(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempSystemSnmpCommunityHosts6 API operation for FortiManager updates the specified SystemSnmpCommunityHosts6.
// Returns the index value of the SystemSnmpCommunityHosts6 and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemSnmpCommunityHosts6(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemSnmpCommunityHosts6 API operation for FortiManager deletes the specified SystemSnmpCommunityHosts6.
// Returns error for service API and SDK errors.
// See the systemp - system snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemSnmpCommunityHosts6(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempSystemSnmpCommunityHosts6 API operation for FortiManager gets the SystemSnmpCommunityHosts6
// with the specified index value.
// Returns the requested SystemSnmpCommunityHosts6 value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp community hosts6 chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemSnmpCommunityHosts6(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/community/{community}/hosts6"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateSystempSystemSnmpSysinfo API operation for FortiManager updates the specified SystemSnmpSysinfo.
// Returns the index value of the SystemSnmpSysinfo and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemSnmpSysinfo(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/sysinfo"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemSnmpSysinfo API operation for FortiManager deletes the specified SystemSnmpSysinfo.
// Returns error for service API and SDK errors.
// See the systemp - system snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemSnmpSysinfo(mkey string, paradict map[string]string) (err error) {

	//No unset API for systemp - system snmp sysinfo
	return
}

// ReadSystempSystemSnmpSysinfo API operation for FortiManager gets the SystemSnmpSysinfo
// with the specified index value.
// Returns the requested SystemSnmpSysinfo value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp sysinfo chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemSnmpSysinfo(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/sysinfo"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateSystempSystemSnmpUser API operation for FortiManager creates a new SystemSnmpUser.
// Returns the index value of the SystemSnmpUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateSystempSystemSnmpUser(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateSystempSystemSnmpUser API operation for FortiManager updates the specified SystemSnmpUser.
// Returns the index value of the SystemSnmpUser and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateSystempSystemSnmpUser(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteSystempSystemSnmpUser API operation for FortiManager deletes the specified SystemSnmpUser.
// Returns error for service API and SDK errors.
// See the systemp - system snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteSystempSystemSnmpUser(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadSystempSystemSnmpUser API operation for FortiManager gets the SystemSnmpUser
// with the specified index value.
// Returns the requested SystemSnmpUser value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the systemp - system snmp user chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadSystempSystemSnmpUser(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/devprof/{devprof}/system/snmp/user"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWanTemplate API operation for FortiManager creates a new Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wan - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWanTemplate(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/wanprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWanTemplate API operation for FortiManager updates the specified Template.
// Returns the index value of the Template and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wan - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWanTemplate(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/wanprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWanTemplate API operation for FortiManager deletes the specified Template.
// Returns error for service API and SDK errors.
// See the wan - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWanTemplate(mkey string, paradict map[string]string) (err error) {
	path := "/pm/wanprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWanTemplate API operation for FortiManager gets the Template
// with the specified index value.
// Returns the requested Template value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wan - template chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWanTemplate(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/wanprof/[*]"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateWantempSystemSdwan API operation for FortiManager updates the specified SystemSdwan.
// Returns the index value of the SystemSdwan and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwan(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwan API operation for FortiManager deletes the specified SystemSdwan.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwan(mkey string, paradict map[string]string) (err error) {

	//No unset API for wantemp - system sdwan
	return
}

// ReadWantempSystemSdwan API operation for FortiManager gets the SystemSdwan
// with the specified index value.
// Returns the requested SystemSdwan value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwan(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanDuplication API operation for FortiManager creates a new SystemSdwanDuplication.
// Returns the index value of the SystemSdwanDuplication and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan duplication chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanDuplication(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/duplication"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanDuplication API operation for FortiManager updates the specified SystemSdwanDuplication.
// Returns the index value of the SystemSdwanDuplication and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan duplication chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanDuplication(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/duplication"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanDuplication API operation for FortiManager deletes the specified SystemSdwanDuplication.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan duplication chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanDuplication(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/duplication"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanDuplication API operation for FortiManager gets the SystemSdwanDuplication
// with the specified index value.
// Returns the requested SystemSdwanDuplication value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan duplication chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanDuplication(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/duplication"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanHealthCheck API operation for FortiManager creates a new SystemSdwanHealth Check.
// Returns the index value of the SystemSdwanHealth Check and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanHealthCheck(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanHealthCheck API operation for FortiManager updates the specified SystemSdwanHealth Check.
// Returns the index value of the SystemSdwanHealth Check and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanHealthCheck(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanHealthCheck API operation for FortiManager deletes the specified SystemSdwanHealth Check.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanHealthCheck(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanHealthCheck API operation for FortiManager gets the SystemSdwanHealth Check
// with the specified index value.
// Returns the requested SystemSdwanHealth Check value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanHealthCheck(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanHealthCheckSla API operation for FortiManager creates a new SystemSdwanHealth CheckSla.
// Returns the index value of the SystemSdwanHealth CheckSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanHealthCheckSla(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanHealthCheckSla API operation for FortiManager updates the specified SystemSdwanHealth CheckSla.
// Returns the index value of the SystemSdwanHealth CheckSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanHealthCheckSla(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanHealthCheckSla API operation for FortiManager deletes the specified SystemSdwanHealth CheckSla.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanHealthCheckSla(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanHealthCheckSla API operation for FortiManager gets the SystemSdwanHealth CheckSla
// with the specified index value.
// Returns the requested SystemSdwanHealth CheckSla value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanHealthCheckSla(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanMembers API operation for FortiManager creates a new SystemSdwanMembers.
// Returns the index value of the SystemSdwanMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanMembers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanMembers API operation for FortiManager updates the specified SystemSdwanMembers.
// Returns the index value of the SystemSdwanMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanMembers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanMembers API operation for FortiManager deletes the specified SystemSdwanMembers.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanMembers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanMembers API operation for FortiManager gets the SystemSdwanMembers
// with the specified index value.
// Returns the requested SystemSdwanMembers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanMembers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateWantempSystemSdwanMembersMove API operation for FortiManager updates the specified SystemSdwanMembersMove.
// Returns the index value of the SystemSdwanMembersMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanMembersMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members/{members}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadWantempSystemSdwanMembersMove API operation for FortiManager gets the SystemSdwanMembersMove
// with the specified index value.
// Returns the requested SystemSdwanMembersMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan members move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanMembersMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"seq-num"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateWantempSystemSdwanNeighbor API operation for FortiManager creates a new SystemSdwanNeighbor.
// Returns the index value of the SystemSdwanNeighbor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanNeighbor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanNeighbor API operation for FortiManager updates the specified SystemSdwanNeighbor.
// Returns the index value of the SystemSdwanNeighbor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanNeighbor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanNeighbor API operation for FortiManager deletes the specified SystemSdwanNeighbor.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanNeighbor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanNeighbor API operation for FortiManager gets the SystemSdwanNeighbor
// with the specified index value.
// Returns the requested SystemSdwanNeighbor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanNeighbor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanService API operation for FortiManager creates a new SystemSdwanService.
// Returns the index value of the SystemSdwanService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanService(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanService API operation for FortiManager updates the specified SystemSdwanService.
// Returns the index value of the SystemSdwanService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanService API operation for FortiManager deletes the specified SystemSdwanService.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanService(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanService API operation for FortiManager gets the SystemSdwanService
// with the specified index value.
// Returns the requested SystemSdwanService value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateWantempSystemSdwanServiceMove API operation for FortiManager updates the specified SystemSdwanServiceMove.
// Returns the index value of the SystemSdwanServiceMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanServiceMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service/{service}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadWantempSystemSdwanServiceMove API operation for FortiManager gets the SystemSdwanServiceMove
// with the specified index value.
// Returns the requested SystemSdwanServiceMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanServiceMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"id"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// CreateWantempSystemSdwanServiceSla API operation for FortiManager creates a new SystemSdwanServiceSla.
// Returns the index value of the SystemSdwanServiceSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanServiceSla(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanServiceSla API operation for FortiManager updates the specified SystemSdwanServiceSla.
// Returns the index value of the SystemSdwanServiceSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanServiceSla(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanServiceSla API operation for FortiManager deletes the specified SystemSdwanServiceSla.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanServiceSla(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanServiceSla API operation for FortiManager gets the SystemSdwanServiceSla
// with the specified index value.
// Returns the requested SystemSdwanServiceSla value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanServiceSla(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemSdwanZone API operation for FortiManager creates a new SystemSdwanZone.
// Returns the index value of the SystemSdwanZone and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemSdwanZone(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemSdwanZone API operation for FortiManager updates the specified SystemSdwanZone.
// Returns the index value of the SystemSdwanZone and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanZone(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemSdwanZone API operation for FortiManager deletes the specified SystemSdwanZone.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemSdwanZone(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemSdwanZone API operation for FortiManager gets the SystemSdwanZone
// with the specified index value.
// Returns the requested SystemSdwanZone value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanZone(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// UpdateWantempSystemSdwanZoneMove API operation for FortiManager updates the specified SystemSdwanZoneMove.
// Returns the index value of the SystemSdwanZoneMove and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemSdwanZoneMove(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone/{zone}"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "move", params, true)
	return
}

// ReadWantempSystemSdwanZoneMove API operation for FortiManager gets the SystemSdwanZoneMove
// with the specified index value.
// Returns the requested SystemSdwanZoneMove value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system sdwan zone move chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemSdwanZoneMove(mkey string, paradict map[string]string) (listTmp []interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/sdwan/zone"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	params := map[string]interface{}{
		"fields": []string{"name"},
	}
	listTmp, err = readMove(c, path, "get", &params, true)
	return
}

// UpdateWantempSystemVirtualWanLink API operation for FortiManager updates the specified SystemVirtual Wan Link.
// Returns the index value of the SystemVirtual Wan Link and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLink(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLink API operation for FortiManager deletes the specified SystemVirtual Wan Link.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLink(mkey string, paradict map[string]string) (err error) {

	//No unset API for wantemp - system virtual-wan-link
	return
}

// ReadWantempSystemVirtualWanLink API operation for FortiManager gets the SystemVirtual Wan Link
// with the specified index value.
// Returns the requested SystemVirtual Wan Link value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLink(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkHealthCheck API operation for FortiManager creates a new SystemVirtual Wan LinkHealth Check.
// Returns the index value of the SystemVirtual Wan LinkHealth Check and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkHealthCheck(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkHealthCheck API operation for FortiManager updates the specified SystemVirtual Wan LinkHealth Check.
// Returns the index value of the SystemVirtual Wan LinkHealth Check and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkHealthCheck(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkHealthCheck API operation for FortiManager deletes the specified SystemVirtual Wan LinkHealth Check.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkHealthCheck(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkHealthCheck API operation for FortiManager gets the SystemVirtual Wan LinkHealth Check
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkHealth Check value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkHealthCheck(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkHealthCheckSla API operation for FortiManager creates a new SystemVirtual Wan LinkHealth CheckSla.
// Returns the index value of the SystemVirtual Wan LinkHealth CheckSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkHealthCheckSla(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkHealthCheckSla API operation for FortiManager updates the specified SystemVirtual Wan LinkHealth CheckSla.
// Returns the index value of the SystemVirtual Wan LinkHealth CheckSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkHealthCheckSla(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkHealthCheckSla API operation for FortiManager deletes the specified SystemVirtual Wan LinkHealth CheckSla.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkHealthCheckSla(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkHealthCheckSla API operation for FortiManager gets the SystemVirtual Wan LinkHealth CheckSla
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkHealth CheckSla value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link health-check sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkHealthCheckSla(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/health-check/{health-check}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkMembers API operation for FortiManager creates a new SystemVirtual Wan LinkMembers.
// Returns the index value of the SystemVirtual Wan LinkMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkMembers(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkMembers API operation for FortiManager updates the specified SystemVirtual Wan LinkMembers.
// Returns the index value of the SystemVirtual Wan LinkMembers and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkMembers(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkMembers API operation for FortiManager deletes the specified SystemVirtual Wan LinkMembers.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkMembers(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkMembers API operation for FortiManager gets the SystemVirtual Wan LinkMembers
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkMembers value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link members chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkMembers(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/members"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkNeighbor API operation for FortiManager creates a new SystemVirtual Wan LinkNeighbor.
// Returns the index value of the SystemVirtual Wan LinkNeighbor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkNeighbor(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkNeighbor API operation for FortiManager updates the specified SystemVirtual Wan LinkNeighbor.
// Returns the index value of the SystemVirtual Wan LinkNeighbor and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkNeighbor(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkNeighbor API operation for FortiManager deletes the specified SystemVirtual Wan LinkNeighbor.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkNeighbor(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkNeighbor API operation for FortiManager gets the SystemVirtual Wan LinkNeighbor
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkNeighbor value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link neighbor chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkNeighbor(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/neighbor"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkService API operation for FortiManager creates a new SystemVirtual Wan LinkService.
// Returns the index value of the SystemVirtual Wan LinkService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkService(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkService API operation for FortiManager updates the specified SystemVirtual Wan LinkService.
// Returns the index value of the SystemVirtual Wan LinkService and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkService(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkService API operation for FortiManager deletes the specified SystemVirtual Wan LinkService.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkService(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkService API operation for FortiManager gets the SystemVirtual Wan LinkService
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkService value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkService(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}

// CreateWantempSystemVirtualWanLinkServiceSla API operation for FortiManager creates a new SystemVirtual Wan LinkServiceSla.
// Returns the index value of the SystemVirtual Wan LinkServiceSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) CreateWantempSystemVirtualWanLinkServiceSla(params *map[string]interface{}, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	output, err = createUpdate(c, path, "add", params, false)
	return
}

// UpdateWantempSystemVirtualWanLinkServiceSla API operation for FortiManager updates the specified SystemVirtual Wan LinkServiceSla.
// Returns the index value of the SystemVirtual Wan LinkServiceSla and execution result when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) UpdateWantempSystemVirtualWanLinkServiceSla(params *map[string]interface{}, mkey string, paradict map[string]string) (output map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	output, err = createUpdate(c, path, "set", params, false)
	return
}

// DeleteWantempSystemVirtualWanLinkServiceSla API operation for FortiManager deletes the specified SystemVirtual Wan LinkServiceSla.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) DeleteWantempSystemVirtualWanLinkServiceSla(mkey string, paradict map[string]string) (err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	err = delete(c, path, "delete", false)
	return
}

// ReadWantempSystemVirtualWanLinkServiceSla API operation for FortiManager gets the SystemVirtual Wan LinkServiceSla
// with the specified index value.
// Returns the requested SystemVirtual Wan LinkServiceSla value when the request executes successfully.
// Returns error for service API and SDK errors.
// See the wantemp - system virtual-wan-link service sla chapter in the FortiManager Handbook - CLI Reference.
func (c *FortiSDKClient) ReadWantempSystemVirtualWanLinkServiceSla(mkey string, paradict map[string]string) (mapTmp map[string]interface{}, err error) {
	path := "/pm/config/[*]/wanprof/{wanprof}/system/virtual-wan-link/service/{service}/sla"
	path, err = replaceParaWithValue(path, paradict)
	if err != nil {
		return nil, fmt.Errorf("%v", err)
	}

	path += "/" + escapeURLString(mkey)

	mapTmp, err = read(c, path, "get", false)
	return
}
